{
	"id": "81b803f72cb423be9b2ab43b5e1c38d1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.24",
	"solcLongVersion": "0.8.24+commit.e11b9ed9",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/GeckoGold.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport \"@openzeppelin/contracts/token/ERC20/ERC20.sol\";\nimport \"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\";\nimport \"@openzeppelin/contracts/security/Pausable.sol\";\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\n\ncontract GeckoGold is ERC20, Ownable, ReentrancyGuard {\n    // Total supply: 420,690,000,000 tokens (with 18 decimals)\n    uint256 public constant TOTAL_SUPPLY = 420_690_000_000 * 10 ** 18;\n\n    uint256 public taxRate = 2; // 2% tax\n    uint256 public constant MAX_TAX_RATE = 10; // Maximum allowed tax rate (10%)\n    uint256 public constant MAX_TRANSFER_AMOUNT = 1_000_000 * 10 ** 18; // Maximum transfer per transaction\n    uint256 public constant MAX_ENGAGEMENT_POINTS = 10000; // Maximum engagement points per user\n\n    mapping(address => bool) private blacklistedAddresses;\n    mapping(address => bool) private whitelistAddresses;\n    mapping(address => uint256) public engagementPoints;\n    mapping(address => uint256) private lastClaimed;\n    uint256 public tradingStartBlock;\n    bool public tradingEnabled = false;\n    bool public paused = false;\n\n    constructor() ERC20(\"GeckoGold\", \"GECKO\") Ownable(msg.sender) {\n        // Distribution of tokens\n\n        // 25% Liquidity pool\n        _mint(msg.sender, (TOTAL_SUPPLY * 25) / 100);\n\n        // 15% Marketing and community rewards\n        _mint(0x02bFf1B7B4e9F2483b429afbA11DDB474F552678, (TOTAL_SUPPLY * 25) / 100); // Replace with your marketing wallet address\n\n        // 10% Team and development (vesting handled off-chain)\n        _mint(0x78F48f0a33277Ac7ff8672f9a71596759cf489D2, (TOTAL_SUPPLY * 50) / 100); // Replace with your team wallet address\n    }\n\n    // Function to set an address as blacklisted\n    function setBlacklist(address _address, bool _isBlacklisted) external onlyOwner {\n        blacklistedAddresses[_address] = _isBlacklisted;\n    }\n\n    // Modifier to check if an address is blacklisted\n    modifier notBlacklisted(address _address) {\n        require(!blacklistedAddresses[_address], \"Address is blacklisted\");\n        _;\n    }\n\n    // Modifier to check if trading is enabled or sender is whitelisted\n    modifier tradingGuard(address sender) {\n        require(tradingEnabled || whitelistAddresses[sender], \"Trading is not enabled\");\n        _;\n    }\n\n    // Modifier to ensure transfers are not paused\n    modifier whenNotPaused() {\n        require(!paused, \"Contract is paused\");\n        _;\n    }\n\n    // Modifier to enforce cooldown on claim rewards\n    modifier cooldownPeriod(address user) {\n        require(block.timestamp >= lastClaimed[user] + 1 days, \"Claim cooldown active\");\n        _;\n    }\n\n    // Modifier to prevent self-transfer\n    modifier noSelfTransfer(address recipient) {\n        require(recipient != address(this), \"Cannot transfer to the contract itself\");\n        _;\n    }\n\n    // Enable trading and set the start block\n    function enableTrading() external onlyOwner {\n        tradingEnabled = true;\n        tradingStartBlock = block.number;\n    }\n\n    // Add an address to the whitelist\n    function addToWhitelist(address _address) external onlyOwner {\n        whitelistAddresses[_address] = true;\n    }\n\n    // Remove an address from the whitelist\n    function removeFromWhitelist(address _address) external onlyOwner {\n        whitelistAddresses[_address] = false;\n    }\n\n    // Update the tax rate\n    function setTaxRate(uint256 newTaxRate) external onlyOwner {\n        require(newTaxRate <= MAX_TAX_RATE, \"Tax rate exceeds maximum limit\");\n        taxRate = newTaxRate;\n    }\n\n    // Overridden transfer function with additional checks\n    function transfer(address recipient, uint256 amount) public override notBlacklisted(msg.sender) tradingGuard(msg.sender) whenNotPaused noSelfTransfer(recipient) returns (bool) {\n        require(amount <= MAX_TRANSFER_AMOUNT, \"Exceeds maximum transfer amount\");\n\n        uint256 tax = (amount * taxRate) / 100;\n        uint256 amountAfterTax = amount - tax;\n\n        // Tax sent to contract owner\n        _transfer(msg.sender, owner(), tax);\n        return super.transfer(recipient, amountAfterTax);\n    }\n\n    // Function to burn tokens (users can burn their own tokens)\n    function burn(uint256 amount) external {\n        _burn(msg.sender, amount);\n        emit TokensBurned(msg.sender, amount);\n    }\n\n    // Function to burn supply (onlyOwner can call this)\n    function burnSupply(uint256 amount) external onlyOwner {\n        _burn(owner(), amount);\n        emit TokensBurned(owner(), amount);\n    }\n\n    // Function to update engagement points\n    function updateEngagementPoints(address user, uint256 points) external onlyOwner {\n        require(engagementPoints[user] + points <= MAX_ENGAGEMENT_POINTS, \"Exceeds maximum engagement points\");\n        engagementPoints[user] += points;\n        emit EngagementPointsUpdated(user, engagementPoints[user]);\n    }\n\n    // Function to deduct engagement points\n    function deductEngagementPoints(address user, uint256 points) external onlyOwner {\n        require(engagementPoints[user] >= points, \"Not enough points\");\n        engagementPoints[user] -= points;\n        emit EngagementPointsUpdated(user, engagementPoints[user]);\n    }\n\n    // Function to claim rewards based on engagement points\n    function claimReward() external whenNotPaused notBlacklisted(msg.sender) cooldownPeriod(msg.sender) {\n        uint256 reward = engagementPoints[msg.sender];\n        require(reward > 0, \"No rewards available\");\n        require(balanceOf(owner()) >= reward, \"Insufficient reward supply\");\n\n        // Reset engagement points\n        engagementPoints[msg.sender] = 0;\n\n        // Update last claimed timestamp\n        lastClaimed[msg.sender] = block.timestamp;\n\n        // Transfer reward tokens\n        _transfer(owner(), msg.sender, reward);\n        emit RewardClaimed(msg.sender, reward);\n    }\n\n    // Function to retrieve the balance of any address\n    function balance(address account) external view returns (uint256) {\n        return balanceOf(account);\n    }\n\n    // Function to withdraw the contract's ETH balance (protected against reentrancy)\n    function withdrawBalance() external onlyOwner nonReentrant {\n        payable(owner()).transfer(address(this).balance);\n    }\n\n    // Rescue tokens sent to the contract\n    function rescueTokens(address token, uint256 amount) external onlyOwner {\n        IERC20(token).transfer(owner(), amount);\n    }\n\n    // Emergency pause for transfers\n    function pause() external onlyOwner {\n        paused = true;\n    }\n\n    function unpause() external onlyOwner {\n        paused = false;\n    }\n\n    // Events for transparency\n    event TokensBurned(address indexed user, uint256 amount);\n    event RewardClaimed(address indexed user, uint256 amount);\n    event EngagementPointsUpdated(address indexed user, uint256 newPoints);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be _NOT_ENTERED\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == _ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/ERC20Burnable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ERC20} from \"../ERC20.sol\";\nimport {Context} from \"../../../utils/Context.sol\";\n\n/**\n * @dev Extension of {ERC20} that allows token holders to destroy both their own\n * tokens and those that they have an allowance for, in a way that can be\n * recognized off-chain (via event analysis).\n */\nabstract contract ERC20Burnable is Context, ERC20 {\n    /**\n     * @dev Destroys a `value` amount of tokens from the caller.\n     *\n     * See {ERC20-_burn}.\n     */\n    function burn(uint256 value) public virtual {\n        _burn(_msgSender(), value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, deducting from\n     * the caller's allowance.\n     *\n     * See {ERC20-_burn} and {ERC20-allowance}.\n     *\n     * Requirements:\n     *\n     * - the caller must have allowance for ``accounts``'s tokens of at least\n     * `value`.\n     */\n    function burnFrom(address account, uint256 value) public virtual {\n        _spendAllowance(account, _msgSender(), value);\n        _burn(account, value);\n    }\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"./IERC20.sol\";\nimport {IERC20Metadata} from \"./extensions/IERC20Metadata.sol\";\nimport {Context} from \"../../utils/Context.sol\";\nimport {IERC20Errors} from \"../../interfaces/draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC-20\n * applications.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Skips emitting an {Approval} event indicating an allowance update. This is not\n     * required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     *\n     * ```solidity\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC-20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC-721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC-1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC-20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC-20 standard as defined in the ERC.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "cancun"
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC-721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 302,
								"contract": "@openzeppelin/contracts/security/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 403,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC-20 applications.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "@openzeppelin/contracts/token/ERC20/ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC-20 standard as defined in the ERC.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC-20 standard as defined in the ERC.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ERC20Burnable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "burnFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"burn(uint256)": {
								"details": "Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}."
							},
							"burnFrom(address,uint256)": {
								"details": "Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnFrom(address,uint256)": "79cc6790",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"burnFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Extension of {ERC20} that allows token holders to destroy both their own tokens and those that they have an allowance for, in a way that can be recognized off-chain (via event analysis).\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(uint256)\":{\"details\":\"Destroys a `value` amount of tokens from the caller. See {ERC20-_burn}.\"},\"burnFrom(address,uint256)\":{\"details\":\"Destroys a `value` amount of tokens from `account`, deducting from the caller's allowance. See {ERC20-_burn} and {ERC20-allowance}. Requirements: - the caller must have allowance for ``accounts``'s tokens of at least `value`.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":\"ERC20Burnable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol:ERC20Burnable",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC-20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC-20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/GeckoGold.sol": {
				"GeckoGold": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newPoints",
									"type": "uint256"
								}
							],
							"name": "EngagementPointsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "RewardClaimed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "TokensBurned",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_ENGAGEMENT_POINTS",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TAX_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "MAX_TRANSFER_AMOUNT",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "TOTAL_SUPPLY",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "addToWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burnSupply",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "claimReward",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "points",
									"type": "uint256"
								}
							],
							"name": "deductEngagementPoints",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "enableTrading",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "engagementPoints",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"name": "removeFromWhitelist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "rescueTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_isBlacklisted",
									"type": "bool"
								}
							],
							"name": "setBlacklist",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "newTaxRate",
									"type": "uint256"
								}
							],
							"name": "setTaxRate",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "taxRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingEnabled",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "tradingStartBlock",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "points",
									"type": "uint256"
								}
							],
							"name": "updateEngagementPoints",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "withdrawBalance",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/GeckoGold.sol\":362:6948  contract GeckoGold is ERC20, Ownable, ReentrancyGuard {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/GeckoGold.sol\":582:583  2 */\n  0x02\n    /* \"contracts/GeckoGold.sol\":557:583  uint256 public taxRate = 2 */\n  0x07\n  sstore\n    /* \"contracts/GeckoGold.sol\":1179:1184  false */\n  0x00\n    /* \"contracts/GeckoGold.sol\":1150:1184  bool public tradingEnabled = false */\n  0x0d\n  exp(0x0100, 0x00)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GeckoGold.sol\":1211:1216  false */\n  0x00\n    /* \"contracts/GeckoGold.sol\":1190:1216  bool public paused = false */\n  0x0d\n  exp(0x0100, 0x01)\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/GeckoGold.sol\":1223:1783  constructor() ERC20(\"GeckoGold\", \"GECKO\") Ownable(msg.sender) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"contracts/GeckoGold.sol\":1273:1283  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x09\n  dup2\n  mstore\n  0x20\n  add\n  0x4765636b6f476f6c640000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x05\n  dup2\n  mstore\n  0x20\n  add\n  0x4745434b4f000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1675:1680  name_ */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1672  _name */\n  0x03\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1667:1680  _name = name_ */\n  swap1\n  dup2\n  tag_7\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_7:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1700:1707  symbol_ */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1697  _symbol */\n  0x04\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1690:1707  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_9\n  swap2\n  swap1\n  tag_8\n  jump\t// in\ntag_9:\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1601:1714  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1828  _status */\n  0x06\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1821:1843  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/GeckoGold.sol\":1360:1404  _mint(msg.sender, (TOTAL_SUPPLY * 25) / 100) */\n  tag_18\n    /* \"contracts/GeckoGold.sol\":1366:1376  msg.sender */\n  caller\n    /* \"contracts/GeckoGold.sol\":1400:1403  100 */\n  0x64\n    /* \"contracts/GeckoGold.sol\":1394:1396  25 */\n  0x19\n    /* \"contracts/GeckoGold.sol\":524:550  420_690_000_000 * 10 ** 18 */\n  0x054f529ca52576bc6892000000\n    /* \"contracts/GeckoGold.sol\":1379:1396  TOTAL_SUPPLY * 25 */\n  tag_19\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_19:\n    /* \"contracts/GeckoGold.sol\":1378:1403  (TOTAL_SUPPLY * 25) / 100 */\n  tag_21\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_21:\n    /* \"contracts/GeckoGold.sol\":1360:1365  _mint */\n  shl(0x20, tag_23)\n    /* \"contracts/GeckoGold.sol\":1360:1404  _mint(msg.sender, (TOTAL_SUPPLY * 25) / 100) */\n  0x20\n  shr\n  jump\t// in\ntag_18:\n    /* \"contracts/GeckoGold.sol\":1462:1538  _mint(0x02bFf1B7B4e9F2483b429afbA11DDB474F552678, (TOTAL_SUPPLY * 25) / 100) */\n  tag_24\n    /* \"contracts/GeckoGold.sol\":1468:1510  0x02bFf1B7B4e9F2483b429afbA11DDB474F552678 */\n  0x02bff1b7b4e9f2483b429afba11ddb474f552678\n    /* \"contracts/GeckoGold.sol\":1534:1537  100 */\n  0x64\n    /* \"contracts/GeckoGold.sol\":1528:1530  25 */\n  0x19\n    /* \"contracts/GeckoGold.sol\":524:550  420_690_000_000 * 10 ** 18 */\n  0x054f529ca52576bc6892000000\n    /* \"contracts/GeckoGold.sol\":1513:1530  TOTAL_SUPPLY * 25 */\n  tag_25\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_25:\n    /* \"contracts/GeckoGold.sol\":1512:1537  (TOTAL_SUPPLY * 25) / 100 */\n  tag_26\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_26:\n    /* \"contracts/GeckoGold.sol\":1462:1467  _mint */\n  shl(0x20, tag_23)\n    /* \"contracts/GeckoGold.sol\":1462:1538  _mint(0x02bFf1B7B4e9F2483b429afbA11DDB474F552678, (TOTAL_SUPPLY * 25) / 100) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"contracts/GeckoGold.sol\":1659:1735  _mint(0x78F48f0a33277Ac7ff8672f9a71596759cf489D2, (TOTAL_SUPPLY * 50) / 100) */\n  tag_27\n    /* \"contracts/GeckoGold.sol\":1665:1707  0x78F48f0a33277Ac7ff8672f9a71596759cf489D2 */\n  0x78f48f0a33277ac7ff8672f9a71596759cf489d2\n    /* \"contracts/GeckoGold.sol\":1731:1734  100 */\n  0x64\n    /* \"contracts/GeckoGold.sol\":1725:1727  50 */\n  0x32\n    /* \"contracts/GeckoGold.sol\":524:550  420_690_000_000 * 10 ** 18 */\n  0x054f529ca52576bc6892000000\n    /* \"contracts/GeckoGold.sol\":1710:1727  TOTAL_SUPPLY * 50 */\n  tag_28\n  swap2\n  swap1\n  tag_20\n  jump\t// in\ntag_28:\n    /* \"contracts/GeckoGold.sol\":1709:1734  (TOTAL_SUPPLY * 50) / 100 */\n  tag_29\n  swap2\n  swap1\n  tag_22\n  jump\t// in\ntag_29:\n    /* \"contracts/GeckoGold.sol\":1659:1664  _mint */\n  shl(0x20, tag_23)\n    /* \"contracts/GeckoGold.sol\":1659:1735  _mint(0x78F48f0a33277Ac7ff8672f9a71596759cf489D2, (TOTAL_SUPPLY * 50) / 100) */\n  0x20\n  shr\n  jump\t// in\ntag_27:\n    /* \"contracts/GeckoGold.sol\":362:6948  contract GeckoGold is ERC20, Ownable, ReentrancyGuard {... */\n  jump(tag_30)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n  0x05\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n  0x05\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\ntag_23:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7547:7548  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7535  account */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7528:7549  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\n  tag_33\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7601:7602  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7572:7604  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_34\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_34:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7524:7615  if (account == address(0)) {... */\ntag_33:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  tag_35\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7640:7641  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7644:7651  account */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7653:7658  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7631  _update */\n  shl(0x20, tag_36)\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7624:7659  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_35:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7458:7666  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_36:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  tag_38\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_39\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n  jump(tag_41)\ntag_38:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n  dup6\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n  lt\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n  iszero\n  tag_42\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_43\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\ntag_42:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n  dup7\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\ntag_41:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n  dup3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  tag_45\n  jumpi\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n  0x02\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n  jump(tag_46)\ntag_45:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  dup1\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n  dup5\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\ntag_46:\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n  dup2\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n  dup4\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n  mload(0x40)\n  tag_47\n  swap2\n  swap1\n  tag_48\n  jump\t// in\ntag_47:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:106   */\ntag_49:\n    /* \"#utility.yul\":59:65   */\n  0x00\n    /* \"#utility.yul\":93:98   */\n  dup2\n    /* \"#utility.yul\":87:99   */\n  mload\n    /* \"#utility.yul\":77:99   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:106   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":112:292   */\ntag_50:\n    /* \"#utility.yul\":160:237   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":157:158   */\n  0x00\n    /* \"#utility.yul\":150:238   */\n  mstore\n    /* \"#utility.yul\":257:261   */\n  0x41\n    /* \"#utility.yul\":254:255   */\n  0x04\n    /* \"#utility.yul\":247:262   */\n  mstore\n    /* \"#utility.yul\":281:285   */\n  0x24\n    /* \"#utility.yul\":278:279   */\n  0x00\n    /* \"#utility.yul\":271:286   */\n  revert\n    /* \"#utility.yul\":298:478   */\ntag_51:\n    /* \"#utility.yul\":346:423   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":343:344   */\n  0x00\n    /* \"#utility.yul\":336:424   */\n  mstore\n    /* \"#utility.yul\":443:447   */\n  0x22\n    /* \"#utility.yul\":440:441   */\n  0x04\n    /* \"#utility.yul\":433:448   */\n  mstore\n    /* \"#utility.yul\":467:471   */\n  0x24\n    /* \"#utility.yul\":464:465   */\n  0x00\n    /* \"#utility.yul\":457:472   */\n  revert\n    /* \"#utility.yul\":484:804   */\ntag_52:\n    /* \"#utility.yul\":528:534   */\n  0x00\n    /* \"#utility.yul\":565:566   */\n  0x02\n    /* \"#utility.yul\":559:563   */\n  dup3\n    /* \"#utility.yul\":555:567   */\n  div\n    /* \"#utility.yul\":545:567   */\n  swap1\n  pop\n    /* \"#utility.yul\":612:613   */\n  0x01\n    /* \"#utility.yul\":606:610   */\n  dup3\n    /* \"#utility.yul\":602:614   */\n  and\n    /* \"#utility.yul\":633:651   */\n  dup1\n    /* \"#utility.yul\":623:704   */\n  tag_80\n  jumpi\n    /* \"#utility.yul\":689:693   */\n  0x7f\n    /* \"#utility.yul\":681:687   */\n  dup3\n    /* \"#utility.yul\":677:694   */\n  and\n    /* \"#utility.yul\":667:694   */\n  swap2\n  pop\n    /* \"#utility.yul\":623:704   */\ntag_80:\n    /* \"#utility.yul\":751:753   */\n  0x20\n    /* \"#utility.yul\":743:749   */\n  dup3\n    /* \"#utility.yul\":740:754   */\n  lt\n    /* \"#utility.yul\":720:738   */\n  dup2\n    /* \"#utility.yul\":717:755   */\n  sub\n    /* \"#utility.yul\":714:798   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":770:788   */\n  tag_82\n  tag_51\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":714:798   */\ntag_81:\n    /* \"#utility.yul\":535:804   */\n  pop\n    /* \"#utility.yul\":484:804   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":810:951   */\ntag_53:\n    /* \"#utility.yul\":859:863   */\n  0x00\n    /* \"#utility.yul\":882:885   */\n  dup2\n    /* \"#utility.yul\":874:885   */\n  swap1\n  pop\n    /* \"#utility.yul\":905:908   */\n  dup2\n    /* \"#utility.yul\":902:903   */\n  0x00\n    /* \"#utility.yul\":895:909   */\n  mstore\n    /* \"#utility.yul\":939:943   */\n  0x20\n    /* \"#utility.yul\":936:937   */\n  0x00\n    /* \"#utility.yul\":926:944   */\n  keccak256\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":810:951   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":957:1050   */\ntag_54:\n    /* \"#utility.yul\":994:1000   */\n  0x00\n    /* \"#utility.yul\":1041:1043   */\n  0x20\n    /* \"#utility.yul\":1036:1038   */\n  0x1f\n    /* \"#utility.yul\":1029:1034   */\n  dup4\n    /* \"#utility.yul\":1025:1039   */\n  add\n    /* \"#utility.yul\":1021:1044   */\n  div\n    /* \"#utility.yul\":1011:1044   */\n  swap1\n  pop\n    /* \"#utility.yul\":957:1050   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1056:1163   */\ntag_55:\n    /* \"#utility.yul\":1100:1108   */\n  0x00\n    /* \"#utility.yul\":1150:1155   */\n  dup3\n    /* \"#utility.yul\":1144:1148   */\n  dup3\n    /* \"#utility.yul\":1140:1156   */\n  shl\n    /* \"#utility.yul\":1119:1156   */\n  swap1\n  pop\n    /* \"#utility.yul\":1056:1163   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1169:1562   */\ntag_56:\n    /* \"#utility.yul\":1238:1244   */\n  0x00\n    /* \"#utility.yul\":1288:1289   */\n  0x08\n    /* \"#utility.yul\":1276:1286   */\n  dup4\n    /* \"#utility.yul\":1272:1290   */\n  mul\n    /* \"#utility.yul\":1311:1408   */\n  tag_87\n    /* \"#utility.yul\":1341:1407   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":1330:1339   */\n  dup3\n    /* \"#utility.yul\":1311:1408   */\n  tag_55\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":1429:1468   */\n  tag_88\n    /* \"#utility.yul\":1459:1467   */\n  dup7\n    /* \"#utility.yul\":1448:1457   */\n  dup4\n    /* \"#utility.yul\":1429:1468   */\n  tag_55\n  jump\t// in\ntag_88:\n    /* \"#utility.yul\":1417:1468   */\n  swap6\n  pop\n    /* \"#utility.yul\":1501:1505   */\n  dup1\n    /* \"#utility.yul\":1497:1506   */\n  not\n    /* \"#utility.yul\":1490:1495   */\n  dup5\n    /* \"#utility.yul\":1486:1507   */\n  and\n    /* \"#utility.yul\":1477:1507   */\n  swap4\n  pop\n    /* \"#utility.yul\":1550:1554   */\n  dup1\n    /* \"#utility.yul\":1540:1548   */\n  dup7\n    /* \"#utility.yul\":1536:1555   */\n  and\n    /* \"#utility.yul\":1529:1534   */\n  dup5\n    /* \"#utility.yul\":1526:1556   */\n  or\n    /* \"#utility.yul\":1516:1556   */\n  swap3\n  pop\n    /* \"#utility.yul\":1245:1562   */\n  pop\n  pop\n    /* \"#utility.yul\":1169:1562   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1568:1645   */\ntag_57:\n    /* \"#utility.yul\":1605:1612   */\n  0x00\n    /* \"#utility.yul\":1634:1639   */\n  dup2\n    /* \"#utility.yul\":1623:1639   */\n  swap1\n  pop\n    /* \"#utility.yul\":1568:1645   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1651:1711   */\ntag_58:\n    /* \"#utility.yul\":1679:1682   */\n  0x00\n    /* \"#utility.yul\":1700:1705   */\n  dup2\n    /* \"#utility.yul\":1693:1705   */\n  swap1\n  pop\n    /* \"#utility.yul\":1651:1711   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1717:1859   */\ntag_59:\n    /* \"#utility.yul\":1767:1776   */\n  0x00\n    /* \"#utility.yul\":1800:1853   */\n  tag_92\n    /* \"#utility.yul\":1818:1852   */\n  tag_93\n    /* \"#utility.yul\":1827:1851   */\n  tag_94\n    /* \"#utility.yul\":1845:1850   */\n  dup5\n    /* \"#utility.yul\":1827:1851   */\n  tag_57\n  jump\t// in\ntag_94:\n    /* \"#utility.yul\":1818:1852   */\n  tag_58\n  jump\t// in\ntag_93:\n    /* \"#utility.yul\":1800:1853   */\n  tag_57\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1787:1853   */\n  swap1\n  pop\n    /* \"#utility.yul\":1717:1859   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1865:1940   */\ntag_60:\n    /* \"#utility.yul\":1908:1911   */\n  0x00\n    /* \"#utility.yul\":1929:1934   */\n  dup2\n    /* \"#utility.yul\":1922:1934   */\n  swap1\n  pop\n    /* \"#utility.yul\":1865:1940   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1946:2215   */\ntag_61:\n    /* \"#utility.yul\":2056:2095   */\n  tag_97\n    /* \"#utility.yul\":2087:2094   */\n  dup4\n    /* \"#utility.yul\":2056:2095   */\n  tag_59\n  jump\t// in\ntag_97:\n    /* \"#utility.yul\":2117:2208   */\n  tag_98\n    /* \"#utility.yul\":2166:2207   */\n  tag_99\n    /* \"#utility.yul\":2190:2206   */\n  dup3\n    /* \"#utility.yul\":2166:2207   */\n  tag_60\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2158:2164   */\n  dup5\n    /* \"#utility.yul\":2151:2155   */\n  dup5\n    /* \"#utility.yul\":2145:2156   */\n  sload\n    /* \"#utility.yul\":2117:2208   */\n  tag_56\n  jump\t// in\ntag_98:\n    /* \"#utility.yul\":2111:2115   */\n  dup3\n    /* \"#utility.yul\":2104:2209   */\n  sstore\n    /* \"#utility.yul\":2022:2215   */\n  pop\n    /* \"#utility.yul\":1946:2215   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2221:2294   */\ntag_62:\n    /* \"#utility.yul\":2266:2269   */\n  0x00\n    /* \"#utility.yul\":2221:2294   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":2300:2489   */\ntag_63:\n    /* \"#utility.yul\":2377:2409   */\n  tag_102\n  tag_62\n  jump\t// in\ntag_102:\n    /* \"#utility.yul\":2418:2483   */\n  tag_103\n    /* \"#utility.yul\":2476:2482   */\n  dup2\n    /* \"#utility.yul\":2468:2474   */\n  dup5\n    /* \"#utility.yul\":2462:2466   */\n  dup5\n    /* \"#utility.yul\":2418:2483   */\n  tag_61\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2353:2489   */\n  pop\n    /* \"#utility.yul\":2300:2489   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2495:2681   */\ntag_64:\n    /* \"#utility.yul\":2555:2675   */\ntag_105:\n    /* \"#utility.yul\":2572:2575   */\n  dup2\n    /* \"#utility.yul\":2565:2570   */\n  dup2\n    /* \"#utility.yul\":2562:2576   */\n  lt\n    /* \"#utility.yul\":2555:2675   */\n  iszero\n  tag_107\n  jumpi\n    /* \"#utility.yul\":2626:2665   */\n  tag_108\n    /* \"#utility.yul\":2663:2664   */\n  0x00\n    /* \"#utility.yul\":2656:2661   */\n  dup3\n    /* \"#utility.yul\":2626:2665   */\n  tag_63\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":2599:2600   */\n  0x01\n    /* \"#utility.yul\":2592:2597   */\n  dup2\n    /* \"#utility.yul\":2588:2601   */\n  add\n    /* \"#utility.yul\":2579:2601   */\n  swap1\n  pop\n    /* \"#utility.yul\":2555:2675   */\n  jump(tag_105)\ntag_107:\n    /* \"#utility.yul\":2495:2681   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2687:3230   */\ntag_65:\n    /* \"#utility.yul\":2788:2790   */\n  0x1f\n    /* \"#utility.yul\":2783:2786   */\n  dup3\n    /* \"#utility.yul\":2780:2791   */\n  gt\n    /* \"#utility.yul\":2777:3223   */\n  iszero\n  tag_110\n  jumpi\n    /* \"#utility.yul\":2822:2860   */\n  tag_111\n    /* \"#utility.yul\":2854:2859   */\n  dup2\n    /* \"#utility.yul\":2822:2860   */\n  tag_53\n  jump\t// in\ntag_111:\n    /* \"#utility.yul\":2906:2935   */\n  tag_112\n    /* \"#utility.yul\":2924:2934   */\n  dup5\n    /* \"#utility.yul\":2906:2935   */\n  tag_54\n  jump\t// in\ntag_112:\n    /* \"#utility.yul\":2896:2904   */\n  dup2\n    /* \"#utility.yul\":2892:2936   */\n  add\n    /* \"#utility.yul\":3089:3091   */\n  0x20\n    /* \"#utility.yul\":3077:3087   */\n  dup6\n    /* \"#utility.yul\":3074:3092   */\n  lt\n    /* \"#utility.yul\":3071:3120   */\n  iszero\n  tag_113\n  jumpi\n    /* \"#utility.yul\":3110:3118   */\n  dup2\n    /* \"#utility.yul\":3095:3118   */\n  swap1\n  pop\n    /* \"#utility.yul\":3071:3120   */\ntag_113:\n    /* \"#utility.yul\":3133:3213   */\n  tag_114\n    /* \"#utility.yul\":3189:3211   */\n  tag_115\n    /* \"#utility.yul\":3207:3210   */\n  dup6\n    /* \"#utility.yul\":3189:3211   */\n  tag_54\n  jump\t// in\ntag_115:\n    /* \"#utility.yul\":3179:3187   */\n  dup4\n    /* \"#utility.yul\":3175:3212   */\n  add\n    /* \"#utility.yul\":3162:3173   */\n  dup3\n    /* \"#utility.yul\":3133:3213   */\n  tag_64\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":2792:3223   */\n  pop\n  pop\n    /* \"#utility.yul\":2777:3223   */\ntag_110:\n    /* \"#utility.yul\":2687:3230   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3236:3353   */\ntag_66:\n    /* \"#utility.yul\":3290:3298   */\n  0x00\n    /* \"#utility.yul\":3340:3345   */\n  dup3\n    /* \"#utility.yul\":3334:3338   */\n  dup3\n    /* \"#utility.yul\":3330:3346   */\n  shr\n    /* \"#utility.yul\":3309:3346   */\n  swap1\n  pop\n    /* \"#utility.yul\":3236:3353   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3359:3528   */\ntag_67:\n    /* \"#utility.yul\":3403:3409   */\n  0x00\n    /* \"#utility.yul\":3436:3487   */\n  tag_118\n    /* \"#utility.yul\":3484:3485   */\n  0x00\n    /* \"#utility.yul\":3480:3486   */\n  not\n    /* \"#utility.yul\":3472:3477   */\n  dup5\n    /* \"#utility.yul\":3469:3470   */\n  0x08\n    /* \"#utility.yul\":3465:3478   */\n  mul\n    /* \"#utility.yul\":3436:3487   */\n  tag_66\n  jump\t// in\ntag_118:\n    /* \"#utility.yul\":3432:3488   */\n  not\n    /* \"#utility.yul\":3517:3521   */\n  dup1\n    /* \"#utility.yul\":3511:3515   */\n  dup4\n    /* \"#utility.yul\":3507:3522   */\n  and\n    /* \"#utility.yul\":3497:3522   */\n  swap2\n  pop\n    /* \"#utility.yul\":3410:3528   */\n  pop\n    /* \"#utility.yul\":3359:3528   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3533:3828   */\ntag_68:\n    /* \"#utility.yul\":3609:3613   */\n  0x00\n    /* \"#utility.yul\":3755:3784   */\n  tag_120\n    /* \"#utility.yul\":3780:3783   */\n  dup4\n    /* \"#utility.yul\":3774:3778   */\n  dup4\n    /* \"#utility.yul\":3755:3784   */\n  tag_67\n  jump\t// in\ntag_120:\n    /* \"#utility.yul\":3747:3784   */\n  swap2\n  pop\n    /* \"#utility.yul\":3817:3820   */\n  dup3\n    /* \"#utility.yul\":3814:3815   */\n  0x02\n    /* \"#utility.yul\":3810:3821   */\n  mul\n    /* \"#utility.yul\":3804:3808   */\n  dup3\n    /* \"#utility.yul\":3801:3822   */\n  or\n    /* \"#utility.yul\":3793:3822   */\n  swap1\n  pop\n    /* \"#utility.yul\":3533:3828   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3833:5228   */\ntag_8:\n    /* \"#utility.yul\":3950:3987   */\n  tag_122\n    /* \"#utility.yul\":3983:3986   */\n  dup3\n    /* \"#utility.yul\":3950:3987   */\n  tag_49\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":4052:4070   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":4044:4050   */\n  dup2\n    /* \"#utility.yul\":4041:4071   */\n  gt\n    /* \"#utility.yul\":4038:4094   */\n  iszero\n  tag_123\n  jumpi\n    /* \"#utility.yul\":4074:4092   */\n  tag_124\n  tag_50\n  jump\t// in\ntag_124:\n    /* \"#utility.yul\":4038:4094   */\ntag_123:\n    /* \"#utility.yul\":4118:4156   */\n  tag_125\n    /* \"#utility.yul\":4150:4154   */\n  dup3\n    /* \"#utility.yul\":4144:4155   */\n  sload\n    /* \"#utility.yul\":4118:4156   */\n  tag_52\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":4203:4270   */\n  tag_126\n    /* \"#utility.yul\":4263:4269   */\n  dup3\n    /* \"#utility.yul\":4255:4261   */\n  dup3\n    /* \"#utility.yul\":4249:4253   */\n  dup6\n    /* \"#utility.yul\":4203:4270   */\n  tag_65\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4297:4298   */\n  0x00\n    /* \"#utility.yul\":4321:4325   */\n  0x20\n    /* \"#utility.yul\":4308:4325   */\n  swap1\n  pop\n    /* \"#utility.yul\":4353:4355   */\n  0x1f\n    /* \"#utility.yul\":4345:4351   */\n  dup4\n    /* \"#utility.yul\":4342:4356   */\n  gt\n    /* \"#utility.yul\":4370:4371   */\n  0x01\n    /* \"#utility.yul\":4365:4983   */\n  dup2\n  eq\n  tag_128\n  jumpi\n    /* \"#utility.yul\":5027:5028   */\n  0x00\n    /* \"#utility.yul\":5044:5050   */\n  dup5\n    /* \"#utility.yul\":5041:5118   */\n  iszero\n  tag_129\n  jumpi\n    /* \"#utility.yul\":5093:5102   */\n  dup3\n    /* \"#utility.yul\":5088:5091   */\n  dup8\n    /* \"#utility.yul\":5084:5103   */\n  add\n    /* \"#utility.yul\":5078:5104   */\n  mload\n    /* \"#utility.yul\":5069:5104   */\n  swap1\n  pop\n    /* \"#utility.yul\":5041:5118   */\ntag_129:\n    /* \"#utility.yul\":5144:5211   */\n  tag_130\n    /* \"#utility.yul\":5204:5210   */\n  dup6\n    /* \"#utility.yul\":5197:5202   */\n  dup3\n    /* \"#utility.yul\":5144:5211   */\n  tag_68\n  jump\t// in\ntag_130:\n    /* \"#utility.yul\":5138:5142   */\n  dup7\n    /* \"#utility.yul\":5131:5212   */\n  sstore\n    /* \"#utility.yul\":5000:5222   */\n  pop\n    /* \"#utility.yul\":4335:5222   */\n  jump(tag_127)\n    /* \"#utility.yul\":4365:4983   */\ntag_128:\n    /* \"#utility.yul\":4417:4421   */\n  0x1f\n    /* \"#utility.yul\":4413:4422   */\n  not\n    /* \"#utility.yul\":4405:4411   */\n  dup5\n    /* \"#utility.yul\":4401:4423   */\n  and\n    /* \"#utility.yul\":4451:4488   */\n  tag_131\n    /* \"#utility.yul\":4483:4487   */\n  dup7\n    /* \"#utility.yul\":4451:4488   */\n  tag_53\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4510:4511   */\n  0x00\n    /* \"#utility.yul\":4524:4732   */\ntag_132:\n    /* \"#utility.yul\":4538:4545   */\n  dup3\n    /* \"#utility.yul\":4535:4536   */\n  dup2\n    /* \"#utility.yul\":4532:4546   */\n  lt\n    /* \"#utility.yul\":4524:4732   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":4617:4626   */\n  dup5\n    /* \"#utility.yul\":4612:4615   */\n  dup10\n    /* \"#utility.yul\":4608:4627   */\n  add\n    /* \"#utility.yul\":4602:4628   */\n  mload\n    /* \"#utility.yul\":4594:4600   */\n  dup3\n    /* \"#utility.yul\":4587:4629   */\n  sstore\n    /* \"#utility.yul\":4668:4669   */\n  0x01\n    /* \"#utility.yul\":4660:4666   */\n  dup3\n    /* \"#utility.yul\":4656:4670   */\n  add\n    /* \"#utility.yul\":4646:4670   */\n  swap2\n  pop\n    /* \"#utility.yul\":4715:4717   */\n  0x20\n    /* \"#utility.yul\":4704:4713   */\n  dup6\n    /* \"#utility.yul\":4700:4718   */\n  add\n    /* \"#utility.yul\":4687:4718   */\n  swap5\n  pop\n    /* \"#utility.yul\":4561:4565   */\n  0x20\n    /* \"#utility.yul\":4558:4559   */\n  dup2\n    /* \"#utility.yul\":4554:4566   */\n  add\n    /* \"#utility.yul\":4549:4566   */\n  swap1\n  pop\n    /* \"#utility.yul\":4524:4732   */\n  jump(tag_132)\ntag_134:\n    /* \"#utility.yul\":4760:4766   */\n  dup7\n    /* \"#utility.yul\":4751:4758   */\n  dup4\n    /* \"#utility.yul\":4748:4767   */\n  lt\n    /* \"#utility.yul\":4745:4924   */\n  iszero\n  tag_135\n  jumpi\n    /* \"#utility.yul\":4818:4827   */\n  dup5\n    /* \"#utility.yul\":4813:4816   */\n  dup10\n    /* \"#utility.yul\":4809:4828   */\n  add\n    /* \"#utility.yul\":4803:4829   */\n  mload\n    /* \"#utility.yul\":4861:4909   */\n  tag_136\n    /* \"#utility.yul\":4903:4907   */\n  0x1f\n    /* \"#utility.yul\":4895:4901   */\n  dup10\n    /* \"#utility.yul\":4891:4908   */\n  and\n    /* \"#utility.yul\":4880:4889   */\n  dup3\n    /* \"#utility.yul\":4861:4909   */\n  tag_67\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":4853:4859   */\n  dup4\n    /* \"#utility.yul\":4846:4910   */\n  sstore\n    /* \"#utility.yul\":4768:4924   */\n  pop\n    /* \"#utility.yul\":4745:4924   */\ntag_135:\n    /* \"#utility.yul\":4970:4971   */\n  0x01\n    /* \"#utility.yul\":4966:4967   */\n  0x02\n    /* \"#utility.yul\":4958:4964   */\n  dup9\n    /* \"#utility.yul\":4954:4968   */\n  mul\n    /* \"#utility.yul\":4950:4972   */\n  add\n    /* \"#utility.yul\":4944:4948   */\n  dup9\n    /* \"#utility.yul\":4937:4973   */\n  sstore\n    /* \"#utility.yul\":4372:4983   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4335:5222   */\ntag_127:\n  pop\n    /* \"#utility.yul\":3925:5228   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":3833:5228   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5234:5360   */\ntag_69:\n    /* \"#utility.yul\":5271:5278   */\n  0x00\n    /* \"#utility.yul\":5311:5353   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":5304:5309   */\n  dup3\n    /* \"#utility.yul\":5300:5354   */\n  and\n    /* \"#utility.yul\":5289:5354   */\n  swap1\n  pop\n    /* \"#utility.yul\":5234:5360   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5366:5462   */\ntag_70:\n    /* \"#utility.yul\":5403:5410   */\n  0x00\n    /* \"#utility.yul\":5432:5456   */\n  tag_139\n    /* \"#utility.yul\":5450:5455   */\n  dup3\n    /* \"#utility.yul\":5432:5456   */\n  tag_69\n  jump\t// in\ntag_139:\n    /* \"#utility.yul\":5421:5456   */\n  swap1\n  pop\n    /* \"#utility.yul\":5366:5462   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5468:5586   */\ntag_71:\n    /* \"#utility.yul\":5555:5579   */\n  tag_141\n    /* \"#utility.yul\":5573:5578   */\n  dup2\n    /* \"#utility.yul\":5555:5579   */\n  tag_70\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":5550:5553   */\n  dup3\n    /* \"#utility.yul\":5543:5580   */\n  mstore\n    /* \"#utility.yul\":5468:5586   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5592:5814   */\ntag_13:\n    /* \"#utility.yul\":5685:5689   */\n  0x00\n    /* \"#utility.yul\":5723:5725   */\n  0x20\n    /* \"#utility.yul\":5712:5721   */\n  dup3\n    /* \"#utility.yul\":5708:5726   */\n  add\n    /* \"#utility.yul\":5700:5726   */\n  swap1\n  pop\n    /* \"#utility.yul\":5736:5807   */\n  tag_143\n    /* \"#utility.yul\":5804:5805   */\n  0x00\n    /* \"#utility.yul\":5793:5802   */\n  dup4\n    /* \"#utility.yul\":5789:5806   */\n  add\n    /* \"#utility.yul\":5780:5786   */\n  dup5\n    /* \"#utility.yul\":5736:5807   */\n  tag_71\n  jump\t// in\ntag_143:\n    /* \"#utility.yul\":5592:5814   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":5820:6000   */\ntag_72:\n    /* \"#utility.yul\":5868:5945   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":5865:5866   */\n  0x00\n    /* \"#utility.yul\":5858:5946   */\n  mstore\n    /* \"#utility.yul\":5965:5969   */\n  0x11\n    /* \"#utility.yul\":5962:5963   */\n  0x04\n    /* \"#utility.yul\":5955:5970   */\n  mstore\n    /* \"#utility.yul\":5989:5993   */\n  0x24\n    /* \"#utility.yul\":5986:5987   */\n  0x00\n    /* \"#utility.yul\":5979:5994   */\n  revert\n    /* \"#utility.yul\":6006:6416   */\ntag_20:\n    /* \"#utility.yul\":6046:6053   */\n  0x00\n    /* \"#utility.yul\":6069:6089   */\n  tag_146\n    /* \"#utility.yul\":6087:6088   */\n  dup3\n    /* \"#utility.yul\":6069:6089   */\n  tag_57\n  jump\t// in\ntag_146:\n    /* \"#utility.yul\":6064:6089   */\n  swap2\n  pop\n    /* \"#utility.yul\":6103:6123   */\n  tag_147\n    /* \"#utility.yul\":6121:6122   */\n  dup4\n    /* \"#utility.yul\":6103:6123   */\n  tag_57\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":6098:6123   */\n  swap3\n  pop\n    /* \"#utility.yul\":6158:6159   */\n  dup3\n    /* \"#utility.yul\":6155:6156   */\n  dup3\n    /* \"#utility.yul\":6151:6160   */\n  mul\n    /* \"#utility.yul\":6180:6210   */\n  tag_148\n    /* \"#utility.yul\":6198:6209   */\n  dup2\n    /* \"#utility.yul\":6180:6210   */\n  tag_57\n  jump\t// in\ntag_148:\n    /* \"#utility.yul\":6169:6210   */\n  swap2\n  pop\n    /* \"#utility.yul\":6359:6360   */\n  dup3\n    /* \"#utility.yul\":6350:6357   */\n  dup3\n    /* \"#utility.yul\":6346:6361   */\n  div\n    /* \"#utility.yul\":6343:6344   */\n  dup5\n    /* \"#utility.yul\":6340:6362   */\n  eq\n    /* \"#utility.yul\":6320:6321   */\n  dup4\n    /* \"#utility.yul\":6313:6322   */\n  iszero\n    /* \"#utility.yul\":6293:6376   */\n  or\n    /* \"#utility.yul\":6270:6409   */\n  tag_149\n  jumpi\n    /* \"#utility.yul\":6389:6407   */\n  tag_150\n  tag_72\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6270:6409   */\ntag_149:\n    /* \"#utility.yul\":6054:6416   */\n  pop\n    /* \"#utility.yul\":6006:6416   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6422:6602   */\ntag_73:\n    /* \"#utility.yul\":6470:6547   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6467:6468   */\n  0x00\n    /* \"#utility.yul\":6460:6548   */\n  mstore\n    /* \"#utility.yul\":6567:6571   */\n  0x12\n    /* \"#utility.yul\":6564:6565   */\n  0x04\n    /* \"#utility.yul\":6557:6572   */\n  mstore\n    /* \"#utility.yul\":6591:6595   */\n  0x24\n    /* \"#utility.yul\":6588:6589   */\n  0x00\n    /* \"#utility.yul\":6581:6596   */\n  revert\n    /* \"#utility.yul\":6608:6793   */\ntag_22:\n    /* \"#utility.yul\":6648:6649   */\n  0x00\n    /* \"#utility.yul\":6665:6685   */\n  tag_153\n    /* \"#utility.yul\":6683:6684   */\n  dup3\n    /* \"#utility.yul\":6665:6685   */\n  tag_57\n  jump\t// in\ntag_153:\n    /* \"#utility.yul\":6660:6685   */\n  swap2\n  pop\n    /* \"#utility.yul\":6699:6719   */\n  tag_154\n    /* \"#utility.yul\":6717:6718   */\n  dup4\n    /* \"#utility.yul\":6699:6719   */\n  tag_57\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6694:6719   */\n  swap3\n  pop\n    /* \"#utility.yul\":6738:6739   */\n  dup3\n    /* \"#utility.yul\":6728:6763   */\n  tag_155\n  jumpi\n    /* \"#utility.yul\":6743:6761   */\n  tag_156\n  tag_73\n  jump\t// in\ntag_156:\n    /* \"#utility.yul\":6728:6763   */\ntag_155:\n    /* \"#utility.yul\":6785:6786   */\n  dup3\n    /* \"#utility.yul\":6782:6783   */\n  dup3\n    /* \"#utility.yul\":6778:6787   */\n  div\n    /* \"#utility.yul\":6773:6787   */\n  swap1\n  pop\n    /* \"#utility.yul\":6608:6793   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6799:6990   */\ntag_40:\n    /* \"#utility.yul\":6839:6842   */\n  0x00\n    /* \"#utility.yul\":6858:6878   */\n  tag_158\n    /* \"#utility.yul\":6876:6877   */\n  dup3\n    /* \"#utility.yul\":6858:6878   */\n  tag_57\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":6853:6878   */\n  swap2\n  pop\n    /* \"#utility.yul\":6892:6912   */\n  tag_159\n    /* \"#utility.yul\":6910:6911   */\n  dup4\n    /* \"#utility.yul\":6892:6912   */\n  tag_57\n  jump\t// in\ntag_159:\n    /* \"#utility.yul\":6887:6912   */\n  swap3\n  pop\n    /* \"#utility.yul\":6935:6936   */\n  dup3\n    /* \"#utility.yul\":6932:6933   */\n  dup3\n    /* \"#utility.yul\":6928:6937   */\n  add\n    /* \"#utility.yul\":6921:6937   */\n  swap1\n  pop\n    /* \"#utility.yul\":6956:6959   */\n  dup1\n    /* \"#utility.yul\":6953:6954   */\n  dup3\n    /* \"#utility.yul\":6950:6960   */\n  gt\n    /* \"#utility.yul\":6947:6983   */\n  iszero\n  tag_160\n  jumpi\n    /* \"#utility.yul\":6963:6981   */\n  tag_161\n  tag_72\n  jump\t// in\ntag_161:\n    /* \"#utility.yul\":6947:6983   */\ntag_160:\n    /* \"#utility.yul\":6799:6990   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6996:7114   */\ntag_74:\n    /* \"#utility.yul\":7083:7107   */\n  tag_163\n    /* \"#utility.yul\":7101:7106   */\n  dup2\n    /* \"#utility.yul\":7083:7107   */\n  tag_57\n  jump\t// in\ntag_163:\n    /* \"#utility.yul\":7078:7081   */\n  dup3\n    /* \"#utility.yul\":7071:7108   */\n  mstore\n    /* \"#utility.yul\":6996:7114   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7120:7562   */\ntag_44:\n    /* \"#utility.yul\":7269:7273   */\n  0x00\n    /* \"#utility.yul\":7307:7309   */\n  0x60\n    /* \"#utility.yul\":7296:7305   */\n  dup3\n    /* \"#utility.yul\":7292:7310   */\n  add\n    /* \"#utility.yul\":7284:7310   */\n  swap1\n  pop\n    /* \"#utility.yul\":7320:7391   */\n  tag_165\n    /* \"#utility.yul\":7388:7389   */\n  0x00\n    /* \"#utility.yul\":7377:7386   */\n  dup4\n    /* \"#utility.yul\":7373:7390   */\n  add\n    /* \"#utility.yul\":7364:7370   */\n  dup7\n    /* \"#utility.yul\":7320:7391   */\n  tag_71\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7401:7473   */\n  tag_166\n    /* \"#utility.yul\":7469:7471   */\n  0x20\n    /* \"#utility.yul\":7458:7467   */\n  dup4\n    /* \"#utility.yul\":7454:7472   */\n  add\n    /* \"#utility.yul\":7445:7451   */\n  dup6\n    /* \"#utility.yul\":7401:7473   */\n  tag_74\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7483:7555   */\n  tag_167\n    /* \"#utility.yul\":7551:7553   */\n  0x40\n    /* \"#utility.yul\":7540:7549   */\n  dup4\n    /* \"#utility.yul\":7536:7554   */\n  add\n    /* \"#utility.yul\":7527:7533   */\n  dup5\n    /* \"#utility.yul\":7483:7555   */\n  tag_74\n  jump\t// in\ntag_167:\n    /* \"#utility.yul\":7120:7562   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7568:7790   */\ntag_48:\n    /* \"#utility.yul\":7661:7665   */\n  0x00\n    /* \"#utility.yul\":7699:7701   */\n  0x20\n    /* \"#utility.yul\":7688:7697   */\n  dup3\n    /* \"#utility.yul\":7684:7702   */\n  add\n    /* \"#utility.yul\":7676:7702   */\n  swap1\n  pop\n    /* \"#utility.yul\":7712:7783   */\n  tag_169\n    /* \"#utility.yul\":7780:7781   */\n  0x00\n    /* \"#utility.yul\":7769:7778   */\n  dup4\n    /* \"#utility.yul\":7765:7782   */\n  add\n    /* \"#utility.yul\":7756:7762   */\n  dup5\n    /* \"#utility.yul\":7712:7783   */\n  tag_74\n  jump\t// in\ntag_169:\n    /* \"#utility.yul\":7568:7790   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/GeckoGold.sol\":362:6948  contract GeckoGold is ERC20, Ownable, ReentrancyGuard {... */\ntag_30:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/GeckoGold.sol\":362:6948  contract GeckoGold is ERC20, Ownable, ReentrancyGuard {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_39\n      jumpi\n      dup1\n      0xb88a802f\n      gt\n      tag_40\n      jumpi\n      dup1\n      0xdd62ed3e\n      gt\n      tag_41\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_34\n      jumpi\n      dup1\n      0xe3d670d7\n      eq\n      tag_35\n      jumpi\n      dup1\n      0xe43252d7\n      eq\n      tag_36\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_37\n      jumpi\n      dup1\n      0xfc1b3113\n      eq\n      tag_38\n      jumpi\n      jump(tag_2)\n    tag_41:\n      dup1\n      0xb88a802f\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xc6d69a30\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xd595c331\n      eq\n      tag_32\n      jumpi\n      dup1\n      0xd798cbd2\n      eq\n      tag_33\n      jumpi\n      jump(tag_2)\n    tag_40:\n      dup1\n      0x8fa81732\n      gt\n      tag_42\n      jumpi\n      dup1\n      0x8fa81732\n      eq\n      tag_25\n      jumpi\n      dup1\n      0x902d55a5\n      eq\n      tag_26\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xaabd801d\n      eq\n      tag_29\n      jumpi\n      jump(tag_2)\n    tag_42:\n      dup1\n      0x8456cb59\n      eq\n      tag_21\n      jumpi\n      dup1\n      0x8a8c523c\n      eq\n      tag_22\n      jumpi\n      dup1\n      0x8ab1d681\n      eq\n      tag_23\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_24\n      jumpi\n      jump(tag_2)\n    tag_39:\n      dup1\n      0x42966c68\n      gt\n      tag_43\n      jumpi\n      dup1\n      0x5fd8c710\n      gt\n      tag_44\n      jumpi\n      dup1\n      0x5fd8c710\n      eq\n      tag_16\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x771a3a1d\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x819edfbc\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_44:\n      dup1\n      0x42966c68\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x4ada218b\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x57376198\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_43:\n      dup1\n      0x18160ddd\n      gt\n      tag_45\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x2576f999\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_45:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x153b0d1e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x17386e2c\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_46\n      tag_47\n      jump\t// in\n    tag_46:\n      mload(0x40)\n      tag_48\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_4:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      tag_53\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":1838:1982  function setBlacklist(address _address, bool _isBlacklisted) external onlyOwner {... */\n    tag_5:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_58\n      jump\t// in\n    tag_57:\n      tag_59\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/GeckoGold.sol\":5038:5308  function deductEngagementPoints(address user, uint256 points) external onlyOwner {... */\n    tag_6:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_61:\n      tag_62\n      jump\t// in\n    tag_60:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_7:\n      tag_63\n      tag_64\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      tag_65\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_8:\n      tag_67\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_68\n      swap2\n      swap1\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      tag_71\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":1002:1053  mapping(address => uint256) public engagementPoints */\n    tag_9:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_10:\n      tag_77\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      tag_79\n      swap2\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":6644:6713  function unpause() external onlyOwner {... */\n    tag_11:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      stop\n        /* \"contracts/GeckoGold.sol\":4299:4427  function burn(uint256 amount) external {... */\n    tag_12:\n      tag_83\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_84\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_84:\n      tag_86\n      jump\t// in\n    tag_83:\n      stop\n        /* \"contracts/GeckoGold.sol\":1150:1184  bool public tradingEnabled = false */\n    tag_13:\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n      mload(0x40)\n      tag_89\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":6401:6529  function rescueTokens(address token, uint256 amount) external onlyOwner {... */\n    tag_14:\n      tag_90\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_91\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_91:\n      tag_92\n      jump\t// in\n    tag_90:\n      stop\n        /* \"contracts/GeckoGold.sol\":1190:1216  bool public paused = false */\n    tag_15:\n      tag_93\n      tag_94\n      jump\t// in\n    tag_93:\n      mload(0x40)\n      tag_95\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_95:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":6229:6353  function withdrawBalance() external onlyOwner nonReentrant {... */\n    tag_16:\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n      stop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_17:\n      tag_98\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_99\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_99:\n      tag_100\n      jump\t// in\n    tag_98:\n      mload(0x40)\n      tag_101\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_101:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_18:\n      tag_102\n      tag_103\n      jump\t// in\n    tag_102:\n      stop\n        /* \"contracts/GeckoGold.sol\":557:583  uint256 public taxRate = 2 */\n    tag_19:\n      tag_104\n      tag_105\n      jump\t// in\n    tag_104:\n      mload(0x40)\n      tag_106\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_106:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":788:841  uint256 public constant MAX_ENGAGEMENT_POINTS = 10000 */\n    tag_20:\n      tag_107\n      tag_108\n      jump\t// in\n    tag_107:\n      mload(0x40)\n      tag_109\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_109:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":6572:6638  function pause() external onlyOwner {... */\n    tag_21:\n      tag_110\n      tag_111\n      jump\t// in\n    tag_110:\n      stop\n        /* \"contracts/GeckoGold.sol\":3000:3124  function enableTrading() external onlyOwner {... */\n    tag_22:\n      tag_112\n      tag_113\n      jump\t// in\n    tag_112:\n      stop\n        /* \"contracts/GeckoGold.sol\":3332:3451  function removeFromWhitelist(address _address) external onlyOwner {... */\n    tag_23:\n      tag_114\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_115\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_115:\n      tag_116\n      jump\t// in\n    tag_114:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_24:\n      tag_117\n      tag_118\n      jump\t// in\n    tag_117:\n      mload(0x40)\n      tag_119\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":599:640  uint256 public constant MAX_TAX_RATE = 10 */\n    tag_25:\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      tag_123\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":485:550  uint256 public constant TOTAL_SUPPLY = 420_690_000_000 * 10 ** 18 */\n    tag_26:\n      tag_124\n      tag_125\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_126\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_27:\n      tag_127\n      tag_128\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      tag_129\n      swap2\n      swap1\n      tag_49\n      jump\t// in\n    tag_129:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":3724:4228  function transfer(address recipient, uint256 amount) public override notBlacklisted(msg.sender) tradingGuard(msg.sender) whenNotPaused noSelfTransfer(recipient) returns (bool) {... */\n    tag_28:\n      tag_130\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_131\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_131:\n      tag_132\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      tag_133\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_133:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":4678:4988  function updateEngagementPoints(address user, uint256 points) external onlyOwner {... */\n    tag_29:\n      tag_134\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_135\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_135:\n      tag_136\n      jump\t// in\n    tag_134:\n      stop\n        /* \"contracts/GeckoGold.sol\":5374:5968  function claimReward() external whenNotPaused notBlacklisted(msg.sender) cooldownPeriod(msg.sender) {... */\n    tag_30:\n      tag_137\n      tag_138\n      jump\t// in\n    tag_137:\n      stop\n        /* \"contracts/GeckoGold.sol\":3484:3659  function setTaxRate(uint256 newTaxRate) external onlyOwner {... */\n    tag_31:\n      tag_139\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_140\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_140:\n      tag_141\n      jump\t// in\n    tag_139:\n      stop\n        /* \"contracts/GeckoGold.sol\":4490:4628  function burnSupply(uint256 amount) external onlyOwner {... */\n    tag_32:\n      tag_142\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_143\n      swap2\n      swap1\n      tag_85\n      jump\t// in\n    tag_143:\n      tag_144\n      jump\t// in\n    tag_142:\n      stop\n        /* \"contracts/GeckoGold.sol\":1112:1144  uint256 public tradingStartBlock */\n    tag_33:\n      tag_145\n      tag_146\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_147\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_147:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_34:\n      tag_148\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_149\n      swap2\n      swap1\n      tag_150\n      jump\t// in\n    tag_149:\n      tag_151\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      tag_152\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_152:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":6029:6137  function balance(address account) external view returns (uint256) {... */\n    tag_35:\n      tag_153\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_154\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_154:\n      tag_155\n      jump\t// in\n    tag_153:\n      mload(0x40)\n      tag_156\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/GeckoGold.sol\":3169:3282  function addToWhitelist(address _address) external onlyOwner {... */\n    tag_36:\n      tag_157\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_158\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_158:\n      tag_159\n      jump\t// in\n    tag_157:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_37:\n      tag_160\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_161\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_161:\n      tag_162\n      jump\t// in\n    tag_160:\n      stop\n        /* \"contracts/GeckoGold.sol\":680:746  uint256 public constant MAX_TRANSFER_AMOUNT = 1_000_000 * 10 ** 18 */\n    tag_38:\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n      mload(0x40)\n      tag_165\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_165:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n    tag_47:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1824:1837  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1856:1861  _name */\n      0x03\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1849:1861  return _name */\n      dup1\n      sload\n      tag_167\n      swap1\n      tag_168\n      jump\t// in\n    tag_167:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_169\n      swap1\n      tag_168\n      jump\t// in\n    tag_169:\n      dup1\n      iszero\n      tag_170\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_171\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_170)\n    tag_171:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_172:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_172\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_170:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1779:1868  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n    tag_53:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4071:4075  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4100  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      tag_174\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4113  _msgSender */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4103:4115  _msgSender() */\n      jump\t// in\n    tag_174:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4087:4115  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      tag_176\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4134:4139  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4141:4148  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4150:4155  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4133  _approve */\n      tag_177\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4125:4156  _approve(owner, spender, value) */\n      jump\t// in\n    tag_176:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4173:4177  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4166:4177  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3998:4184  function approve(address spender, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":1838:1982  function setBlacklist(address _address, bool _isBlacklisted) external onlyOwner {... */\n    tag_59:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_179\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_179:\n        /* \"contracts/GeckoGold.sol\":1961:1975  _isBlacklisted */\n      dup1\n        /* \"contracts/GeckoGold.sol\":1928:1948  blacklistedAddresses */\n      0x08\n        /* \"contracts/GeckoGold.sol\":1928:1958  blacklistedAddresses[_address] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":1949:1957  _address */\n      dup5\n        /* \"contracts/GeckoGold.sol\":1928:1958  blacklistedAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/GeckoGold.sol\":1928:1975  blacklistedAddresses[_address] = _isBlacklisted */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":1838:1982  function setBlacklist(address _address, bool _isBlacklisted) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":5038:5308  function deductEngagementPoints(address user, uint256 points) external onlyOwner {... */\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_183\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_183:\n        /* \"contracts/GeckoGold.sol\":5163:5169  points */\n      dup1\n        /* \"contracts/GeckoGold.sol\":5137:5153  engagementPoints */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":5137:5159  engagementPoints[user] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5154:5158  user */\n      dup5\n        /* \"contracts/GeckoGold.sol\":5137:5159  engagementPoints[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GeckoGold.sol\":5137:5169  engagementPoints[user] >= points */\n      lt\n      iszero\n        /* \"contracts/GeckoGold.sol\":5129:5191  require(engagementPoints[user] >= points, \"Not enough points\") */\n      tag_185\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_186\n      swap1\n      tag_187\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_185:\n        /* \"contracts/GeckoGold.sol\":5227:5233  points */\n      dup1\n        /* \"contracts/GeckoGold.sol\":5201:5217  engagementPoints */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":5201:5223  engagementPoints[user] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5218:5222  user */\n      dup5\n        /* \"contracts/GeckoGold.sol\":5201:5223  engagementPoints[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/GeckoGold.sol\":5201:5233  engagementPoints[user] -= points */\n      dup3\n      dup3\n      sload\n      tag_188\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_188:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":5272:5276  user */\n      dup2\n        /* \"contracts/GeckoGold.sol\":5248:5301  EngagementPointsUpdated(user, engagementPoints[user]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40547f371cf37574d1a01eeeb1593f8db1a3e44286bba3b92cf2867707c9e473\n        /* \"contracts/GeckoGold.sol\":5278:5294  engagementPoints */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":5278:5300  engagementPoints[user] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5295:5299  user */\n      dup6\n        /* \"contracts/GeckoGold.sol\":5278:5300  engagementPoints[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GeckoGold.sol\":5248:5301  EngagementPointsUpdated(user, engagementPoints[user]) */\n      mload(0x40)\n      tag_190\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/GeckoGold.sol\":5038:5308  function deductEngagementPoints(address user, uint256 points) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n    tag_64:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2901:2908  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2927:2939  _totalSupply */\n      sload(0x02)\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2920:2939  return _totalSupply */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2849:2946  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4863:4867  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4894  address spender */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      tag_193\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4907  _msgSender */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4897:4909  _msgSender() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4879:4909  address spender = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      tag_194\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4935:4939  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4941:4948  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4950:4955  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4934  _spendAllowance */\n      tag_195\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4919:4956  _spendAllowance(from, spender, value) */\n      jump\t// in\n    tag_194:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      tag_196\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4976:4980  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4982:4984  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4986:4991  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4975  _transfer */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4966:4992  _transfer(from, to, value) */\n      jump\t// in\n    tag_196:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5009:5013  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5002:5013  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":4776:5020  function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":1002:1053  mapping(address => uint256) public engagementPoints */\n    tag_75:\n      mstore(0x20, 0x0a)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      sload\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n    tag_78:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2756:2761  uint8 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2780:2782  18 */\n      0x12\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2773:2782  return 18 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2707:2789  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":6644:6713  function unpause() external onlyOwner {... */\n    tag_82:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_200\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_200:\n        /* \"contracts/GeckoGold.sol\":6701:6706  false */\n      0x00\n        /* \"contracts/GeckoGold.sol\":6692:6698  paused */\n      0x0d\n      0x01\n        /* \"contracts/GeckoGold.sol\":6692:6706  paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":6644:6713  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":4299:4427  function burn(uint256 amount) external {... */\n    tag_86:\n        /* \"contracts/GeckoGold.sol\":4348:4373  _burn(msg.sender, amount) */\n      tag_203\n        /* \"contracts/GeckoGold.sol\":4354:4364  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":4366:4372  amount */\n      dup3\n        /* \"contracts/GeckoGold.sol\":4348:4353  _burn */\n      tag_204\n        /* \"contracts/GeckoGold.sol\":4348:4373  _burn(msg.sender, amount) */\n      jump\t// in\n    tag_203:\n        /* \"contracts/GeckoGold.sol\":4401:4411  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":4388:4420  TokensBurned(msg.sender, amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6\n        /* \"contracts/GeckoGold.sol\":4413:4419  amount */\n      dup3\n        /* \"contracts/GeckoGold.sol\":4388:4420  TokensBurned(msg.sender, amount) */\n      mload(0x40)\n      tag_205\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_205:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/GeckoGold.sol\":4299:4427  function burn(uint256 amount) external {... */\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":1150:1184  bool public tradingEnabled = false */\n    tag_88:\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":6401:6529  function rescueTokens(address token, uint256 amount) external onlyOwner {... */\n    tag_92:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_207\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_207:\n        /* \"contracts/GeckoGold.sol\":6490:6495  token */\n      dup2\n        /* \"contracts/GeckoGold.sol\":6483:6505  IERC20(token).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/GeckoGold.sol\":6506:6513  owner() */\n      tag_209\n        /* \"contracts/GeckoGold.sol\":6506:6511  owner */\n      tag_118\n        /* \"contracts/GeckoGold.sol\":6506:6513  owner() */\n      jump\t// in\n    tag_209:\n        /* \"contracts/GeckoGold.sol\":6515:6521  amount */\n      dup4\n        /* \"contracts/GeckoGold.sol\":6483:6522  IERC20(token).transfer(owner(), amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_210\n      swap3\n      swap2\n      swap1\n      tag_211\n      jump\t// in\n    tag_210:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_213\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_213:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_214\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      pop\n        /* \"contracts/GeckoGold.sol\":6401:6529  function rescueTokens(address token, uint256 amount) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":1190:1216  bool public paused = false */\n    tag_94:\n      0x0d\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":6229:6353  function withdrawBalance() external onlyOwner nonReentrant {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_217\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_217:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      tag_219\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2280  _nonReentrantBefore */\n      tag_220\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2261:2282  _nonReentrantBefore() */\n      jump\t// in\n    tag_219:\n        /* \"contracts/GeckoGold.sol\":6306:6313  owner() */\n      tag_222\n        /* \"contracts/GeckoGold.sol\":6306:6311  owner */\n      tag_118\n        /* \"contracts/GeckoGold.sol\":6306:6313  owner() */\n      jump\t// in\n    tag_222:\n        /* \"contracts/GeckoGold.sol\":6298:6323  payable(owner()).transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GeckoGold.sol\":6298:6346  payable(owner()).transfer(address(this).balance) */\n      0x08fc\n        /* \"contracts/GeckoGold.sol\":6324:6345  address(this).balance */\n      selfbalance\n        /* \"contracts/GeckoGold.sol\":6298:6346  payable(owner()).transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_224\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_224:\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      tag_225\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2321  _nonReentrantAfter */\n      tag_226\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2303:2323  _nonReentrantAfter() */\n      jump\t// in\n    tag_225:\n        /* \"contracts/GeckoGold.sol\":6229:6353  function withdrawBalance() external onlyOwner nonReentrant {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3069:3076  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3104  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3105:3112  account */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3095:3113  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3088:3113  return _balances[account] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3004:3120  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_229\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_229:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_231\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_231:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":557:583  uint256 public taxRate = 2 */\n    tag_105:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":788:841  uint256 public constant MAX_ENGAGEMENT_POINTS = 10000 */\n    tag_108:\n        /* \"contracts/GeckoGold.sol\":836:841  10000 */\n      0x2710\n        /* \"contracts/GeckoGold.sol\":788:841  uint256 public constant MAX_ENGAGEMENT_POINTS = 10000 */\n      dup2\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":6572:6638  function pause() external onlyOwner {... */\n    tag_111:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_234\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_234:\n        /* \"contracts/GeckoGold.sol\":6627:6631  true */\n      0x01\n        /* \"contracts/GeckoGold.sol\":6618:6624  paused */\n      0x0d\n      0x01\n        /* \"contracts/GeckoGold.sol\":6618:6631  paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":6572:6638  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":3000:3124  function enableTrading() external onlyOwner {... */\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_237\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_237:\n        /* \"contracts/GeckoGold.sol\":3071:3075  true */\n      0x01\n        /* \"contracts/GeckoGold.sol\":3054:3068  tradingEnabled */\n      0x0d\n      0x00\n        /* \"contracts/GeckoGold.sol\":3054:3075  tradingEnabled = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":3105:3117  block.number */\n      number\n        /* \"contracts/GeckoGold.sol\":3085:3102  tradingStartBlock */\n      0x0c\n        /* \"contracts/GeckoGold.sol\":3085:3117  tradingStartBlock = block.number */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":3000:3124  function enableTrading() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":3332:3451  function removeFromWhitelist(address _address) external onlyOwner {... */\n    tag_116:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_240\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_240:\n        /* \"contracts/GeckoGold.sol\":3439:3444  false */\n      0x00\n        /* \"contracts/GeckoGold.sol\":3408:3426  whitelistAddresses */\n      0x09\n        /* \"contracts/GeckoGold.sol\":3408:3436  whitelistAddresses[_address] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":3427:3435  _address */\n      dup4\n        /* \"contracts/GeckoGold.sol\":3408:3436  whitelistAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/GeckoGold.sol\":3408:3444  whitelistAddresses[_address] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":3332:3451  function removeFromWhitelist(address _address) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_118:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1710:1716  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":599:640  uint256 public constant MAX_TAX_RATE = 10 */\n    tag_122:\n        /* \"contracts/GeckoGold.sol\":638:640  10 */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":599:640  uint256 public constant MAX_TAX_RATE = 10 */\n      dup2\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":485:550  uint256 public constant TOTAL_SUPPLY = 420_690_000_000 * 10 ** 18 */\n    tag_125:\n        /* \"contracts/GeckoGold.sol\":524:550  420_690_000_000 * 10 ** 18 */\n      0x054f529ca52576bc6892000000\n        /* \"contracts/GeckoGold.sol\":485:550  uint256 public constant TOTAL_SUPPLY = 420_690_000_000 * 10 ** 18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n    tag_128:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2028:2041  string memory */\n      0x60\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2060:2067  _symbol */\n      0x04\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":2053:2067  return _symbol */\n      dup1\n      sload\n      tag_244\n      swap1\n      tag_168\n      jump\t// in\n    tag_244:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_245\n      swap1\n      tag_168\n      jump\t// in\n    tag_245:\n      dup1\n      iszero\n      tag_246\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_247\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_246)\n    tag_247:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_248:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_248\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_246:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":1981:2074  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":3724:4228  function transfer(address recipient, uint256 amount) public override notBlacklisted(msg.sender) tradingGuard(msg.sender) whenNotPaused noSelfTransfer(recipient) returns (bool) {... */\n    tag_132:\n        /* \"contracts/GeckoGold.sol\":3894:3898  bool */\n      0x00\n        /* \"contracts/GeckoGold.sol\":3808:3818  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":2103:2123  blacklistedAddresses */\n      0x08\n        /* \"contracts/GeckoGold.sol\":2103:2133  blacklistedAddresses[_address] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":2124:2132  _address */\n      dup3\n        /* \"contracts/GeckoGold.sol\":2103:2133  blacklistedAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/GeckoGold.sol\":2102:2133  !blacklistedAddresses[_address] */\n      iszero\n        /* \"contracts/GeckoGold.sol\":2094:2160  require(!blacklistedAddresses[_address], \"Address is blacklisted\") */\n      tag_250\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_251\n      swap1\n      tag_252\n      jump\t// in\n    tag_251:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_250:\n        /* \"contracts/GeckoGold.sol\":3833:3843  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":2312:2326  tradingEnabled */\n      0x0d\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/GeckoGold.sol\":2312:2356  tradingEnabled || whitelistAddresses[sender] */\n      dup1\n      tag_254\n      jumpi\n      pop\n        /* \"contracts/GeckoGold.sol\":2330:2348  whitelistAddresses */\n      0x09\n        /* \"contracts/GeckoGold.sol\":2330:2356  whitelistAddresses[sender] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":2349:2355  sender */\n      dup3\n        /* \"contracts/GeckoGold.sol\":2330:2356  whitelistAddresses[sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/GeckoGold.sol\":2312:2356  tradingEnabled || whitelistAddresses[sender] */\n    tag_254:\n        /* \"contracts/GeckoGold.sol\":2304:2383  require(tradingEnabled || whitelistAddresses[sender], \"Trading is not enabled\") */\n      tag_255\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_256\n      swap1\n      tag_257\n      jump\t// in\n    tag_256:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_255:\n        /* \"contracts/GeckoGold.sol\":2502:2508  paused */\n      0x0d\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/GeckoGold.sol\":2501:2508  !paused */\n      iszero\n        /* \"contracts/GeckoGold.sol\":2493:2531  require(!paused, \"Contract is paused\") */\n      tag_259\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_260\n      swap1\n      tag_261\n      jump\t// in\n    tag_260:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_259:\n        /* \"contracts/GeckoGold.sol\":3874:3883  recipient */\n      dup5\n        /* \"contracts/GeckoGold.sol\":2882:2886  this */\n      address\n        /* \"contracts/GeckoGold.sol\":2861:2887  recipient != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/GeckoGold.sol\":2861:2870  recipient */\n      dup2\n        /* \"contracts/GeckoGold.sol\":2861:2887  recipient != address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/GeckoGold.sol\":2853:2930  require(recipient != address(this), \"Cannot transfer to the contract itself\") */\n      tag_263\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_264\n      swap1\n      tag_265\n      jump\t// in\n    tag_264:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_263:\n        /* \"contracts/GeckoGold.sol\":726:746  1_000_000 * 10 ** 18 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/GeckoGold.sol\":3918:3924  amount */\n      dup6\n        /* \"contracts/GeckoGold.sol\":3918:3947  amount <= MAX_TRANSFER_AMOUNT */\n      gt\n      iszero\n        /* \"contracts/GeckoGold.sol\":3910:3983  require(amount <= MAX_TRANSFER_AMOUNT, \"Exceeds maximum transfer amount\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_268\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_267:\n        /* \"contracts/GeckoGold.sol\":3994:4005  uint256 tax */\n      0x00\n        /* \"contracts/GeckoGold.sol\":4029:4032  100 */\n      0x64\n        /* \"contracts/GeckoGold.sol\":4018:4025  taxRate */\n      sload(0x07)\n        /* \"contracts/GeckoGold.sol\":4009:4015  amount */\n      dup8\n        /* \"contracts/GeckoGold.sol\":4009:4025  amount * taxRate */\n      tag_270\n      swap2\n      swap1\n      tag_271\n      jump\t// in\n    tag_270:\n        /* \"contracts/GeckoGold.sol\":4008:4032  (amount * taxRate) / 100 */\n      tag_272\n      swap2\n      swap1\n      tag_273\n      jump\t// in\n    tag_272:\n        /* \"contracts/GeckoGold.sol\":3994:4032  uint256 tax = (amount * taxRate) / 100 */\n      swap1\n      pop\n        /* \"contracts/GeckoGold.sol\":4042:4064  uint256 amountAfterTax */\n      0x00\n        /* \"contracts/GeckoGold.sol\":4076:4079  tax */\n      dup2\n        /* \"contracts/GeckoGold.sol\":4067:4073  amount */\n      dup8\n        /* \"contracts/GeckoGold.sol\":4067:4079  amount - tax */\n      tag_274\n      swap2\n      swap1\n      tag_189\n      jump\t// in\n    tag_274:\n        /* \"contracts/GeckoGold.sol\":4042:4079  uint256 amountAfterTax = amount - tax */\n      swap1\n      pop\n        /* \"contracts/GeckoGold.sol\":4128:4163  _transfer(msg.sender, owner(), tax) */\n      tag_275\n        /* \"contracts/GeckoGold.sol\":4138:4148  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":4150:4157  owner() */\n      tag_276\n        /* \"contracts/GeckoGold.sol\":4150:4155  owner */\n      tag_118\n        /* \"contracts/GeckoGold.sol\":4150:4157  owner() */\n      jump\t// in\n    tag_276:\n        /* \"contracts/GeckoGold.sol\":4159:4162  tax */\n      dup5\n        /* \"contracts/GeckoGold.sol\":4128:4137  _transfer */\n      tag_197\n        /* \"contracts/GeckoGold.sol\":4128:4163  _transfer(msg.sender, owner(), tax) */\n      jump\t// in\n    tag_275:\n        /* \"contracts/GeckoGold.sol\":4180:4221  super.transfer(recipient, amountAfterTax) */\n      tag_277\n        /* \"contracts/GeckoGold.sol\":4195:4204  recipient */\n      dup9\n        /* \"contracts/GeckoGold.sol\":4206:4220  amountAfterTax */\n      dup3\n        /* \"contracts/GeckoGold.sol\":4180:4194  super.transfer */\n      tag_278\n        /* \"contracts/GeckoGold.sol\":4180:4221  super.transfer(recipient, amountAfterTax) */\n      jump\t// in\n    tag_277:\n        /* \"contracts/GeckoGold.sol\":4173:4221  return super.transfer(recipient, amountAfterTax) */\n      swap6\n      pop\n      pop\n      pop\n        /* \"contracts/GeckoGold.sol\":2541:2542  _ */\n      pop\n        /* \"contracts/GeckoGold.sol\":2170:2171  _ */\n      pop\n        /* \"contracts/GeckoGold.sol\":3724:4228  function transfer(address recipient, uint256 amount) public override notBlacklisted(msg.sender) tradingGuard(msg.sender) whenNotPaused noSelfTransfer(recipient) returns (bool) {... */\n      pop\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":4678:4988  function updateEngagementPoints(address user, uint256 points) external onlyOwner {... */\n    tag_136:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_280\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_280:\n        /* \"contracts/GeckoGold.sol\":836:841  10000 */\n      0x2710\n        /* \"contracts/GeckoGold.sol\":4802:4808  points */\n      dup2\n        /* \"contracts/GeckoGold.sol\":4777:4793  engagementPoints */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":4777:4799  engagementPoints[user] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":4794:4798  user */\n      dup6\n        /* \"contracts/GeckoGold.sol\":4777:4799  engagementPoints[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GeckoGold.sol\":4777:4808  engagementPoints[user] + points */\n      tag_282\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_282:\n        /* \"contracts/GeckoGold.sol\":4777:4833  engagementPoints[user] + points <= MAX_ENGAGEMENT_POINTS */\n      gt\n      iszero\n        /* \"contracts/GeckoGold.sol\":4769:4871  require(engagementPoints[user] + points <= MAX_ENGAGEMENT_POINTS, \"Exceeds maximum engagement points\") */\n      tag_284\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_285\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_284:\n        /* \"contracts/GeckoGold.sol\":4907:4913  points */\n      dup1\n        /* \"contracts/GeckoGold.sol\":4881:4897  engagementPoints */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":4881:4903  engagementPoints[user] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":4898:4902  user */\n      dup5\n        /* \"contracts/GeckoGold.sol\":4881:4903  engagementPoints[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/GeckoGold.sol\":4881:4913  engagementPoints[user] += points */\n      dup3\n      dup3\n      sload\n      tag_287\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_287:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":4952:4956  user */\n      dup2\n        /* \"contracts/GeckoGold.sol\":4928:4981  EngagementPointsUpdated(user, engagementPoints[user]) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x40547f371cf37574d1a01eeeb1593f8db1a3e44286bba3b92cf2867707c9e473\n        /* \"contracts/GeckoGold.sol\":4958:4974  engagementPoints */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":4958:4980  engagementPoints[user] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":4975:4979  user */\n      dup6\n        /* \"contracts/GeckoGold.sol\":4958:4980  engagementPoints[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GeckoGold.sol\":4928:4981  EngagementPointsUpdated(user, engagementPoints[user]) */\n      mload(0x40)\n      tag_288\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_288:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/GeckoGold.sol\":4678:4988  function updateEngagementPoints(address user, uint256 points) external onlyOwner {... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":5374:5968  function claimReward() external whenNotPaused notBlacklisted(msg.sender) cooldownPeriod(msg.sender) {... */\n    tag_138:\n        /* \"contracts/GeckoGold.sol\":2502:2508  paused */\n      0x0d\n      0x01\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/GeckoGold.sol\":2501:2508  !paused */\n      iszero\n        /* \"contracts/GeckoGold.sol\":2493:2531  require(!paused, \"Contract is paused\") */\n      tag_290\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_291\n      swap1\n      tag_261\n      jump\t// in\n    tag_291:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_290:\n        /* \"contracts/GeckoGold.sol\":5435:5445  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":2103:2123  blacklistedAddresses */\n      0x08\n        /* \"contracts/GeckoGold.sol\":2103:2133  blacklistedAddresses[_address] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":2124:2132  _address */\n      dup3\n        /* \"contracts/GeckoGold.sol\":2103:2133  blacklistedAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/GeckoGold.sol\":2102:2133  !blacklistedAddresses[_address] */\n      iszero\n        /* \"contracts/GeckoGold.sol\":2094:2160  require(!blacklistedAddresses[_address], \"Address is blacklisted\") */\n      tag_293\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_294\n      swap1\n      tag_252\n      jump\t// in\n    tag_294:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_293:\n        /* \"contracts/GeckoGold.sol\":5462:5472  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":2703:2709  1 days */\n      0x015180\n        /* \"contracts/GeckoGold.sol\":2683:2694  lastClaimed */\n      0x0b\n        /* \"contracts/GeckoGold.sol\":2683:2700  lastClaimed[user] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":2695:2699  user */\n      dup4\n        /* \"contracts/GeckoGold.sol\":2683:2700  lastClaimed[user] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GeckoGold.sol\":2683:2709  lastClaimed[user] + 1 days */\n      tag_296\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_296:\n        /* \"contracts/GeckoGold.sol\":2664:2679  block.timestamp */\n      timestamp\n        /* \"contracts/GeckoGold.sol\":2664:2709  block.timestamp >= lastClaimed[user] + 1 days */\n      lt\n      iszero\n        /* \"contracts/GeckoGold.sol\":2656:2735  require(block.timestamp >= lastClaimed[user] + 1 days, \"Claim cooldown active\") */\n      tag_297\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_298\n      swap1\n      tag_299\n      jump\t// in\n    tag_298:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_297:\n        /* \"contracts/GeckoGold.sol\":5484:5498  uint256 reward */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5501:5517  engagementPoints */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":5501:5529  engagementPoints[msg.sender] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5518:5528  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":5501:5529  engagementPoints[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/GeckoGold.sol\":5484:5529  uint256 reward = engagementPoints[msg.sender] */\n      swap1\n      pop\n        /* \"contracts/GeckoGold.sol\":5556:5557  0 */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5547:5553  reward */\n      dup2\n        /* \"contracts/GeckoGold.sol\":5547:5557  reward > 0 */\n      gt\n        /* \"contracts/GeckoGold.sol\":5539:5582  require(reward > 0, \"No rewards available\") */\n      tag_301\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_302\n      swap1\n      tag_303\n      jump\t// in\n    tag_302:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_301:\n        /* \"contracts/GeckoGold.sol\":5622:5628  reward */\n      dup1\n        /* \"contracts/GeckoGold.sol\":5600:5618  balanceOf(owner()) */\n      tag_304\n        /* \"contracts/GeckoGold.sol\":5610:5617  owner() */\n      tag_305\n        /* \"contracts/GeckoGold.sol\":5610:5615  owner */\n      tag_118\n        /* \"contracts/GeckoGold.sol\":5610:5617  owner() */\n      jump\t// in\n    tag_305:\n        /* \"contracts/GeckoGold.sol\":5600:5609  balanceOf */\n      tag_100\n        /* \"contracts/GeckoGold.sol\":5600:5618  balanceOf(owner()) */\n      jump\t// in\n    tag_304:\n        /* \"contracts/GeckoGold.sol\":5600:5628  balanceOf(owner()) >= reward */\n      lt\n      iszero\n        /* \"contracts/GeckoGold.sol\":5592:5659  require(balanceOf(owner()) >= reward, \"Insufficient reward supply\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_307\n      swap1\n      tag_308\n      jump\t// in\n    tag_307:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_306:\n        /* \"contracts/GeckoGold.sol\":5736:5737  0 */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5705:5721  engagementPoints */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":5705:5733  engagementPoints[msg.sender] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5722:5732  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":5705:5733  engagementPoints[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GeckoGold.sol\":5705:5737  engagementPoints[msg.sender] = 0 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":5815:5830  block.timestamp */\n      timestamp\n        /* \"contracts/GeckoGold.sol\":5789:5800  lastClaimed */\n      0x0b\n        /* \"contracts/GeckoGold.sol\":5789:5812  lastClaimed[msg.sender] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":5801:5811  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":5789:5812  lastClaimed[msg.sender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/GeckoGold.sol\":5789:5830  lastClaimed[msg.sender] = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":5875:5913  _transfer(owner(), msg.sender, reward) */\n      tag_309\n        /* \"contracts/GeckoGold.sol\":5885:5892  owner() */\n      tag_310\n        /* \"contracts/GeckoGold.sol\":5885:5890  owner */\n      tag_118\n        /* \"contracts/GeckoGold.sol\":5885:5892  owner() */\n      jump\t// in\n    tag_310:\n        /* \"contracts/GeckoGold.sol\":5894:5904  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":5906:5912  reward */\n      dup4\n        /* \"contracts/GeckoGold.sol\":5875:5884  _transfer */\n      tag_197\n        /* \"contracts/GeckoGold.sol\":5875:5913  _transfer(owner(), msg.sender, reward) */\n      jump\t// in\n    tag_309:\n        /* \"contracts/GeckoGold.sol\":5942:5952  msg.sender */\n      caller\n        /* \"contracts/GeckoGold.sol\":5928:5961  RewardClaimed(msg.sender, reward) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241\n        /* \"contracts/GeckoGold.sol\":5954:5960  reward */\n      dup3\n        /* \"contracts/GeckoGold.sol\":5928:5961  RewardClaimed(msg.sender, reward) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_311:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/GeckoGold.sol\":5474:5968  {... */\n      pop\n        /* \"contracts/GeckoGold.sol\":2170:2171  _ */\n      pop\n        /* \"contracts/GeckoGold.sol\":2541:2542  _ */\n      pop\n        /* \"contracts/GeckoGold.sol\":5374:5968  function claimReward() external whenNotPaused notBlacklisted(msg.sender) cooldownPeriod(msg.sender) {... */\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":3484:3659  function setTaxRate(uint256 newTaxRate) external onlyOwner {... */\n    tag_141:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_313\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_313:\n        /* \"contracts/GeckoGold.sol\":638:640  10 */\n      0x0a\n        /* \"contracts/GeckoGold.sol\":3561:3571  newTaxRate */\n      dup2\n        /* \"contracts/GeckoGold.sol\":3561:3587  newTaxRate <= MAX_TAX_RATE */\n      gt\n      iszero\n        /* \"contracts/GeckoGold.sol\":3553:3622  require(newTaxRate <= MAX_TAX_RATE, \"Tax rate exceeds maximum limit\") */\n      tag_315\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_316\n      swap1\n      tag_317\n      jump\t// in\n    tag_316:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_315:\n        /* \"contracts/GeckoGold.sol\":3642:3652  newTaxRate */\n      dup1\n        /* \"contracts/GeckoGold.sol\":3632:3639  taxRate */\n      0x07\n        /* \"contracts/GeckoGold.sol\":3632:3652  taxRate = newTaxRate */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":3484:3659  function setTaxRate(uint256 newTaxRate) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":4490:4628  function burnSupply(uint256 amount) external onlyOwner {... */\n    tag_144:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_319\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_319:\n        /* \"contracts/GeckoGold.sol\":4555:4577  _burn(owner(), amount) */\n      tag_321\n        /* \"contracts/GeckoGold.sol\":4561:4568  owner() */\n      tag_322\n        /* \"contracts/GeckoGold.sol\":4561:4566  owner */\n      tag_118\n        /* \"contracts/GeckoGold.sol\":4561:4568  owner() */\n      jump\t// in\n    tag_322:\n        /* \"contracts/GeckoGold.sol\":4570:4576  amount */\n      dup3\n        /* \"contracts/GeckoGold.sol\":4555:4560  _burn */\n      tag_204\n        /* \"contracts/GeckoGold.sol\":4555:4577  _burn(owner(), amount) */\n      jump\t// in\n    tag_321:\n        /* \"contracts/GeckoGold.sol\":4605:4612  owner() */\n      tag_323\n        /* \"contracts/GeckoGold.sol\":4605:4610  owner */\n      tag_118\n        /* \"contracts/GeckoGold.sol\":4605:4612  owner() */\n      jump\t// in\n    tag_323:\n        /* \"contracts/GeckoGold.sol\":4592:4621  TokensBurned(owner(), amount) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xfd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6\n        /* \"contracts/GeckoGold.sol\":4614:4620  amount */\n      dup3\n        /* \"contracts/GeckoGold.sol\":4592:4621  TokensBurned(owner(), amount) */\n      mload(0x40)\n      tag_324\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_324:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/GeckoGold.sol\":4490:4628  function burnSupply(uint256 amount) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":1112:1144  uint256 public tradingStartBlock */\n    tag_146:\n      sload(0x0c)\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_151:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3631:3638  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3668  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3669:3674  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3675  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3676:3683  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3657:3684  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3650:3684  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3551:3691  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":6029:6137  function balance(address account) external view returns (uint256) {... */\n    tag_155:\n        /* \"contracts/GeckoGold.sol\":6086:6093  uint256 */\n      0x00\n        /* \"contracts/GeckoGold.sol\":6112:6130  balanceOf(account) */\n      tag_327\n        /* \"contracts/GeckoGold.sol\":6122:6129  account */\n      dup3\n        /* \"contracts/GeckoGold.sol\":6112:6121  balanceOf */\n      tag_100\n        /* \"contracts/GeckoGold.sol\":6112:6130  balanceOf(account) */\n      jump\t// in\n    tag_327:\n        /* \"contracts/GeckoGold.sol\":6105:6130  return balanceOf(account) */\n      swap1\n      pop\n        /* \"contracts/GeckoGold.sol\":6029:6137  function balance(address account) external view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":3169:3282  function addToWhitelist(address _address) external onlyOwner {... */\n    tag_159:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_329\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_329:\n        /* \"contracts/GeckoGold.sol\":3271:3275  true */\n      0x01\n        /* \"contracts/GeckoGold.sol\":3240:3258  whitelistAddresses */\n      0x09\n        /* \"contracts/GeckoGold.sol\":3240:3268  whitelistAddresses[_address] */\n      0x00\n        /* \"contracts/GeckoGold.sol\":3259:3267  _address */\n      dup4\n        /* \"contracts/GeckoGold.sol\":3240:3268  whitelistAddresses[_address] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/GeckoGold.sol\":3240:3275  whitelistAddresses[_address] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/GeckoGold.sol\":3169:3282  function addToWhitelist(address _address) external onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_162:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_332\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_180\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_332:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_334\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_335\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_335:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_334:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_336\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_232\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/GeckoGold.sol\":680:746  uint256 public constant MAX_TRANSFER_AMOUNT = 1_000_000 * 10 ** 18 */\n    tag_164:\n        /* \"contracts/GeckoGold.sol\":726:746  1_000_000 * 10 ** 18 */\n      0xd3c21bcecceda1000000\n        /* \"contracts/GeckoGold.sol\":680:746  uint256 public constant MAX_TRANSFER_AMOUNT = 1_000_000 * 10 ** 18 */\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_175:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_177:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      tag_339\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8819:8824  owner */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8826:8833  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8835:8840  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8842:8846  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8818  _approve */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8810:8847  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_339:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8726:8854  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_180:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_342\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_342:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      tag_343\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1860  owner */\n      tag_118\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_343:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_344\n      jumpi\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_345\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_175\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_345:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_346\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_346:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_344:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n    tag_195:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10538  uint256 currentAllowance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      tag_348\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10551:10556  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10558:10565  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10550  allowance */\n      tag_151\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10541:10566  allowance(owner, spender) */\n      jump\t// in\n    tag_348:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10514:10566  uint256 currentAllowance = allowance(owner, spender) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10600:10617  type(uint256).max */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10596  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10580:10617  currentAllowance != type(uint256).max */\n      eq\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n      tag_349\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10656:10661  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10653  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10637:10661  currentAllowance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n      iszero\n      tag_350\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10715:10722  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10724:10740  currentAllowance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10742:10747  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10688:10748  ERC20InsufficientAllowance(spender, currentAllowance, value) */\n      mload(0x40)\n      0xfb8f41b200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_351\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_351:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10633:10763  if (currentAllowance < value) {... */\n    tag_350:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      tag_353\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10813:10818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10820:10827  spender */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10848:10853  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10845  currentAllowance */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10829:10853  currentAllowance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10855:10860  false */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10812  _approve */\n      tag_340\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10804:10861  _approve(owner, spender, currentAllowance - value, false) */\n      jump\t// in\n    tag_353:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10576:10886  if (currentAllowance != type(uint256).max) {... */\n    tag_349:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10504:10892  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10415:10892  function _spendAllowance(address owner, address spender, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_197:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5492:5493  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5480  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5476:5494  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n      tag_355\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5544:5545  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5517:5547  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_356\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_356:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5472:5558  if (from == address(0)) {... */\n    tag_355:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5585:5586  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5573  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5571:5587  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5639:5640  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5610:5642  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_358\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_358:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5567:5653  if (to == address(0)) {... */\n    tag_357:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      tag_359\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5670:5674  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5676:5678  to */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5680:5685  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5669  _update */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5662:5686  _update(from, to, value) */\n      jump\t// in\n    tag_359:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":5393:5693  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n    tag_204:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8073:8074  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8061  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8054:8075  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n      tag_362\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8125:8126  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8098:8128  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_363\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_363:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8050:8139  if (account == address(0)) {... */\n    tag_362:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      tag_364\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8156:8163  account */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8173:8174  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8177:8182  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8155  _update */\n      tag_360\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":8148:8183  _update(account, address(0), value) */\n      jump\t// in\n    tag_364:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7984:8190  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n    tag_220:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2475  _status */\n      sload(0x06)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2468:2487  _status != _ENTERED */\n      sub\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2460:2523  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_367\n      swap1\n      tag_368\n      jump\t// in\n    tag_367:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_366:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1759:1760  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2605  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2598:2616  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2336:2623  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n    tag_226:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1716:1717  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2816  _status */\n      0x06\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2809:2831  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2629:2838  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_232:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3004:3010  _owner */\n      0x05\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3026  _owner */\n      0x05\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n    tag_278:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3384:3388  bool */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3413  address owner */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      tag_372\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3426  _msgSender */\n      tag_175\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3416:3428  _msgSender() */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3400:3428  address owner = _msgSender() */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      tag_373\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3448:3453  owner */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3455:3457  to */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3459:3464  value */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3447  _transfer */\n      tag_197\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3438:3465  _transfer(owner, to, value) */\n      jump\t// in\n    tag_373:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3482:3486  true */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3475:3486  return true */\n      swap2\n      pop\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":3315:3493  function transfer(address to, uint256 value) public virtual returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_340:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9830:9831  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9818  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9813:9832  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n      tag_375\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9884:9885  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9855:9887  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_376\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_376:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9809:9898  if (owner == address(0)) {... */\n    tag_375:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9930:9931  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9918  spender */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9911:9932  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n      tag_377\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9983:9984  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9955:9986  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_378\n      swap2\n      swap1\n      tag_120\n      jump\t// in\n    tag_378:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9907:9997  if (spender == address(0)) {... */\n    tag_377:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10036:10041  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10017  _allowances */\n      0x01\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10018:10023  owner */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10024  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10025:10032  spender */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10033  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10006:10041  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10055:10064  emitEvent */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n      iszero\n      tag_379\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10101:10108  spender */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10094:10099  owner */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10110:10115  value */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10085:10116  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_380\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_380:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":10051:10127  if (emitEvent) {... */\n    tag_379:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":9701:10133  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_360:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6113:6114  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6101  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6097:6115  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      tag_382\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6249:6254  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6245  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6233:6254  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_383\n      swap2\n      swap1\n      tag_283\n      jump\t// in\n    tag_383:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n      jump(tag_384)\n    tag_382:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6304  uint256 fromBalance */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6316  _balances */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6317:6321  from */\n      dup6\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6307:6322  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6285:6322  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6354:6359  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6351  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6340:6359  fromBalance < value */\n      lt\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n      iszero\n      tag_385\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6411:6415  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6417:6428  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6430:6435  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6386:6436  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_386\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_352\n      jump\t// in\n    tag_386:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6336:6451  if (fromBalance < value) {... */\n    tag_385:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6603:6608  value */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6600  fromBalance */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6589:6608  fromBalance - value */\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6580  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6581:6585  from */\n      dup7\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6586  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6571:6608  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6271:6633  {... */\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6093:6633  if (from == address(0)) {... */\n    tag_384:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6661:6662  0 */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6649  to */\n      dup3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6647:6663  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      tag_387\n      jumpi\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6826:6831  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6822  _totalSupply */\n      0x02\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6810:6831  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n      jump(tag_388)\n    tag_387:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7038:7043  value */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7030  _balances */\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      dup1\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7031:7033  to */\n      dup5\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7034  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7021:7043  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6643:7068  if (to == address(0)) {... */\n    tag_388:\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7098:7100  to */\n      dup2\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7092:7096  from */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7102:7107  value */\n      dup4\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":7083:7108  Transfer(from, to, value) */\n      mload(0x40)\n      tag_389\n      swap2\n      swap1\n      tag_66\n      jump\t// in\n    tag_389:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/token/ERC20/ERC20.sol\":6008:7115  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_390:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_391:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:533   */\n    tag_392:\n        /* \"#utility.yul\":368:369   */\n      0x00\n        /* \"#utility.yul\":378:491   */\n    tag_445:\n        /* \"#utility.yul\":392:398   */\n      dup4\n        /* \"#utility.yul\":389:390   */\n      dup2\n        /* \"#utility.yul\":386:399   */\n      lt\n        /* \"#utility.yul\":378:491   */\n      iszero\n      tag_447\n      jumpi\n        /* \"#utility.yul\":477:478   */\n      dup1\n        /* \"#utility.yul\":472:475   */\n      dup3\n        /* \"#utility.yul\":468:479   */\n      add\n        /* \"#utility.yul\":462:480   */\n      mload\n        /* \"#utility.yul\":458:459   */\n      dup2\n        /* \"#utility.yul\":453:456   */\n      dup5\n        /* \"#utility.yul\":449:460   */\n      add\n        /* \"#utility.yul\":442:481   */\n      mstore\n        /* \"#utility.yul\":414:416   */\n      0x20\n        /* \"#utility.yul\":411:412   */\n      dup2\n        /* \"#utility.yul\":407:417   */\n      add\n        /* \"#utility.yul\":402:417   */\n      swap1\n      pop\n        /* \"#utility.yul\":378:491   */\n      jump(tag_445)\n    tag_447:\n        /* \"#utility.yul\":525:526   */\n      0x00\n        /* \"#utility.yul\":516:522   */\n      dup5\n        /* \"#utility.yul\":511:514   */\n      dup5\n        /* \"#utility.yul\":507:523   */\n      add\n        /* \"#utility.yul\":500:527   */\n      mstore\n        /* \"#utility.yul\":349:533   */\n      pop\n        /* \"#utility.yul\":287:533   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":539:641   */\n    tag_393:\n        /* \"#utility.yul\":580:586   */\n      0x00\n        /* \"#utility.yul\":631:633   */\n      0x1f\n        /* \"#utility.yul\":627:634   */\n      not\n        /* \"#utility.yul\":622:624   */\n      0x1f\n        /* \"#utility.yul\":615:620   */\n      dup4\n        /* \"#utility.yul\":611:625   */\n      add\n        /* \"#utility.yul\":607:635   */\n      and\n        /* \"#utility.yul\":597:635   */\n      swap1\n      pop\n        /* \"#utility.yul\":539:641   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":647:1024   */\n    tag_394:\n        /* \"#utility.yul\":735:738   */\n      0x00\n        /* \"#utility.yul\":763:802   */\n      tag_450\n        /* \"#utility.yul\":796:801   */\n      dup3\n        /* \"#utility.yul\":763:802   */\n      tag_390\n      jump\t// in\n    tag_450:\n        /* \"#utility.yul\":818:889   */\n      tag_451\n        /* \"#utility.yul\":882:888   */\n      dup2\n        /* \"#utility.yul\":877:880   */\n      dup6\n        /* \"#utility.yul\":818:889   */\n      tag_391\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":811:889   */\n      swap4\n      pop\n        /* \"#utility.yul\":898:963   */\n      tag_452\n        /* \"#utility.yul\":956:962   */\n      dup2\n        /* \"#utility.yul\":951:954   */\n      dup6\n        /* \"#utility.yul\":944:948   */\n      0x20\n        /* \"#utility.yul\":937:942   */\n      dup7\n        /* \"#utility.yul\":933:949   */\n      add\n        /* \"#utility.yul\":898:963   */\n      tag_392\n      jump\t// in\n    tag_452:\n        /* \"#utility.yul\":988:1017   */\n      tag_453\n        /* \"#utility.yul\":1010:1016   */\n      dup2\n        /* \"#utility.yul\":988:1017   */\n      tag_393\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":983:986   */\n      dup5\n        /* \"#utility.yul\":979:1018   */\n      add\n        /* \"#utility.yul\":972:1018   */\n      swap2\n      pop\n        /* \"#utility.yul\":739:1024   */\n      pop\n        /* \"#utility.yul\":647:1024   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1030:1343   */\n    tag_49:\n        /* \"#utility.yul\":1143:1147   */\n      0x00\n        /* \"#utility.yul\":1181:1183   */\n      0x20\n        /* \"#utility.yul\":1170:1179   */\n      dup3\n        /* \"#utility.yul\":1166:1184   */\n      add\n        /* \"#utility.yul\":1158:1184   */\n      swap1\n      pop\n        /* \"#utility.yul\":1230:1239   */\n      dup2\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1220:1240   */\n      sub\n        /* \"#utility.yul\":1216:1217   */\n      0x00\n        /* \"#utility.yul\":1205:1214   */\n      dup4\n        /* \"#utility.yul\":1201:1218   */\n      add\n        /* \"#utility.yul\":1194:1241   */\n      mstore\n        /* \"#utility.yul\":1258:1336   */\n      tag_455\n        /* \"#utility.yul\":1331:1335   */\n      dup2\n        /* \"#utility.yul\":1322:1328   */\n      dup5\n        /* \"#utility.yul\":1258:1336   */\n      tag_394\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":1250:1336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1030:1343   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1430:1547   */\n    tag_396:\n        /* \"#utility.yul\":1539:1540   */\n      0x00\n        /* \"#utility.yul\":1536:1537   */\n      dup1\n        /* \"#utility.yul\":1529:1541   */\n      revert\n        /* \"#utility.yul\":1676:1802   */\n    tag_398:\n        /* \"#utility.yul\":1713:1720   */\n      0x00\n        /* \"#utility.yul\":1753:1795   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1746:1751   */\n      dup3\n        /* \"#utility.yul\":1742:1796   */\n      and\n        /* \"#utility.yul\":1731:1796   */\n      swap1\n      pop\n        /* \"#utility.yul\":1676:1802   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1808:1904   */\n    tag_399:\n        /* \"#utility.yul\":1845:1852   */\n      0x00\n        /* \"#utility.yul\":1874:1898   */\n      tag_461\n        /* \"#utility.yul\":1892:1897   */\n      dup3\n        /* \"#utility.yul\":1874:1898   */\n      tag_398\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":1863:1898   */\n      swap1\n      pop\n        /* \"#utility.yul\":1808:1904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2032   */\n    tag_400:\n        /* \"#utility.yul\":1983:2007   */\n      tag_463\n        /* \"#utility.yul\":2001:2006   */\n      dup2\n        /* \"#utility.yul\":1983:2007   */\n      tag_399\n      jump\t// in\n    tag_463:\n        /* \"#utility.yul\":1976:1981   */\n      dup2\n        /* \"#utility.yul\":1973:2008   */\n      eq\n        /* \"#utility.yul\":1963:2026   */\n      tag_464\n      jumpi\n        /* \"#utility.yul\":2022:2023   */\n      0x00\n        /* \"#utility.yul\":2019:2020   */\n      dup1\n        /* \"#utility.yul\":2012:2024   */\n      revert\n        /* \"#utility.yul\":1963:2026   */\n    tag_464:\n        /* \"#utility.yul\":1910:2032   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2038:2177   */\n    tag_401:\n        /* \"#utility.yul\":2084:2089   */\n      0x00\n        /* \"#utility.yul\":2122:2128   */\n      dup2\n        /* \"#utility.yul\":2109:2129   */\n      calldataload\n        /* \"#utility.yul\":2100:2129   */\n      swap1\n      pop\n        /* \"#utility.yul\":2138:2171   */\n      tag_466\n        /* \"#utility.yul\":2165:2170   */\n      dup2\n        /* \"#utility.yul\":2138:2171   */\n      tag_400\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":2038:2177   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2183:2260   */\n    tag_402:\n        /* \"#utility.yul\":2220:2227   */\n      0x00\n        /* \"#utility.yul\":2249:2254   */\n      dup2\n        /* \"#utility.yul\":2238:2254   */\n      swap1\n      pop\n        /* \"#utility.yul\":2183:2260   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2266:2388   */\n    tag_403:\n        /* \"#utility.yul\":2339:2363   */\n      tag_469\n        /* \"#utility.yul\":2357:2362   */\n      dup2\n        /* \"#utility.yul\":2339:2363   */\n      tag_402\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":2332:2337   */\n      dup2\n        /* \"#utility.yul\":2329:2364   */\n      eq\n        /* \"#utility.yul\":2319:2382   */\n      tag_470\n      jumpi\n        /* \"#utility.yul\":2378:2379   */\n      0x00\n        /* \"#utility.yul\":2375:2376   */\n      dup1\n        /* \"#utility.yul\":2368:2380   */\n      revert\n        /* \"#utility.yul\":2319:2382   */\n    tag_470:\n        /* \"#utility.yul\":2266:2388   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2394:2533   */\n    tag_404:\n        /* \"#utility.yul\":2440:2445   */\n      0x00\n        /* \"#utility.yul\":2478:2484   */\n      dup2\n        /* \"#utility.yul\":2465:2485   */\n      calldataload\n        /* \"#utility.yul\":2456:2485   */\n      swap1\n      pop\n        /* \"#utility.yul\":2494:2527   */\n      tag_472\n        /* \"#utility.yul\":2521:2526   */\n      dup2\n        /* \"#utility.yul\":2494:2527   */\n      tag_403\n      jump\t// in\n    tag_472:\n        /* \"#utility.yul\":2394:2533   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2539:3013   */\n    tag_52:\n        /* \"#utility.yul\":2607:2613   */\n      0x00\n        /* \"#utility.yul\":2615:2621   */\n      dup1\n        /* \"#utility.yul\":2664:2666   */\n      0x40\n        /* \"#utility.yul\":2652:2661   */\n      dup4\n        /* \"#utility.yul\":2643:2650   */\n      dup6\n        /* \"#utility.yul\":2639:2662   */\n      sub\n        /* \"#utility.yul\":2635:2667   */\n      slt\n        /* \"#utility.yul\":2632:2751   */\n      iszero\n      tag_474\n      jumpi\n        /* \"#utility.yul\":2670:2749   */\n      tag_475\n      tag_396\n      jump\t// in\n    tag_475:\n        /* \"#utility.yul\":2632:2751   */\n    tag_474:\n        /* \"#utility.yul\":2790:2791   */\n      0x00\n        /* \"#utility.yul\":2815:2868   */\n      tag_476\n        /* \"#utility.yul\":2860:2867   */\n      dup6\n        /* \"#utility.yul\":2851:2857   */\n      dup3\n        /* \"#utility.yul\":2840:2849   */\n      dup7\n        /* \"#utility.yul\":2836:2858   */\n      add\n        /* \"#utility.yul\":2815:2868   */\n      tag_401\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":2805:2868   */\n      swap3\n      pop\n        /* \"#utility.yul\":2761:2878   */\n      pop\n        /* \"#utility.yul\":2917:2919   */\n      0x20\n        /* \"#utility.yul\":2943:2996   */\n      tag_477\n        /* \"#utility.yul\":2988:2995   */\n      dup6\n        /* \"#utility.yul\":2979:2985   */\n      dup3\n        /* \"#utility.yul\":2968:2977   */\n      dup7\n        /* \"#utility.yul\":2964:2986   */\n      add\n        /* \"#utility.yul\":2943:2996   */\n      tag_404\n      jump\t// in\n    tag_477:\n        /* \"#utility.yul\":2933:2996   */\n      swap2\n      pop\n        /* \"#utility.yul\":2888:3006   */\n      pop\n        /* \"#utility.yul\":2539:3013   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3019:3109   */\n    tag_405:\n        /* \"#utility.yul\":3053:3060   */\n      0x00\n        /* \"#utility.yul\":3096:3101   */\n      dup2\n        /* \"#utility.yul\":3089:3102   */\n      iszero\n        /* \"#utility.yul\":3082:3103   */\n      iszero\n        /* \"#utility.yul\":3071:3103   */\n      swap1\n      pop\n        /* \"#utility.yul\":3019:3109   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3115:3224   */\n    tag_406:\n        /* \"#utility.yul\":3196:3217   */\n      tag_480\n        /* \"#utility.yul\":3211:3216   */\n      dup2\n        /* \"#utility.yul\":3196:3217   */\n      tag_405\n      jump\t// in\n    tag_480:\n        /* \"#utility.yul\":3191:3194   */\n      dup3\n        /* \"#utility.yul\":3184:3218   */\n      mstore\n        /* \"#utility.yul\":3115:3224   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3230:3440   */\n    tag_55:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3433   */\n      tag_482\n        /* \"#utility.yul\":3430:3431   */\n      0x00\n        /* \"#utility.yul\":3419:3428   */\n      dup4\n        /* \"#utility.yul\":3415:3432   */\n      add\n        /* \"#utility.yul\":3406:3412   */\n      dup5\n        /* \"#utility.yul\":3368:3433   */\n      tag_406\n      jump\t// in\n    tag_482:\n        /* \"#utility.yul\":3230:3440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3446:3562   */\n    tag_407:\n        /* \"#utility.yul\":3516:3537   */\n      tag_484\n        /* \"#utility.yul\":3531:3536   */\n      dup2\n        /* \"#utility.yul\":3516:3537   */\n      tag_405\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":3509:3514   */\n      dup2\n        /* \"#utility.yul\":3506:3538   */\n      eq\n        /* \"#utility.yul\":3496:3556   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":3552:3553   */\n      0x00\n        /* \"#utility.yul\":3549:3550   */\n      dup1\n        /* \"#utility.yul\":3542:3554   */\n      revert\n        /* \"#utility.yul\":3496:3556   */\n    tag_485:\n        /* \"#utility.yul\":3446:3562   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3568:3701   */\n    tag_408:\n        /* \"#utility.yul\":3611:3616   */\n      0x00\n        /* \"#utility.yul\":3649:3655   */\n      dup2\n        /* \"#utility.yul\":3636:3656   */\n      calldataload\n        /* \"#utility.yul\":3627:3656   */\n      swap1\n      pop\n        /* \"#utility.yul\":3665:3695   */\n      tag_487\n        /* \"#utility.yul\":3689:3694   */\n      dup2\n        /* \"#utility.yul\":3665:3695   */\n      tag_407\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":3568:3701   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3707:4175   */\n    tag_58:\n        /* \"#utility.yul\":3772:3778   */\n      0x00\n        /* \"#utility.yul\":3780:3786   */\n      dup1\n        /* \"#utility.yul\":3829:3831   */\n      0x40\n        /* \"#utility.yul\":3817:3826   */\n      dup4\n        /* \"#utility.yul\":3808:3815   */\n      dup6\n        /* \"#utility.yul\":3804:3827   */\n      sub\n        /* \"#utility.yul\":3800:3832   */\n      slt\n        /* \"#utility.yul\":3797:3916   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":3835:3914   */\n      tag_490\n      tag_396\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":3797:3916   */\n    tag_489:\n        /* \"#utility.yul\":3955:3956   */\n      0x00\n        /* \"#utility.yul\":3980:4033   */\n      tag_491\n        /* \"#utility.yul\":4025:4032   */\n      dup6\n        /* \"#utility.yul\":4016:4022   */\n      dup3\n        /* \"#utility.yul\":4005:4014   */\n      dup7\n        /* \"#utility.yul\":4001:4023   */\n      add\n        /* \"#utility.yul\":3980:4033   */\n      tag_401\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":3970:4033   */\n      swap3\n      pop\n        /* \"#utility.yul\":3926:4043   */\n      pop\n        /* \"#utility.yul\":4082:4084   */\n      0x20\n        /* \"#utility.yul\":4108:4158   */\n      tag_492\n        /* \"#utility.yul\":4150:4157   */\n      dup6\n        /* \"#utility.yul\":4141:4147   */\n      dup3\n        /* \"#utility.yul\":4130:4139   */\n      dup7\n        /* \"#utility.yul\":4126:4148   */\n      add\n        /* \"#utility.yul\":4108:4158   */\n      tag_408\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":4098:4158   */\n      swap2\n      pop\n        /* \"#utility.yul\":4053:4168   */\n      pop\n        /* \"#utility.yul\":3707:4175   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4181:4299   */\n    tag_409:\n        /* \"#utility.yul\":4268:4292   */\n      tag_494\n        /* \"#utility.yul\":4286:4291   */\n      dup2\n        /* \"#utility.yul\":4268:4292   */\n      tag_402\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":4263:4266   */\n      dup3\n        /* \"#utility.yul\":4256:4293   */\n      mstore\n        /* \"#utility.yul\":4181:4299   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4305:4527   */\n    tag_66:\n        /* \"#utility.yul\":4398:4402   */\n      0x00\n        /* \"#utility.yul\":4436:4438   */\n      0x20\n        /* \"#utility.yul\":4425:4434   */\n      dup3\n        /* \"#utility.yul\":4421:4439   */\n      add\n        /* \"#utility.yul\":4413:4439   */\n      swap1\n      pop\n        /* \"#utility.yul\":4449:4520   */\n      tag_496\n        /* \"#utility.yul\":4517:4518   */\n      0x00\n        /* \"#utility.yul\":4506:4515   */\n      dup4\n        /* \"#utility.yul\":4502:4519   */\n      add\n        /* \"#utility.yul\":4493:4499   */\n      dup5\n        /* \"#utility.yul\":4449:4520   */\n      tag_409\n      jump\t// in\n    tag_496:\n        /* \"#utility.yul\":4305:4527   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4533:5152   */\n    tag_69:\n        /* \"#utility.yul\":4610:4616   */\n      0x00\n        /* \"#utility.yul\":4618:4624   */\n      dup1\n        /* \"#utility.yul\":4626:4632   */\n      0x00\n        /* \"#utility.yul\":4675:4677   */\n      0x60\n        /* \"#utility.yul\":4663:4672   */\n      dup5\n        /* \"#utility.yul\":4654:4661   */\n      dup7\n        /* \"#utility.yul\":4650:4673   */\n      sub\n        /* \"#utility.yul\":4646:4678   */\n      slt\n        /* \"#utility.yul\":4643:4762   */\n      iszero\n      tag_498\n      jumpi\n        /* \"#utility.yul\":4681:4760   */\n      tag_499\n      tag_396\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":4643:4762   */\n    tag_498:\n        /* \"#utility.yul\":4801:4802   */\n      0x00\n        /* \"#utility.yul\":4826:4879   */\n      tag_500\n        /* \"#utility.yul\":4871:4878   */\n      dup7\n        /* \"#utility.yul\":4862:4868   */\n      dup3\n        /* \"#utility.yul\":4851:4860   */\n      dup8\n        /* \"#utility.yul\":4847:4869   */\n      add\n        /* \"#utility.yul\":4826:4879   */\n      tag_401\n      jump\t// in\n    tag_500:\n        /* \"#utility.yul\":4816:4879   */\n      swap4\n      pop\n        /* \"#utility.yul\":4772:4889   */\n      pop\n        /* \"#utility.yul\":4928:4930   */\n      0x20\n        /* \"#utility.yul\":4954:5007   */\n      tag_501\n        /* \"#utility.yul\":4999:5006   */\n      dup7\n        /* \"#utility.yul\":4990:4996   */\n      dup3\n        /* \"#utility.yul\":4979:4988   */\n      dup8\n        /* \"#utility.yul\":4975:4997   */\n      add\n        /* \"#utility.yul\":4954:5007   */\n      tag_401\n      jump\t// in\n    tag_501:\n        /* \"#utility.yul\":4944:5007   */\n      swap3\n      pop\n        /* \"#utility.yul\":4899:5017   */\n      pop\n        /* \"#utility.yul\":5056:5058   */\n      0x40\n        /* \"#utility.yul\":5082:5135   */\n      tag_502\n        /* \"#utility.yul\":5127:5134   */\n      dup7\n        /* \"#utility.yul\":5118:5124   */\n      dup3\n        /* \"#utility.yul\":5107:5116   */\n      dup8\n        /* \"#utility.yul\":5103:5125   */\n      add\n        /* \"#utility.yul\":5082:5135   */\n      tag_404\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":5072:5135   */\n      swap2\n      pop\n        /* \"#utility.yul\":5027:5145   */\n      pop\n        /* \"#utility.yul\":4533:5152   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5158:5487   */\n    tag_74:\n        /* \"#utility.yul\":5217:5223   */\n      0x00\n        /* \"#utility.yul\":5266:5268   */\n      0x20\n        /* \"#utility.yul\":5254:5263   */\n      dup3\n        /* \"#utility.yul\":5245:5252   */\n      dup5\n        /* \"#utility.yul\":5241:5264   */\n      sub\n        /* \"#utility.yul\":5237:5269   */\n      slt\n        /* \"#utility.yul\":5234:5353   */\n      iszero\n      tag_504\n      jumpi\n        /* \"#utility.yul\":5272:5351   */\n      tag_505\n      tag_396\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":5234:5353   */\n    tag_504:\n        /* \"#utility.yul\":5392:5393   */\n      0x00\n        /* \"#utility.yul\":5417:5470   */\n      tag_506\n        /* \"#utility.yul\":5462:5469   */\n      dup5\n        /* \"#utility.yul\":5453:5459   */\n      dup3\n        /* \"#utility.yul\":5442:5451   */\n      dup6\n        /* \"#utility.yul\":5438:5460   */\n      add\n        /* \"#utility.yul\":5417:5470   */\n      tag_401\n      jump\t// in\n    tag_506:\n        /* \"#utility.yul\":5407:5470   */\n      swap2\n      pop\n        /* \"#utility.yul\":5363:5480   */\n      pop\n        /* \"#utility.yul\":5158:5487   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5493:5579   */\n    tag_410:\n        /* \"#utility.yul\":5528:5535   */\n      0x00\n        /* \"#utility.yul\":5568:5572   */\n      0xff\n        /* \"#utility.yul\":5561:5566   */\n      dup3\n        /* \"#utility.yul\":5557:5573   */\n      and\n        /* \"#utility.yul\":5546:5573   */\n      swap1\n      pop\n        /* \"#utility.yul\":5493:5579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5585:5697   */\n    tag_411:\n        /* \"#utility.yul\":5668:5690   */\n      tag_509\n        /* \"#utility.yul\":5684:5689   */\n      dup2\n        /* \"#utility.yul\":5668:5690   */\n      tag_410\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":5663:5666   */\n      dup3\n        /* \"#utility.yul\":5656:5691   */\n      mstore\n        /* \"#utility.yul\":5585:5697   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5703:5917   */\n    tag_80:\n        /* \"#utility.yul\":5792:5796   */\n      0x00\n        /* \"#utility.yul\":5830:5832   */\n      0x20\n        /* \"#utility.yul\":5819:5828   */\n      dup3\n        /* \"#utility.yul\":5815:5833   */\n      add\n        /* \"#utility.yul\":5807:5833   */\n      swap1\n      pop\n        /* \"#utility.yul\":5843:5910   */\n      tag_511\n        /* \"#utility.yul\":5907:5908   */\n      0x00\n        /* \"#utility.yul\":5896:5905   */\n      dup4\n        /* \"#utility.yul\":5892:5909   */\n      add\n        /* \"#utility.yul\":5883:5889   */\n      dup5\n        /* \"#utility.yul\":5843:5910   */\n      tag_411\n      jump\t// in\n    tag_511:\n        /* \"#utility.yul\":5703:5917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5923:6252   */\n    tag_85:\n        /* \"#utility.yul\":5982:5988   */\n      0x00\n        /* \"#utility.yul\":6031:6033   */\n      0x20\n        /* \"#utility.yul\":6019:6028   */\n      dup3\n        /* \"#utility.yul\":6010:6017   */\n      dup5\n        /* \"#utility.yul\":6006:6029   */\n      sub\n        /* \"#utility.yul\":6002:6034   */\n      slt\n        /* \"#utility.yul\":5999:6118   */\n      iszero\n      tag_513\n      jumpi\n        /* \"#utility.yul\":6037:6116   */\n      tag_514\n      tag_396\n      jump\t// in\n    tag_514:\n        /* \"#utility.yul\":5999:6118   */\n    tag_513:\n        /* \"#utility.yul\":6157:6158   */\n      0x00\n        /* \"#utility.yul\":6182:6235   */\n      tag_515\n        /* \"#utility.yul\":6227:6234   */\n      dup5\n        /* \"#utility.yul\":6218:6224   */\n      dup3\n        /* \"#utility.yul\":6207:6216   */\n      dup6\n        /* \"#utility.yul\":6203:6225   */\n      add\n        /* \"#utility.yul\":6182:6235   */\n      tag_404\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":6172:6235   */\n      swap2\n      pop\n        /* \"#utility.yul\":6128:6245   */\n      pop\n        /* \"#utility.yul\":5923:6252   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6258:6376   */\n    tag_412:\n        /* \"#utility.yul\":6345:6369   */\n      tag_517\n        /* \"#utility.yul\":6363:6368   */\n      dup2\n        /* \"#utility.yul\":6345:6369   */\n      tag_399\n      jump\t// in\n    tag_517:\n        /* \"#utility.yul\":6340:6343   */\n      dup3\n        /* \"#utility.yul\":6333:6370   */\n      mstore\n        /* \"#utility.yul\":6258:6376   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6382:6604   */\n    tag_120:\n        /* \"#utility.yul\":6475:6479   */\n      0x00\n        /* \"#utility.yul\":6513:6515   */\n      0x20\n        /* \"#utility.yul\":6502:6511   */\n      dup3\n        /* \"#utility.yul\":6498:6516   */\n      add\n        /* \"#utility.yul\":6490:6516   */\n      swap1\n      pop\n        /* \"#utility.yul\":6526:6597   */\n      tag_519\n        /* \"#utility.yul\":6594:6595   */\n      0x00\n        /* \"#utility.yul\":6583:6592   */\n      dup4\n        /* \"#utility.yul\":6579:6596   */\n      add\n        /* \"#utility.yul\":6570:6576   */\n      dup5\n        /* \"#utility.yul\":6526:6597   */\n      tag_412\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":6382:6604   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6610:7084   */\n    tag_150:\n        /* \"#utility.yul\":6678:6684   */\n      0x00\n        /* \"#utility.yul\":6686:6692   */\n      dup1\n        /* \"#utility.yul\":6735:6737   */\n      0x40\n        /* \"#utility.yul\":6723:6732   */\n      dup4\n        /* \"#utility.yul\":6714:6721   */\n      dup6\n        /* \"#utility.yul\":6710:6733   */\n      sub\n        /* \"#utility.yul\":6706:6738   */\n      slt\n        /* \"#utility.yul\":6703:6822   */\n      iszero\n      tag_521\n      jumpi\n        /* \"#utility.yul\":6741:6820   */\n      tag_522\n      tag_396\n      jump\t// in\n    tag_522:\n        /* \"#utility.yul\":6703:6822   */\n    tag_521:\n        /* \"#utility.yul\":6861:6862   */\n      0x00\n        /* \"#utility.yul\":6886:6939   */\n      tag_523\n        /* \"#utility.yul\":6931:6938   */\n      dup6\n        /* \"#utility.yul\":6922:6928   */\n      dup3\n        /* \"#utility.yul\":6911:6920   */\n      dup7\n        /* \"#utility.yul\":6907:6929   */\n      add\n        /* \"#utility.yul\":6886:6939   */\n      tag_401\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":6876:6939   */\n      swap3\n      pop\n        /* \"#utility.yul\":6832:6949   */\n      pop\n        /* \"#utility.yul\":6988:6990   */\n      0x20\n        /* \"#utility.yul\":7014:7067   */\n      tag_524\n        /* \"#utility.yul\":7059:7066   */\n      dup6\n        /* \"#utility.yul\":7050:7056   */\n      dup3\n        /* \"#utility.yul\":7039:7048   */\n      dup7\n        /* \"#utility.yul\":7035:7057   */\n      add\n        /* \"#utility.yul\":7014:7067   */\n      tag_401\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":7004:7067   */\n      swap2\n      pop\n        /* \"#utility.yul\":6959:7077   */\n      pop\n        /* \"#utility.yul\":6610:7084   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7090:7270   */\n    tag_413:\n        /* \"#utility.yul\":7138:7215   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7135:7136   */\n      0x00\n        /* \"#utility.yul\":7128:7216   */\n      mstore\n        /* \"#utility.yul\":7235:7239   */\n      0x22\n        /* \"#utility.yul\":7232:7233   */\n      0x04\n        /* \"#utility.yul\":7225:7240   */\n      mstore\n        /* \"#utility.yul\":7259:7263   */\n      0x24\n        /* \"#utility.yul\":7256:7257   */\n      0x00\n        /* \"#utility.yul\":7249:7264   */\n      revert\n        /* \"#utility.yul\":7276:7596   */\n    tag_168:\n        /* \"#utility.yul\":7320:7326   */\n      0x00\n        /* \"#utility.yul\":7357:7358   */\n      0x02\n        /* \"#utility.yul\":7351:7355   */\n      dup3\n        /* \"#utility.yul\":7347:7359   */\n      div\n        /* \"#utility.yul\":7337:7359   */\n      swap1\n      pop\n        /* \"#utility.yul\":7404:7405   */\n      0x01\n        /* \"#utility.yul\":7398:7402   */\n      dup3\n        /* \"#utility.yul\":7394:7406   */\n      and\n        /* \"#utility.yul\":7425:7443   */\n      dup1\n        /* \"#utility.yul\":7415:7496   */\n      tag_527\n      jumpi\n        /* \"#utility.yul\":7481:7485   */\n      0x7f\n        /* \"#utility.yul\":7473:7479   */\n      dup3\n        /* \"#utility.yul\":7469:7486   */\n      and\n        /* \"#utility.yul\":7459:7486   */\n      swap2\n      pop\n        /* \"#utility.yul\":7415:7496   */\n    tag_527:\n        /* \"#utility.yul\":7543:7545   */\n      0x20\n        /* \"#utility.yul\":7535:7541   */\n      dup3\n        /* \"#utility.yul\":7532:7546   */\n      lt\n        /* \"#utility.yul\":7512:7530   */\n      dup2\n        /* \"#utility.yul\":7509:7547   */\n      sub\n        /* \"#utility.yul\":7506:7590   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":7562:7580   */\n      tag_529\n      tag_413\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":7506:7590   */\n    tag_528:\n        /* \"#utility.yul\":7327:7596   */\n      pop\n        /* \"#utility.yul\":7276:7596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7602:7769   */\n    tag_414:\n        /* \"#utility.yul\":7742:7761   */\n      0x4e6f7420656e6f75676820706f696e7473000000000000000000000000000000\n        /* \"#utility.yul\":7738:7739   */\n      0x00\n        /* \"#utility.yul\":7730:7736   */\n      dup3\n        /* \"#utility.yul\":7726:7740   */\n      add\n        /* \"#utility.yul\":7719:7762   */\n      mstore\n        /* \"#utility.yul\":7602:7769   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7775:8141   */\n    tag_415:\n        /* \"#utility.yul\":7917:7920   */\n      0x00\n        /* \"#utility.yul\":7938:8005   */\n      tag_532\n        /* \"#utility.yul\":8002:8004   */\n      0x11\n        /* \"#utility.yul\":7997:8000   */\n      dup4\n        /* \"#utility.yul\":7938:8005   */\n      tag_391\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":7931:8005   */\n      swap2\n      pop\n        /* \"#utility.yul\":8014:8107   */\n      tag_533\n        /* \"#utility.yul\":8103:8106   */\n      dup3\n        /* \"#utility.yul\":8014:8107   */\n      tag_414\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":8132:8134   */\n      0x20\n        /* \"#utility.yul\":8127:8130   */\n      dup3\n        /* \"#utility.yul\":8123:8135   */\n      add\n        /* \"#utility.yul\":8116:8135   */\n      swap1\n      pop\n        /* \"#utility.yul\":7775:8141   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8147:8566   */\n    tag_187:\n        /* \"#utility.yul\":8313:8317   */\n      0x00\n        /* \"#utility.yul\":8351:8353   */\n      0x20\n        /* \"#utility.yul\":8340:8349   */\n      dup3\n        /* \"#utility.yul\":8336:8354   */\n      add\n        /* \"#utility.yul\":8328:8354   */\n      swap1\n      pop\n        /* \"#utility.yul\":8400:8409   */\n      dup2\n        /* \"#utility.yul\":8394:8398   */\n      dup2\n        /* \"#utility.yul\":8390:8410   */\n      sub\n        /* \"#utility.yul\":8386:8387   */\n      0x00\n        /* \"#utility.yul\":8375:8384   */\n      dup4\n        /* \"#utility.yul\":8371:8388   */\n      add\n        /* \"#utility.yul\":8364:8411   */\n      mstore\n        /* \"#utility.yul\":8428:8559   */\n      tag_535\n        /* \"#utility.yul\":8554:8558   */\n      dup2\n        /* \"#utility.yul\":8428:8559   */\n      tag_415\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":8420:8559   */\n      swap1\n      pop\n        /* \"#utility.yul\":8147:8566   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8572:8752   */\n    tag_416:\n        /* \"#utility.yul\":8620:8697   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8617:8618   */\n      0x00\n        /* \"#utility.yul\":8610:8698   */\n      mstore\n        /* \"#utility.yul\":8717:8721   */\n      0x11\n        /* \"#utility.yul\":8714:8715   */\n      0x04\n        /* \"#utility.yul\":8707:8722   */\n      mstore\n        /* \"#utility.yul\":8741:8745   */\n      0x24\n        /* \"#utility.yul\":8738:8739   */\n      0x00\n        /* \"#utility.yul\":8731:8746   */\n      revert\n        /* \"#utility.yul\":8758:8952   */\n    tag_189:\n        /* \"#utility.yul\":8798:8802   */\n      0x00\n        /* \"#utility.yul\":8818:8838   */\n      tag_538\n        /* \"#utility.yul\":8836:8837   */\n      dup3\n        /* \"#utility.yul\":8818:8838   */\n      tag_402\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":8813:8838   */\n      swap2\n      pop\n        /* \"#utility.yul\":8852:8872   */\n      tag_539\n        /* \"#utility.yul\":8870:8871   */\n      dup4\n        /* \"#utility.yul\":8852:8872   */\n      tag_402\n      jump\t// in\n    tag_539:\n        /* \"#utility.yul\":8847:8872   */\n      swap3\n      pop\n        /* \"#utility.yul\":8896:8897   */\n      dup3\n        /* \"#utility.yul\":8893:8894   */\n      dup3\n        /* \"#utility.yul\":8889:8898   */\n      sub\n        /* \"#utility.yul\":8881:8898   */\n      swap1\n      pop\n        /* \"#utility.yul\":8920:8921   */\n      dup2\n        /* \"#utility.yul\":8914:8918   */\n      dup2\n        /* \"#utility.yul\":8911:8922   */\n      gt\n        /* \"#utility.yul\":8908:8945   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":8925:8943   */\n      tag_541\n      tag_416\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":8908:8945   */\n    tag_540:\n        /* \"#utility.yul\":8758:8952   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8958:9290   */\n    tag_211:\n        /* \"#utility.yul\":9079:9083   */\n      0x00\n        /* \"#utility.yul\":9117:9119   */\n      0x40\n        /* \"#utility.yul\":9106:9115   */\n      dup3\n        /* \"#utility.yul\":9102:9120   */\n      add\n        /* \"#utility.yul\":9094:9120   */\n      swap1\n      pop\n        /* \"#utility.yul\":9130:9201   */\n      tag_543\n        /* \"#utility.yul\":9198:9199   */\n      0x00\n        /* \"#utility.yul\":9187:9196   */\n      dup4\n        /* \"#utility.yul\":9183:9200   */\n      add\n        /* \"#utility.yul\":9174:9180   */\n      dup6\n        /* \"#utility.yul\":9130:9201   */\n      tag_412\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":9211:9283   */\n      tag_544\n        /* \"#utility.yul\":9279:9281   */\n      0x20\n        /* \"#utility.yul\":9268:9277   */\n      dup4\n        /* \"#utility.yul\":9264:9282   */\n      add\n        /* \"#utility.yul\":9255:9261   */\n      dup5\n        /* \"#utility.yul\":9211:9283   */\n      tag_409\n      jump\t// in\n    tag_544:\n        /* \"#utility.yul\":8958:9290   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9296:9433   */\n    tag_417:\n        /* \"#utility.yul\":9350:9355   */\n      0x00\n        /* \"#utility.yul\":9381:9387   */\n      dup2\n        /* \"#utility.yul\":9375:9388   */\n      mload\n        /* \"#utility.yul\":9366:9388   */\n      swap1\n      pop\n        /* \"#utility.yul\":9397:9427   */\n      tag_546\n        /* \"#utility.yul\":9421:9426   */\n      dup2\n        /* \"#utility.yul\":9397:9427   */\n      tag_407\n      jump\t// in\n    tag_546:\n        /* \"#utility.yul\":9296:9433   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9439:9784   */\n    tag_215:\n        /* \"#utility.yul\":9506:9512   */\n      0x00\n        /* \"#utility.yul\":9555:9557   */\n      0x20\n        /* \"#utility.yul\":9543:9552   */\n      dup3\n        /* \"#utility.yul\":9534:9541   */\n      dup5\n        /* \"#utility.yul\":9530:9553   */\n      sub\n        /* \"#utility.yul\":9526:9558   */\n      slt\n        /* \"#utility.yul\":9523:9642   */\n      iszero\n      tag_548\n      jumpi\n        /* \"#utility.yul\":9561:9640   */\n      tag_549\n      tag_396\n      jump\t// in\n    tag_549:\n        /* \"#utility.yul\":9523:9642   */\n    tag_548:\n        /* \"#utility.yul\":9681:9682   */\n      0x00\n        /* \"#utility.yul\":9706:9767   */\n      tag_550\n        /* \"#utility.yul\":9759:9766   */\n      dup5\n        /* \"#utility.yul\":9750:9756   */\n      dup3\n        /* \"#utility.yul\":9739:9748   */\n      dup6\n        /* \"#utility.yul\":9735:9757   */\n      add\n        /* \"#utility.yul\":9706:9767   */\n      tag_417\n      jump\t// in\n    tag_550:\n        /* \"#utility.yul\":9696:9767   */\n      swap2\n      pop\n        /* \"#utility.yul\":9652:9777   */\n      pop\n        /* \"#utility.yul\":9439:9784   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9790:9962   */\n    tag_418:\n        /* \"#utility.yul\":9930:9954   */\n      0x4164647265737320697320626c61636b6c697374656400000000000000000000\n        /* \"#utility.yul\":9926:9927   */\n      0x00\n        /* \"#utility.yul\":9918:9924   */\n      dup3\n        /* \"#utility.yul\":9914:9928   */\n      add\n        /* \"#utility.yul\":9907:9955   */\n      mstore\n        /* \"#utility.yul\":9790:9962   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9968:10334   */\n    tag_419:\n        /* \"#utility.yul\":10110:10113   */\n      0x00\n        /* \"#utility.yul\":10131:10198   */\n      tag_553\n        /* \"#utility.yul\":10195:10197   */\n      0x16\n        /* \"#utility.yul\":10190:10193   */\n      dup4\n        /* \"#utility.yul\":10131:10198   */\n      tag_391\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":10124:10198   */\n      swap2\n      pop\n        /* \"#utility.yul\":10207:10300   */\n      tag_554\n        /* \"#utility.yul\":10296:10299   */\n      dup3\n        /* \"#utility.yul\":10207:10300   */\n      tag_418\n      jump\t// in\n    tag_554:\n        /* \"#utility.yul\":10325:10327   */\n      0x20\n        /* \"#utility.yul\":10320:10323   */\n      dup3\n        /* \"#utility.yul\":10316:10328   */\n      add\n        /* \"#utility.yul\":10309:10328   */\n      swap1\n      pop\n        /* \"#utility.yul\":9968:10334   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10340:10759   */\n    tag_252:\n        /* \"#utility.yul\":10506:10510   */\n      0x00\n        /* \"#utility.yul\":10544:10546   */\n      0x20\n        /* \"#utility.yul\":10533:10542   */\n      dup3\n        /* \"#utility.yul\":10529:10547   */\n      add\n        /* \"#utility.yul\":10521:10547   */\n      swap1\n      pop\n        /* \"#utility.yul\":10593:10602   */\n      dup2\n        /* \"#utility.yul\":10587:10591   */\n      dup2\n        /* \"#utility.yul\":10583:10603   */\n      sub\n        /* \"#utility.yul\":10579:10580   */\n      0x00\n        /* \"#utility.yul\":10568:10577   */\n      dup4\n        /* \"#utility.yul\":10564:10581   */\n      add\n        /* \"#utility.yul\":10557:10604   */\n      mstore\n        /* \"#utility.yul\":10621:10752   */\n      tag_556\n        /* \"#utility.yul\":10747:10751   */\n      dup2\n        /* \"#utility.yul\":10621:10752   */\n      tag_419\n      jump\t// in\n    tag_556:\n        /* \"#utility.yul\":10613:10752   */\n      swap1\n      pop\n        /* \"#utility.yul\":10340:10759   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10765:10937   */\n    tag_420:\n        /* \"#utility.yul\":10905:10929   */\n      0x54726164696e67206973206e6f7420656e61626c656400000000000000000000\n        /* \"#utility.yul\":10901:10902   */\n      0x00\n        /* \"#utility.yul\":10893:10899   */\n      dup3\n        /* \"#utility.yul\":10889:10903   */\n      add\n        /* \"#utility.yul\":10882:10930   */\n      mstore\n        /* \"#utility.yul\":10765:10937   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10943:11309   */\n    tag_421:\n        /* \"#utility.yul\":11085:11088   */\n      0x00\n        /* \"#utility.yul\":11106:11173   */\n      tag_559\n        /* \"#utility.yul\":11170:11172   */\n      0x16\n        /* \"#utility.yul\":11165:11168   */\n      dup4\n        /* \"#utility.yul\":11106:11173   */\n      tag_391\n      jump\t// in\n    tag_559:\n        /* \"#utility.yul\":11099:11173   */\n      swap2\n      pop\n        /* \"#utility.yul\":11182:11275   */\n      tag_560\n        /* \"#utility.yul\":11271:11274   */\n      dup3\n        /* \"#utility.yul\":11182:11275   */\n      tag_420\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":11300:11302   */\n      0x20\n        /* \"#utility.yul\":11295:11298   */\n      dup3\n        /* \"#utility.yul\":11291:11303   */\n      add\n        /* \"#utility.yul\":11284:11303   */\n      swap1\n      pop\n        /* \"#utility.yul\":10943:11309   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11315:11734   */\n    tag_257:\n        /* \"#utility.yul\":11481:11485   */\n      0x00\n        /* \"#utility.yul\":11519:11521   */\n      0x20\n        /* \"#utility.yul\":11508:11517   */\n      dup3\n        /* \"#utility.yul\":11504:11522   */\n      add\n        /* \"#utility.yul\":11496:11522   */\n      swap1\n      pop\n        /* \"#utility.yul\":11568:11577   */\n      dup2\n        /* \"#utility.yul\":11562:11566   */\n      dup2\n        /* \"#utility.yul\":11558:11578   */\n      sub\n        /* \"#utility.yul\":11554:11555   */\n      0x00\n        /* \"#utility.yul\":11543:11552   */\n      dup4\n        /* \"#utility.yul\":11539:11556   */\n      add\n        /* \"#utility.yul\":11532:11579   */\n      mstore\n        /* \"#utility.yul\":11596:11727   */\n      tag_562\n        /* \"#utility.yul\":11722:11726   */\n      dup2\n        /* \"#utility.yul\":11596:11727   */\n      tag_421\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":11588:11727   */\n      swap1\n      pop\n        /* \"#utility.yul\":11315:11734   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11740:11908   */\n    tag_422:\n        /* \"#utility.yul\":11880:11900   */\n      0x436f6e7472616374206973207061757365640000000000000000000000000000\n        /* \"#utility.yul\":11876:11877   */\n      0x00\n        /* \"#utility.yul\":11868:11874   */\n      dup3\n        /* \"#utility.yul\":11864:11878   */\n      add\n        /* \"#utility.yul\":11857:11901   */\n      mstore\n        /* \"#utility.yul\":11740:11908   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11914:12280   */\n    tag_423:\n        /* \"#utility.yul\":12056:12059   */\n      0x00\n        /* \"#utility.yul\":12077:12144   */\n      tag_565\n        /* \"#utility.yul\":12141:12143   */\n      0x12\n        /* \"#utility.yul\":12136:12139   */\n      dup4\n        /* \"#utility.yul\":12077:12144   */\n      tag_391\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":12070:12144   */\n      swap2\n      pop\n        /* \"#utility.yul\":12153:12246   */\n      tag_566\n        /* \"#utility.yul\":12242:12245   */\n      dup3\n        /* \"#utility.yul\":12153:12246   */\n      tag_422\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":12271:12273   */\n      0x20\n        /* \"#utility.yul\":12266:12269   */\n      dup3\n        /* \"#utility.yul\":12262:12274   */\n      add\n        /* \"#utility.yul\":12255:12274   */\n      swap1\n      pop\n        /* \"#utility.yul\":11914:12280   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12286:12705   */\n    tag_261:\n        /* \"#utility.yul\":12452:12456   */\n      0x00\n        /* \"#utility.yul\":12490:12492   */\n      0x20\n        /* \"#utility.yul\":12479:12488   */\n      dup3\n        /* \"#utility.yul\":12475:12493   */\n      add\n        /* \"#utility.yul\":12467:12493   */\n      swap1\n      pop\n        /* \"#utility.yul\":12539:12548   */\n      dup2\n        /* \"#utility.yul\":12533:12537   */\n      dup2\n        /* \"#utility.yul\":12529:12549   */\n      sub\n        /* \"#utility.yul\":12525:12526   */\n      0x00\n        /* \"#utility.yul\":12514:12523   */\n      dup4\n        /* \"#utility.yul\":12510:12527   */\n      add\n        /* \"#utility.yul\":12503:12550   */\n      mstore\n        /* \"#utility.yul\":12567:12698   */\n      tag_568\n        /* \"#utility.yul\":12693:12697   */\n      dup2\n        /* \"#utility.yul\":12567:12698   */\n      tag_423\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":12559:12698   */\n      swap1\n      pop\n        /* \"#utility.yul\":12286:12705   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12711:12936   */\n    tag_424:\n        /* \"#utility.yul\":12851:12885   */\n      0x43616e6e6f74207472616e7366657220746f2074686520636f6e747261637420\n        /* \"#utility.yul\":12847:12848   */\n      0x00\n        /* \"#utility.yul\":12839:12845   */\n      dup3\n        /* \"#utility.yul\":12835:12849   */\n      add\n        /* \"#utility.yul\":12828:12886   */\n      mstore\n        /* \"#utility.yul\":12920:12928   */\n      0x697473656c660000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":12915:12917   */\n      0x20\n        /* \"#utility.yul\":12907:12913   */\n      dup3\n        /* \"#utility.yul\":12903:12918   */\n      add\n        /* \"#utility.yul\":12896:12929   */\n      mstore\n        /* \"#utility.yul\":12711:12936   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12942:13308   */\n    tag_425:\n        /* \"#utility.yul\":13084:13087   */\n      0x00\n        /* \"#utility.yul\":13105:13172   */\n      tag_571\n        /* \"#utility.yul\":13169:13171   */\n      0x26\n        /* \"#utility.yul\":13164:13167   */\n      dup4\n        /* \"#utility.yul\":13105:13172   */\n      tag_391\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":13098:13172   */\n      swap2\n      pop\n        /* \"#utility.yul\":13181:13274   */\n      tag_572\n        /* \"#utility.yul\":13270:13273   */\n      dup3\n        /* \"#utility.yul\":13181:13274   */\n      tag_424\n      jump\t// in\n    tag_572:\n        /* \"#utility.yul\":13299:13301   */\n      0x40\n        /* \"#utility.yul\":13294:13297   */\n      dup3\n        /* \"#utility.yul\":13290:13302   */\n      add\n        /* \"#utility.yul\":13283:13302   */\n      swap1\n      pop\n        /* \"#utility.yul\":12942:13308   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13314:13733   */\n    tag_265:\n        /* \"#utility.yul\":13480:13484   */\n      0x00\n        /* \"#utility.yul\":13518:13520   */\n      0x20\n        /* \"#utility.yul\":13507:13516   */\n      dup3\n        /* \"#utility.yul\":13503:13521   */\n      add\n        /* \"#utility.yul\":13495:13521   */\n      swap1\n      pop\n        /* \"#utility.yul\":13567:13576   */\n      dup2\n        /* \"#utility.yul\":13561:13565   */\n      dup2\n        /* \"#utility.yul\":13557:13577   */\n      sub\n        /* \"#utility.yul\":13553:13554   */\n      0x00\n        /* \"#utility.yul\":13542:13551   */\n      dup4\n        /* \"#utility.yul\":13538:13555   */\n      add\n        /* \"#utility.yul\":13531:13578   */\n      mstore\n        /* \"#utility.yul\":13595:13726   */\n      tag_574\n        /* \"#utility.yul\":13721:13725   */\n      dup2\n        /* \"#utility.yul\":13595:13726   */\n      tag_425\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":13587:13726   */\n      swap1\n      pop\n        /* \"#utility.yul\":13314:13733   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13739:13920   */\n    tag_426:\n        /* \"#utility.yul\":13879:13912   */\n      0x45786365656473206d6178696d756d207472616e7366657220616d6f756e7400\n        /* \"#utility.yul\":13875:13876   */\n      0x00\n        /* \"#utility.yul\":13867:13873   */\n      dup3\n        /* \"#utility.yul\":13863:13877   */\n      add\n        /* \"#utility.yul\":13856:13913   */\n      mstore\n        /* \"#utility.yul\":13739:13920   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13926:14292   */\n    tag_427:\n        /* \"#utility.yul\":14068:14071   */\n      0x00\n        /* \"#utility.yul\":14089:14156   */\n      tag_577\n        /* \"#utility.yul\":14153:14155   */\n      0x1f\n        /* \"#utility.yul\":14148:14151   */\n      dup4\n        /* \"#utility.yul\":14089:14156   */\n      tag_391\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":14082:14156   */\n      swap2\n      pop\n        /* \"#utility.yul\":14165:14258   */\n      tag_578\n        /* \"#utility.yul\":14254:14257   */\n      dup3\n        /* \"#utility.yul\":14165:14258   */\n      tag_426\n      jump\t// in\n    tag_578:\n        /* \"#utility.yul\":14283:14285   */\n      0x20\n        /* \"#utility.yul\":14278:14281   */\n      dup3\n        /* \"#utility.yul\":14274:14286   */\n      add\n        /* \"#utility.yul\":14267:14286   */\n      swap1\n      pop\n        /* \"#utility.yul\":13926:14292   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14298:14717   */\n    tag_269:\n        /* \"#utility.yul\":14464:14468   */\n      0x00\n        /* \"#utility.yul\":14502:14504   */\n      0x20\n        /* \"#utility.yul\":14491:14500   */\n      dup3\n        /* \"#utility.yul\":14487:14505   */\n      add\n        /* \"#utility.yul\":14479:14505   */\n      swap1\n      pop\n        /* \"#utility.yul\":14551:14560   */\n      dup2\n        /* \"#utility.yul\":14545:14549   */\n      dup2\n        /* \"#utility.yul\":14541:14561   */\n      sub\n        /* \"#utility.yul\":14537:14538   */\n      0x00\n        /* \"#utility.yul\":14526:14535   */\n      dup4\n        /* \"#utility.yul\":14522:14539   */\n      add\n        /* \"#utility.yul\":14515:14562   */\n      mstore\n        /* \"#utility.yul\":14579:14710   */\n      tag_580\n        /* \"#utility.yul\":14705:14709   */\n      dup2\n        /* \"#utility.yul\":14579:14710   */\n      tag_427\n      jump\t// in\n    tag_580:\n        /* \"#utility.yul\":14571:14710   */\n      swap1\n      pop\n        /* \"#utility.yul\":14298:14717   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14723:15133   */\n    tag_271:\n        /* \"#utility.yul\":14763:14770   */\n      0x00\n        /* \"#utility.yul\":14786:14806   */\n      tag_582\n        /* \"#utility.yul\":14804:14805   */\n      dup3\n        /* \"#utility.yul\":14786:14806   */\n      tag_402\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":14781:14806   */\n      swap2\n      pop\n        /* \"#utility.yul\":14820:14840   */\n      tag_583\n        /* \"#utility.yul\":14838:14839   */\n      dup4\n        /* \"#utility.yul\":14820:14840   */\n      tag_402\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":14815:14840   */\n      swap3\n      pop\n        /* \"#utility.yul\":14875:14876   */\n      dup3\n        /* \"#utility.yul\":14872:14873   */\n      dup3\n        /* \"#utility.yul\":14868:14877   */\n      mul\n        /* \"#utility.yul\":14897:14927   */\n      tag_584\n        /* \"#utility.yul\":14915:14926   */\n      dup2\n        /* \"#utility.yul\":14897:14927   */\n      tag_402\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":14886:14927   */\n      swap2\n      pop\n        /* \"#utility.yul\":15076:15077   */\n      dup3\n        /* \"#utility.yul\":15067:15074   */\n      dup3\n        /* \"#utility.yul\":15063:15078   */\n      div\n        /* \"#utility.yul\":15060:15061   */\n      dup5\n        /* \"#utility.yul\":15057:15079   */\n      eq\n        /* \"#utility.yul\":15037:15038   */\n      dup4\n        /* \"#utility.yul\":15030:15039   */\n      iszero\n        /* \"#utility.yul\":15010:15093   */\n      or\n        /* \"#utility.yul\":14987:15126   */\n      tag_585\n      jumpi\n        /* \"#utility.yul\":15106:15124   */\n      tag_586\n      tag_416\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":14987:15126   */\n    tag_585:\n        /* \"#utility.yul\":14771:15133   */\n      pop\n        /* \"#utility.yul\":14723:15133   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15139:15319   */\n    tag_428:\n        /* \"#utility.yul\":15187:15264   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15184:15185   */\n      0x00\n        /* \"#utility.yul\":15177:15265   */\n      mstore\n        /* \"#utility.yul\":15284:15288   */\n      0x12\n        /* \"#utility.yul\":15281:15282   */\n      0x04\n        /* \"#utility.yul\":15274:15289   */\n      mstore\n        /* \"#utility.yul\":15308:15312   */\n      0x24\n        /* \"#utility.yul\":15305:15306   */\n      0x00\n        /* \"#utility.yul\":15298:15313   */\n      revert\n        /* \"#utility.yul\":15325:15510   */\n    tag_273:\n        /* \"#utility.yul\":15365:15366   */\n      0x00\n        /* \"#utility.yul\":15382:15402   */\n      tag_589\n        /* \"#utility.yul\":15400:15401   */\n      dup3\n        /* \"#utility.yul\":15382:15402   */\n      tag_402\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":15377:15402   */\n      swap2\n      pop\n        /* \"#utility.yul\":15416:15436   */\n      tag_590\n        /* \"#utility.yul\":15434:15435   */\n      dup4\n        /* \"#utility.yul\":15416:15436   */\n      tag_402\n      jump\t// in\n    tag_590:\n        /* \"#utility.yul\":15411:15436   */\n      swap3\n      pop\n        /* \"#utility.yul\":15455:15456   */\n      dup3\n        /* \"#utility.yul\":15445:15480   */\n      tag_591\n      jumpi\n        /* \"#utility.yul\":15460:15478   */\n      tag_592\n      tag_428\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":15445:15480   */\n    tag_591:\n        /* \"#utility.yul\":15502:15503   */\n      dup3\n        /* \"#utility.yul\":15499:15500   */\n      dup3\n        /* \"#utility.yul\":15495:15504   */\n      div\n        /* \"#utility.yul\":15490:15504   */\n      swap1\n      pop\n        /* \"#utility.yul\":15325:15510   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15516:15707   */\n    tag_283:\n        /* \"#utility.yul\":15556:15559   */\n      0x00\n        /* \"#utility.yul\":15575:15595   */\n      tag_594\n        /* \"#utility.yul\":15593:15594   */\n      dup3\n        /* \"#utility.yul\":15575:15595   */\n      tag_402\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":15570:15595   */\n      swap2\n      pop\n        /* \"#utility.yul\":15609:15629   */\n      tag_595\n        /* \"#utility.yul\":15627:15628   */\n      dup4\n        /* \"#utility.yul\":15609:15629   */\n      tag_402\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":15604:15629   */\n      swap3\n      pop\n        /* \"#utility.yul\":15652:15653   */\n      dup3\n        /* \"#utility.yul\":15649:15650   */\n      dup3\n        /* \"#utility.yul\":15645:15654   */\n      add\n        /* \"#utility.yul\":15638:15654   */\n      swap1\n      pop\n        /* \"#utility.yul\":15673:15676   */\n      dup1\n        /* \"#utility.yul\":15670:15671   */\n      dup3\n        /* \"#utility.yul\":15667:15677   */\n      gt\n        /* \"#utility.yul\":15664:15700   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":15680:15698   */\n      tag_597\n      tag_416\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":15664:15700   */\n    tag_596:\n        /* \"#utility.yul\":15516:15707   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15713:15933   */\n    tag_429:\n        /* \"#utility.yul\":15853:15887   */\n      0x45786365656473206d6178696d756d20656e676167656d656e7420706f696e74\n        /* \"#utility.yul\":15849:15850   */\n      0x00\n        /* \"#utility.yul\":15841:15847   */\n      dup3\n        /* \"#utility.yul\":15837:15851   */\n      add\n        /* \"#utility.yul\":15830:15888   */\n      mstore\n        /* \"#utility.yul\":15922:15925   */\n      0x7300000000000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":15917:15919   */\n      0x20\n        /* \"#utility.yul\":15909:15915   */\n      dup3\n        /* \"#utility.yul\":15905:15920   */\n      add\n        /* \"#utility.yul\":15898:15926   */\n      mstore\n        /* \"#utility.yul\":15713:15933   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15939:16305   */\n    tag_430:\n        /* \"#utility.yul\":16081:16084   */\n      0x00\n        /* \"#utility.yul\":16102:16169   */\n      tag_600\n        /* \"#utility.yul\":16166:16168   */\n      0x21\n        /* \"#utility.yul\":16161:16164   */\n      dup4\n        /* \"#utility.yul\":16102:16169   */\n      tag_391\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":16095:16169   */\n      swap2\n      pop\n        /* \"#utility.yul\":16178:16271   */\n      tag_601\n        /* \"#utility.yul\":16267:16270   */\n      dup3\n        /* \"#utility.yul\":16178:16271   */\n      tag_429\n      jump\t// in\n    tag_601:\n        /* \"#utility.yul\":16296:16298   */\n      0x40\n        /* \"#utility.yul\":16291:16294   */\n      dup3\n        /* \"#utility.yul\":16287:16299   */\n      add\n        /* \"#utility.yul\":16280:16299   */\n      swap1\n      pop\n        /* \"#utility.yul\":15939:16305   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16311:16730   */\n    tag_286:\n        /* \"#utility.yul\":16477:16481   */\n      0x00\n        /* \"#utility.yul\":16515:16517   */\n      0x20\n        /* \"#utility.yul\":16504:16513   */\n      dup3\n        /* \"#utility.yul\":16500:16518   */\n      add\n        /* \"#utility.yul\":16492:16518   */\n      swap1\n      pop\n        /* \"#utility.yul\":16564:16573   */\n      dup2\n        /* \"#utility.yul\":16558:16562   */\n      dup2\n        /* \"#utility.yul\":16554:16574   */\n      sub\n        /* \"#utility.yul\":16550:16551   */\n      0x00\n        /* \"#utility.yul\":16539:16548   */\n      dup4\n        /* \"#utility.yul\":16535:16552   */\n      add\n        /* \"#utility.yul\":16528:16575   */\n      mstore\n        /* \"#utility.yul\":16592:16723   */\n      tag_603\n        /* \"#utility.yul\":16718:16722   */\n      dup2\n        /* \"#utility.yul\":16592:16723   */\n      tag_430\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":16584:16723   */\n      swap1\n      pop\n        /* \"#utility.yul\":16311:16730   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16736:16907   */\n    tag_431:\n        /* \"#utility.yul\":16876:16899   */\n      0x436c61696d20636f6f6c646f776e206163746976650000000000000000000000\n        /* \"#utility.yul\":16872:16873   */\n      0x00\n        /* \"#utility.yul\":16864:16870   */\n      dup3\n        /* \"#utility.yul\":16860:16874   */\n      add\n        /* \"#utility.yul\":16853:16900   */\n      mstore\n        /* \"#utility.yul\":16736:16907   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16913:17279   */\n    tag_432:\n        /* \"#utility.yul\":17055:17058   */\n      0x00\n        /* \"#utility.yul\":17076:17143   */\n      tag_606\n        /* \"#utility.yul\":17140:17142   */\n      0x15\n        /* \"#utility.yul\":17135:17138   */\n      dup4\n        /* \"#utility.yul\":17076:17143   */\n      tag_391\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":17069:17143   */\n      swap2\n      pop\n        /* \"#utility.yul\":17152:17245   */\n      tag_607\n        /* \"#utility.yul\":17241:17244   */\n      dup3\n        /* \"#utility.yul\":17152:17245   */\n      tag_431\n      jump\t// in\n    tag_607:\n        /* \"#utility.yul\":17270:17272   */\n      0x20\n        /* \"#utility.yul\":17265:17268   */\n      dup3\n        /* \"#utility.yul\":17261:17273   */\n      add\n        /* \"#utility.yul\":17254:17273   */\n      swap1\n      pop\n        /* \"#utility.yul\":16913:17279   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17285:17704   */\n    tag_299:\n        /* \"#utility.yul\":17451:17455   */\n      0x00\n        /* \"#utility.yul\":17489:17491   */\n      0x20\n        /* \"#utility.yul\":17478:17487   */\n      dup3\n        /* \"#utility.yul\":17474:17492   */\n      add\n        /* \"#utility.yul\":17466:17492   */\n      swap1\n      pop\n        /* \"#utility.yul\":17538:17547   */\n      dup2\n        /* \"#utility.yul\":17532:17536   */\n      dup2\n        /* \"#utility.yul\":17528:17548   */\n      sub\n        /* \"#utility.yul\":17524:17525   */\n      0x00\n        /* \"#utility.yul\":17513:17522   */\n      dup4\n        /* \"#utility.yul\":17509:17526   */\n      add\n        /* \"#utility.yul\":17502:17549   */\n      mstore\n        /* \"#utility.yul\":17566:17697   */\n      tag_609\n        /* \"#utility.yul\":17692:17696   */\n      dup2\n        /* \"#utility.yul\":17566:17697   */\n      tag_432\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":17558:17697   */\n      swap1\n      pop\n        /* \"#utility.yul\":17285:17704   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17710:17880   */\n    tag_433:\n        /* \"#utility.yul\":17850:17872   */\n      0x4e6f207265776172647320617661696c61626c65000000000000000000000000\n        /* \"#utility.yul\":17846:17847   */\n      0x00\n        /* \"#utility.yul\":17838:17844   */\n      dup3\n        /* \"#utility.yul\":17834:17848   */\n      add\n        /* \"#utility.yul\":17827:17873   */\n      mstore\n        /* \"#utility.yul\":17710:17880   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17886:18252   */\n    tag_434:\n        /* \"#utility.yul\":18028:18031   */\n      0x00\n        /* \"#utility.yul\":18049:18116   */\n      tag_612\n        /* \"#utility.yul\":18113:18115   */\n      0x14\n        /* \"#utility.yul\":18108:18111   */\n      dup4\n        /* \"#utility.yul\":18049:18116   */\n      tag_391\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":18042:18116   */\n      swap2\n      pop\n        /* \"#utility.yul\":18125:18218   */\n      tag_613\n        /* \"#utility.yul\":18214:18217   */\n      dup3\n        /* \"#utility.yul\":18125:18218   */\n      tag_433\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":18243:18245   */\n      0x20\n        /* \"#utility.yul\":18238:18241   */\n      dup3\n        /* \"#utility.yul\":18234:18246   */\n      add\n        /* \"#utility.yul\":18227:18246   */\n      swap1\n      pop\n        /* \"#utility.yul\":17886:18252   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18258:18677   */\n    tag_303:\n        /* \"#utility.yul\":18424:18428   */\n      0x00\n        /* \"#utility.yul\":18462:18464   */\n      0x20\n        /* \"#utility.yul\":18451:18460   */\n      dup3\n        /* \"#utility.yul\":18447:18465   */\n      add\n        /* \"#utility.yul\":18439:18465   */\n      swap1\n      pop\n        /* \"#utility.yul\":18511:18520   */\n      dup2\n        /* \"#utility.yul\":18505:18509   */\n      dup2\n        /* \"#utility.yul\":18501:18521   */\n      sub\n        /* \"#utility.yul\":18497:18498   */\n      0x00\n        /* \"#utility.yul\":18486:18495   */\n      dup4\n        /* \"#utility.yul\":18482:18499   */\n      add\n        /* \"#utility.yul\":18475:18522   */\n      mstore\n        /* \"#utility.yul\":18539:18670   */\n      tag_615\n        /* \"#utility.yul\":18665:18669   */\n      dup2\n        /* \"#utility.yul\":18539:18670   */\n      tag_434\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":18531:18670   */\n      swap1\n      pop\n        /* \"#utility.yul\":18258:18677   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18683:18859   */\n    tag_435:\n        /* \"#utility.yul\":18823:18851   */\n      0x496e73756666696369656e742072657761726420737570706c79000000000000\n        /* \"#utility.yul\":18819:18820   */\n      0x00\n        /* \"#utility.yul\":18811:18817   */\n      dup3\n        /* \"#utility.yul\":18807:18821   */\n      add\n        /* \"#utility.yul\":18800:18852   */\n      mstore\n        /* \"#utility.yul\":18683:18859   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18865:19231   */\n    tag_436:\n        /* \"#utility.yul\":19007:19010   */\n      0x00\n        /* \"#utility.yul\":19028:19095   */\n      tag_618\n        /* \"#utility.yul\":19092:19094   */\n      0x1a\n        /* \"#utility.yul\":19087:19090   */\n      dup4\n        /* \"#utility.yul\":19028:19095   */\n      tag_391\n      jump\t// in\n    tag_618:\n        /* \"#utility.yul\":19021:19095   */\n      swap2\n      pop\n        /* \"#utility.yul\":19104:19197   */\n      tag_619\n        /* \"#utility.yul\":19193:19196   */\n      dup3\n        /* \"#utility.yul\":19104:19197   */\n      tag_435\n      jump\t// in\n    tag_619:\n        /* \"#utility.yul\":19222:19224   */\n      0x20\n        /* \"#utility.yul\":19217:19220   */\n      dup3\n        /* \"#utility.yul\":19213:19225   */\n      add\n        /* \"#utility.yul\":19206:19225   */\n      swap1\n      pop\n        /* \"#utility.yul\":18865:19231   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19237:19656   */\n    tag_308:\n        /* \"#utility.yul\":19403:19407   */\n      0x00\n        /* \"#utility.yul\":19441:19443   */\n      0x20\n        /* \"#utility.yul\":19430:19439   */\n      dup3\n        /* \"#utility.yul\":19426:19444   */\n      add\n        /* \"#utility.yul\":19418:19444   */\n      swap1\n      pop\n        /* \"#utility.yul\":19490:19499   */\n      dup2\n        /* \"#utility.yul\":19484:19488   */\n      dup2\n        /* \"#utility.yul\":19480:19500   */\n      sub\n        /* \"#utility.yul\":19476:19477   */\n      0x00\n        /* \"#utility.yul\":19465:19474   */\n      dup4\n        /* \"#utility.yul\":19461:19478   */\n      add\n        /* \"#utility.yul\":19454:19501   */\n      mstore\n        /* \"#utility.yul\":19518:19649   */\n      tag_621\n        /* \"#utility.yul\":19644:19648   */\n      dup2\n        /* \"#utility.yul\":19518:19649   */\n      tag_436\n      jump\t// in\n    tag_621:\n        /* \"#utility.yul\":19510:19649   */\n      swap1\n      pop\n        /* \"#utility.yul\":19237:19656   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19662:19842   */\n    tag_437:\n        /* \"#utility.yul\":19802:19834   */\n      0x54617820726174652065786365656473206d6178696d756d206c696d69740000\n        /* \"#utility.yul\":19798:19799   */\n      0x00\n        /* \"#utility.yul\":19790:19796   */\n      dup3\n        /* \"#utility.yul\":19786:19800   */\n      add\n        /* \"#utility.yul\":19779:19835   */\n      mstore\n        /* \"#utility.yul\":19662:19842   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":19848:20214   */\n    tag_438:\n        /* \"#utility.yul\":19990:19993   */\n      0x00\n        /* \"#utility.yul\":20011:20078   */\n      tag_624\n        /* \"#utility.yul\":20075:20077   */\n      0x1e\n        /* \"#utility.yul\":20070:20073   */\n      dup4\n        /* \"#utility.yul\":20011:20078   */\n      tag_391\n      jump\t// in\n    tag_624:\n        /* \"#utility.yul\":20004:20078   */\n      swap2\n      pop\n        /* \"#utility.yul\":20087:20180   */\n      tag_625\n        /* \"#utility.yul\":20176:20179   */\n      dup3\n        /* \"#utility.yul\":20087:20180   */\n      tag_437\n      jump\t// in\n    tag_625:\n        /* \"#utility.yul\":20205:20207   */\n      0x20\n        /* \"#utility.yul\":20200:20203   */\n      dup3\n        /* \"#utility.yul\":20196:20208   */\n      add\n        /* \"#utility.yul\":20189:20208   */\n      swap1\n      pop\n        /* \"#utility.yul\":19848:20214   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20220:20639   */\n    tag_317:\n        /* \"#utility.yul\":20386:20390   */\n      0x00\n        /* \"#utility.yul\":20424:20426   */\n      0x20\n        /* \"#utility.yul\":20413:20422   */\n      dup3\n        /* \"#utility.yul\":20409:20427   */\n      add\n        /* \"#utility.yul\":20401:20427   */\n      swap1\n      pop\n        /* \"#utility.yul\":20473:20482   */\n      dup2\n        /* \"#utility.yul\":20467:20471   */\n      dup2\n        /* \"#utility.yul\":20463:20483   */\n      sub\n        /* \"#utility.yul\":20459:20460   */\n      0x00\n        /* \"#utility.yul\":20448:20457   */\n      dup4\n        /* \"#utility.yul\":20444:20461   */\n      add\n        /* \"#utility.yul\":20437:20484   */\n      mstore\n        /* \"#utility.yul\":20501:20632   */\n      tag_627\n        /* \"#utility.yul\":20627:20631   */\n      dup2\n        /* \"#utility.yul\":20501:20632   */\n      tag_438\n      jump\t// in\n    tag_627:\n        /* \"#utility.yul\":20493:20632   */\n      swap1\n      pop\n        /* \"#utility.yul\":20220:20639   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":20645:21087   */\n    tag_352:\n        /* \"#utility.yul\":20794:20798   */\n      0x00\n        /* \"#utility.yul\":20832:20834   */\n      0x60\n        /* \"#utility.yul\":20821:20830   */\n      dup3\n        /* \"#utility.yul\":20817:20835   */\n      add\n        /* \"#utility.yul\":20809:20835   */\n      swap1\n      pop\n        /* \"#utility.yul\":20845:20916   */\n      tag_629\n        /* \"#utility.yul\":20913:20914   */\n      0x00\n        /* \"#utility.yul\":20902:20911   */\n      dup4\n        /* \"#utility.yul\":20898:20915   */\n      add\n        /* \"#utility.yul\":20889:20895   */\n      dup7\n        /* \"#utility.yul\":20845:20916   */\n      tag_412\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":20926:20998   */\n      tag_630\n        /* \"#utility.yul\":20994:20996   */\n      0x20\n        /* \"#utility.yul\":20983:20992   */\n      dup4\n        /* \"#utility.yul\":20979:20997   */\n      add\n        /* \"#utility.yul\":20970:20976   */\n      dup6\n        /* \"#utility.yul\":20926:20998   */\n      tag_409\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":21008:21080   */\n      tag_631\n        /* \"#utility.yul\":21076:21078   */\n      0x40\n        /* \"#utility.yul\":21065:21074   */\n      dup4\n        /* \"#utility.yul\":21061:21079   */\n      add\n        /* \"#utility.yul\":21052:21058   */\n      dup5\n        /* \"#utility.yul\":21008:21080   */\n      tag_409\n      jump\t// in\n    tag_631:\n        /* \"#utility.yul\":20645:21087   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21093:21274   */\n    tag_439:\n        /* \"#utility.yul\":21233:21266   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":21229:21230   */\n      0x00\n        /* \"#utility.yul\":21221:21227   */\n      dup3\n        /* \"#utility.yul\":21217:21231   */\n      add\n        /* \"#utility.yul\":21210:21267   */\n      mstore\n        /* \"#utility.yul\":21093:21274   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21280:21646   */\n    tag_440:\n        /* \"#utility.yul\":21422:21425   */\n      0x00\n        /* \"#utility.yul\":21443:21510   */\n      tag_634\n        /* \"#utility.yul\":21507:21509   */\n      0x1f\n        /* \"#utility.yul\":21502:21505   */\n      dup4\n        /* \"#utility.yul\":21443:21510   */\n      tag_391\n      jump\t// in\n    tag_634:\n        /* \"#utility.yul\":21436:21510   */\n      swap2\n      pop\n        /* \"#utility.yul\":21519:21612   */\n      tag_635\n        /* \"#utility.yul\":21608:21611   */\n      dup3\n        /* \"#utility.yul\":21519:21612   */\n      tag_439\n      jump\t// in\n    tag_635:\n        /* \"#utility.yul\":21637:21639   */\n      0x20\n        /* \"#utility.yul\":21632:21635   */\n      dup3\n        /* \"#utility.yul\":21628:21640   */\n      add\n        /* \"#utility.yul\":21621:21640   */\n      swap1\n      pop\n        /* \"#utility.yul\":21280:21646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":21652:22071   */\n    tag_368:\n        /* \"#utility.yul\":21818:21822   */\n      0x00\n        /* \"#utility.yul\":21856:21858   */\n      0x20\n        /* \"#utility.yul\":21845:21854   */\n      dup3\n        /* \"#utility.yul\":21841:21859   */\n      add\n        /* \"#utility.yul\":21833:21859   */\n      swap1\n      pop\n        /* \"#utility.yul\":21905:21914   */\n      dup2\n        /* \"#utility.yul\":21899:21903   */\n      dup2\n        /* \"#utility.yul\":21895:21915   */\n      sub\n        /* \"#utility.yul\":21891:21892   */\n      0x00\n        /* \"#utility.yul\":21880:21889   */\n      dup4\n        /* \"#utility.yul\":21876:21893   */\n      add\n        /* \"#utility.yul\":21869:21916   */\n      mstore\n        /* \"#utility.yul\":21933:22064   */\n      tag_637\n        /* \"#utility.yul\":22059:22063   */\n      dup2\n        /* \"#utility.yul\":21933:22064   */\n      tag_440\n      jump\t// in\n    tag_637:\n        /* \"#utility.yul\":21925:22064   */\n      swap1\n      pop\n        /* \"#utility.yul\":21652:22071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220938069a2928d47eee461df4dc4df4f5377f8f98d66ffe2e94382aeee082891ad64736f6c63430008180033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_1255": {
									"entryPoint": null,
									"id": 1255,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_411": {
									"entryPoint": null,
									"id": 411,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_509": {
									"entryPoint": null,
									"id": 509,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_812": {
									"entryPoint": 779,
									"id": 812,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 584,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 917,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2355,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2676,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2693,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2752,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1617,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2618,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 2563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 2444,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1926,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2305,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1747,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1888,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1765,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 2077,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1635,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1565,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 2048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1756,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2399,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 2518,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1520,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1475,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_dynamic": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 2006,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1860,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1662,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1813,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7793:10",
										"nodeType": "YulBlock",
										"src": "0:7793:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "140:152:10",
													"nodeType": "YulBlock",
													"src": "140:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "160:77:10",
																		"nodeType": "YulLiteral",
																		"src": "160:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "150:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "150:6:10"
																},
																"nativeSrc": "150:88:10",
																"nodeType": "YulFunctionCall",
																"src": "150:88:10"
															},
															"nativeSrc": "150:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "150:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "254:1:10",
																		"nodeType": "YulLiteral",
																		"src": "254:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "257:4:10",
																		"nodeType": "YulLiteral",
																		"src": "257:4:10",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "247:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "247:6:10"
																},
																"nativeSrc": "247:15:10",
																"nodeType": "YulFunctionCall",
																"src": "247:15:10"
															},
															"nativeSrc": "247:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "247:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "278:1:10",
																		"nodeType": "YulLiteral",
																		"src": "278:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "281:4:10",
																		"nodeType": "YulLiteral",
																		"src": "281:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "271:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "271:6:10"
																},
																"nativeSrc": "271:15:10",
																"nodeType": "YulFunctionCall",
																"src": "271:15:10"
															},
															"nativeSrc": "271:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "271:15:10"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "112:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "112:180:10"
											},
											{
												"body": {
													"nativeSrc": "326:152:10",
													"nodeType": "YulBlock",
													"src": "326:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "343:1:10",
																		"nodeType": "YulLiteral",
																		"src": "343:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "346:77:10",
																		"nodeType": "YulLiteral",
																		"src": "346:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "336:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "336:6:10"
																},
																"nativeSrc": "336:88:10",
																"nodeType": "YulFunctionCall",
																"src": "336:88:10"
															},
															"nativeSrc": "336:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "336:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "440:1:10",
																		"nodeType": "YulLiteral",
																		"src": "440:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "443:4:10",
																		"nodeType": "YulLiteral",
																		"src": "443:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "433:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "433:6:10"
																},
																"nativeSrc": "433:15:10",
																"nodeType": "YulFunctionCall",
																"src": "433:15:10"
															},
															"nativeSrc": "433:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "433:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "464:1:10",
																		"nodeType": "YulLiteral",
																		"src": "464:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "467:4:10",
																		"nodeType": "YulLiteral",
																		"src": "467:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "457:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "457:6:10"
																},
																"nativeSrc": "457:15:10",
																"nodeType": "YulFunctionCall",
																"src": "457:15:10"
															},
															"nativeSrc": "457:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "457:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "298:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "298:180:10"
											},
											{
												"body": {
													"nativeSrc": "535:269:10",
													"nodeType": "YulBlock",
													"src": "535:269:10",
													"statements": [
														{
															"nativeSrc": "545:22:10",
															"nodeType": "YulAssignment",
															"src": "545:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "559:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "559:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "565:1:10",
																		"nodeType": "YulLiteral",
																		"src": "565:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "555:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "555:3:10"
																},
																"nativeSrc": "555:12:10",
																"nodeType": "YulFunctionCall",
																"src": "555:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "545:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "545:6:10"
																}
															]
														},
														{
															"nativeSrc": "576:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "576:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "606:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "606:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "612:1:10",
																		"nodeType": "YulLiteral",
																		"src": "612:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "602:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "602:3:10"
																},
																"nativeSrc": "602:12:10",
																"nodeType": "YulFunctionCall",
																"src": "602:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "580:18:10",
																	"nodeType": "YulTypedName",
																	"src": "580:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "653:51:10",
																"nodeType": "YulBlock",
																"src": "653:51:10",
																"statements": [
																	{
																		"nativeSrc": "667:27:10",
																		"nodeType": "YulAssignment",
																		"src": "667:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "681:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "681:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "689:4:10",
																					"nodeType": "YulLiteral",
																					"src": "689:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "677:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "677:3:10"
																			},
																			"nativeSrc": "677:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "677:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "667:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "667:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "633:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "633:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "626:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "626:6:10"
																},
																"nativeSrc": "626:26:10",
																"nodeType": "YulFunctionCall",
																"src": "626:26:10"
															},
															"nativeSrc": "623:81:10",
															"nodeType": "YulIf",
															"src": "623:81:10"
														},
														{
															"body": {
																"nativeSrc": "756:42:10",
																"nodeType": "YulBlock",
																"src": "756:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "770:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "770:16:10"
																			},
																			"nativeSrc": "770:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "770:18:10"
																		},
																		"nativeSrc": "770:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "770:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "720:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "720:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "743:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "743:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "751:2:10",
																				"nodeType": "YulLiteral",
																				"src": "751:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "740:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "740:2:10"
																		},
																		"nativeSrc": "740:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "740:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "717:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "717:2:10"
																},
																"nativeSrc": "717:38:10",
																"nodeType": "YulFunctionCall",
																"src": "717:38:10"
															},
															"nativeSrc": "714:84:10",
															"nodeType": "YulIf",
															"src": "714:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "484:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "519:4:10",
														"nodeType": "YulTypedName",
														"src": "519:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "528:6:10",
														"nodeType": "YulTypedName",
														"src": "528:6:10",
														"type": ""
													}
												],
												"src": "484:320:10"
											},
											{
												"body": {
													"nativeSrc": "864:87:10",
													"nodeType": "YulBlock",
													"src": "864:87:10",
													"statements": [
														{
															"nativeSrc": "874:11:10",
															"nodeType": "YulAssignment",
															"src": "874:11:10",
															"value": {
																"name": "ptr",
																"nativeSrc": "882:3:10",
																"nodeType": "YulIdentifier",
																"src": "882:3:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "874:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "874:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "902:1:10",
																		"nodeType": "YulLiteral",
																		"src": "902:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "905:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "905:3:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "895:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "895:6:10"
																},
																"nativeSrc": "895:14:10",
																"nodeType": "YulFunctionCall",
																"src": "895:14:10"
															},
															"nativeSrc": "895:14:10",
															"nodeType": "YulExpressionStatement",
															"src": "895:14:10"
														},
														{
															"nativeSrc": "918:26:10",
															"nodeType": "YulAssignment",
															"src": "918:26:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "936:1:10",
																		"nodeType": "YulLiteral",
																		"src": "936:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "939:4:10",
																		"nodeType": "YulLiteral",
																		"src": "939:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "926:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "926:9:10"
																},
																"nativeSrc": "926:18:10",
																"nodeType": "YulFunctionCall",
																"src": "926:18:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "918:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:10"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "810:141:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "851:3:10",
														"nodeType": "YulTypedName",
														"src": "851:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "859:4:10",
														"nodeType": "YulTypedName",
														"src": "859:4:10",
														"type": ""
													}
												],
												"src": "810:141:10"
											},
											{
												"body": {
													"nativeSrc": "1001:49:10",
													"nodeType": "YulBlock",
													"src": "1001:49:10",
													"statements": [
														{
															"nativeSrc": "1011:33:10",
															"nodeType": "YulAssignment",
															"src": "1011:33:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1029:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1029:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1036:2:10",
																				"nodeType": "YulLiteral",
																				"src": "1036:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1025:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1025:3:10"
																		},
																		"nativeSrc": "1025:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1025:14:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1041:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1041:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1021:3:10"
																},
																"nativeSrc": "1021:23:10",
																"nodeType": "YulFunctionCall",
																"src": "1021:23:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1011:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1011:6:10"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "957:93:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "984:5:10",
														"nodeType": "YulTypedName",
														"src": "984:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "994:6:10",
														"nodeType": "YulTypedName",
														"src": "994:6:10",
														"type": ""
													}
												],
												"src": "957:93:10"
											},
											{
												"body": {
													"nativeSrc": "1109:54:10",
													"nodeType": "YulBlock",
													"src": "1109:54:10",
													"statements": [
														{
															"nativeSrc": "1119:37:10",
															"nodeType": "YulAssignment",
															"src": "1119:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "1144:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "1150:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1150:5:10"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "1140:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1140:3:10"
																},
																"nativeSrc": "1140:16:10",
																"nodeType": "YulFunctionCall",
																"src": "1140:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "1119:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1119:8:10"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "1056:107:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "1084:4:10",
														"nodeType": "YulTypedName",
														"src": "1084:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "1090:5:10",
														"nodeType": "YulTypedName",
														"src": "1090:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "1100:8:10",
														"nodeType": "YulTypedName",
														"src": "1100:8:10",
														"type": ""
													}
												],
												"src": "1056:107:10"
											},
											{
												"body": {
													"nativeSrc": "1245:317:10",
													"nodeType": "YulBlock",
													"src": "1245:317:10",
													"statements": [
														{
															"nativeSrc": "1255:35:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1255:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "1276:10:10",
																		"nodeType": "YulIdentifier",
																		"src": "1276:10:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1288:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1288:1:10",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "1272:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1272:3:10"
																},
																"nativeSrc": "1272:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1272:18:10"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "1259:9:10",
																	"nodeType": "YulTypedName",
																	"src": "1259:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1299:109:10",
															"nodeType": "YulVariableDeclaration",
															"src": "1299:109:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1330:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1330:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1341:66:10",
																		"nodeType": "YulLiteral",
																		"src": "1341:66:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1311:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1311:18:10"
																},
																"nativeSrc": "1311:97:10",
																"nodeType": "YulFunctionCall",
																"src": "1311:97:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "1303:4:10",
																	"nodeType": "YulTypedName",
																	"src": "1303:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1417:51:10",
															"nodeType": "YulAssignment",
															"src": "1417:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "1448:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1448:9:10"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "1459:8:10",
																		"nodeType": "YulIdentifier",
																		"src": "1459:8:10"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "1429:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "1429:18:10"
																},
																"nativeSrc": "1429:39:10",
																"nodeType": "YulFunctionCall",
																"src": "1429:39:10"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "1417:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "1417:8:10"
																}
															]
														},
														{
															"nativeSrc": "1477:30:10",
															"nodeType": "YulAssignment",
															"src": "1477:30:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1490:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1490:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "1501:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1501:4:10"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "1497:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1497:3:10"
																		},
																		"nativeSrc": "1497:9:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1497:9:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1486:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1486:3:10"
																},
																"nativeSrc": "1486:21:10",
																"nodeType": "YulFunctionCall",
																"src": "1486:21:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1477:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1477:5:10"
																}
															]
														},
														{
															"nativeSrc": "1516:40:10",
															"nodeType": "YulAssignment",
															"src": "1516:40:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1529:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1529:5:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "1540:8:10",
																				"nodeType": "YulIdentifier",
																				"src": "1540:8:10"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "1550:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1550:4:10"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "1536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1536:3:10"
																		},
																		"nativeSrc": "1536:19:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1536:19:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "1526:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "1526:2:10"
																},
																"nativeSrc": "1526:30:10",
																"nodeType": "YulFunctionCall",
																"src": "1526:30:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "1516:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1516:6:10"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "1169:393:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1206:5:10",
														"nodeType": "YulTypedName",
														"src": "1206:5:10",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "1213:10:10",
														"nodeType": "YulTypedName",
														"src": "1213:10:10",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "1225:8:10",
														"nodeType": "YulTypedName",
														"src": "1225:8:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "1238:6:10",
														"nodeType": "YulTypedName",
														"src": "1238:6:10",
														"type": ""
													}
												],
												"src": "1169:393:10"
											},
											{
												"body": {
													"nativeSrc": "1613:32:10",
													"nodeType": "YulBlock",
													"src": "1613:32:10",
													"statements": [
														{
															"nativeSrc": "1623:16:10",
															"nodeType": "YulAssignment",
															"src": "1623:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "1634:5:10",
																"nodeType": "YulIdentifier",
																"src": "1634:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1623:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1623:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1568:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1595:5:10",
														"nodeType": "YulTypedName",
														"src": "1595:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1605:7:10",
														"nodeType": "YulTypedName",
														"src": "1605:7:10",
														"type": ""
													}
												],
												"src": "1568:77:10"
											},
											{
												"body": {
													"nativeSrc": "1683:28:10",
													"nodeType": "YulBlock",
													"src": "1683:28:10",
													"statements": [
														{
															"nativeSrc": "1693:12:10",
															"nodeType": "YulAssignment",
															"src": "1693:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1700:5:10",
																"nodeType": "YulIdentifier",
																"src": "1700:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1693:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1693:3:10"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "1651:60:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1669:5:10",
														"nodeType": "YulTypedName",
														"src": "1669:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1679:3:10",
														"nodeType": "YulTypedName",
														"src": "1679:3:10",
														"type": ""
													}
												],
												"src": "1651:60:10"
											},
											{
												"body": {
													"nativeSrc": "1777:82:10",
													"nodeType": "YulBlock",
													"src": "1777:82:10",
													"statements": [
														{
															"nativeSrc": "1787:66:10",
															"nodeType": "YulAssignment",
															"src": "1787:66:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1845:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "1845:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1827:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1827:17:10"
																				},
																				"nativeSrc": "1827:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1827:24:10"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "1818:8:10",
																			"nodeType": "YulIdentifier",
																			"src": "1818:8:10"
																		},
																		"nativeSrc": "1818:34:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1818:34:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "1800:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1800:17:10"
																},
																"nativeSrc": "1800:53:10",
																"nodeType": "YulFunctionCall",
																"src": "1800:53:10"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "1787:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "1787:9:10"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "1717:142:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1757:5:10",
														"nodeType": "YulTypedName",
														"src": "1757:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "1767:9:10",
														"nodeType": "YulTypedName",
														"src": "1767:9:10",
														"type": ""
													}
												],
												"src": "1717:142:10"
											},
											{
												"body": {
													"nativeSrc": "1912:28:10",
													"nodeType": "YulBlock",
													"src": "1912:28:10",
													"statements": [
														{
															"nativeSrc": "1922:12:10",
															"nodeType": "YulAssignment",
															"src": "1922:12:10",
															"value": {
																"name": "value",
																"nativeSrc": "1929:5:10",
																"nodeType": "YulIdentifier",
																"src": "1929:5:10"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "1922:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1922:3:10"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "1865:75:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1898:5:10",
														"nodeType": "YulTypedName",
														"src": "1898:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "1908:3:10",
														"nodeType": "YulTypedName",
														"src": "1908:3:10",
														"type": ""
													}
												],
												"src": "1865:75:10"
											},
											{
												"body": {
													"nativeSrc": "2022:193:10",
													"nodeType": "YulBlock",
													"src": "2022:193:10",
													"statements": [
														{
															"nativeSrc": "2032:63:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2032:63:10",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "2087:7:10",
																		"nodeType": "YulIdentifier",
																		"src": "2087:7:10"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "2056:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2056:30:10"
																},
																"nativeSrc": "2056:39:10",
																"nodeType": "YulFunctionCall",
																"src": "2056:39:10"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2036:16:10",
																	"nodeType": "YulTypedName",
																	"src": "2036:16:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2111:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2111:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "2151:4:10",
																						"nodeType": "YulIdentifier",
																						"src": "2151:4:10"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "2145:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2145:5:10"
																				},
																				"nativeSrc": "2145:11:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2145:11:10"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "2158:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2158:6:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "2190:16:10",
																						"nodeType": "YulIdentifier",
																						"src": "2190:16:10"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "2166:23:10",
																					"nodeType": "YulIdentifier",
																					"src": "2166:23:10"
																				},
																				"nativeSrc": "2166:41:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2166:41:10"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "2117:27:10",
																			"nodeType": "YulIdentifier",
																			"src": "2117:27:10"
																		},
																		"nativeSrc": "2117:91:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2117:91:10"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "2104:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2104:6:10"
																},
																"nativeSrc": "2104:105:10",
																"nodeType": "YulFunctionCall",
																"src": "2104:105:10"
															},
															"nativeSrc": "2104:105:10",
															"nodeType": "YulExpressionStatement",
															"src": "2104:105:10"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "1946:269:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "1999:4:10",
														"nodeType": "YulTypedName",
														"src": "1999:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2005:6:10",
														"nodeType": "YulTypedName",
														"src": "2005:6:10",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2013:7:10",
														"nodeType": "YulTypedName",
														"src": "2013:7:10",
														"type": ""
													}
												],
												"src": "1946:269:10"
											},
											{
												"body": {
													"nativeSrc": "2270:24:10",
													"nodeType": "YulBlock",
													"src": "2270:24:10",
													"statements": [
														{
															"nativeSrc": "2280:8:10",
															"nodeType": "YulAssignment",
															"src": "2280:8:10",
															"value": {
																"kind": "number",
																"nativeSrc": "2287:1:10",
																"nodeType": "YulLiteral",
																"src": "2287:1:10",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2280:3:10"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "2221:73:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2266:3:10",
														"nodeType": "YulTypedName",
														"src": "2266:3:10",
														"type": ""
													}
												],
												"src": "2221:73:10"
											},
											{
												"body": {
													"nativeSrc": "2353:136:10",
													"nodeType": "YulBlock",
													"src": "2353:136:10",
													"statements": [
														{
															"nativeSrc": "2363:46:10",
															"nodeType": "YulVariableDeclaration",
															"src": "2363:46:10",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "2377:30:10",
																	"nodeType": "YulIdentifier",
																	"src": "2377:30:10"
																},
																"nativeSrc": "2377:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2377:32:10"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "2367:6:10",
																	"nodeType": "YulTypedName",
																	"src": "2367:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "2462:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "2462:4:10"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "2468:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2468:6:10"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "2476:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2476:6:10"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "2418:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "2418:43:10"
																},
																"nativeSrc": "2418:65:10",
																"nodeType": "YulFunctionCall",
																"src": "2418:65:10"
															},
															"nativeSrc": "2418:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "2418:65:10"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "2300:189:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2339:4:10",
														"nodeType": "YulTypedName",
														"src": "2339:4:10",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2345:6:10",
														"nodeType": "YulTypedName",
														"src": "2345:6:10",
														"type": ""
													}
												],
												"src": "2300:189:10"
											},
											{
												"body": {
													"nativeSrc": "2545:136:10",
													"nodeType": "YulBlock",
													"src": "2545:136:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2612:63:10",
																"nodeType": "YulBlock",
																"src": "2612:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2656:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2656:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2663:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2663:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "2626:29:10",
																				"nodeType": "YulIdentifier",
																				"src": "2626:29:10"
																			},
																			"nativeSrc": "2626:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2626:39:10"
																		},
																		"nativeSrc": "2626:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2626:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "2565:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2565:5:10"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2572:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2572:3:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "2562:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2562:2:10"
																},
																"nativeSrc": "2562:14:10",
																"nodeType": "YulFunctionCall",
																"src": "2562:14:10"
															},
															"nativeSrc": "2555:120:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "2577:26:10",
																"nodeType": "YulBlock",
																"src": "2577:26:10",
																"statements": [
																	{
																		"nativeSrc": "2579:22:10",
																		"nodeType": "YulAssignment",
																		"src": "2579:22:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "2592:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2592:5:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2599:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2599:1:10",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2588:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2588:3:10"
																			},
																			"nativeSrc": "2588:13:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2588:13:10"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "2579:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2579:5:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "2559:2:10",
																"nodeType": "YulBlock",
																"src": "2559:2:10",
																"statements": []
															},
															"src": "2555:120:10"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "2495:186:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "2533:5:10",
														"nodeType": "YulTypedName",
														"src": "2533:5:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2540:3:10",
														"nodeType": "YulTypedName",
														"src": "2540:3:10",
														"type": ""
													}
												],
												"src": "2495:186:10"
											},
											{
												"body": {
													"nativeSrc": "2766:464:10",
													"nodeType": "YulBlock",
													"src": "2766:464:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2792:431:10",
																"nodeType": "YulBlock",
																"src": "2792:431:10",
																"statements": [
																	{
																		"nativeSrc": "2806:54:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2806:54:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "2854:5:10",
																					"nodeType": "YulIdentifier",
																					"src": "2854:5:10"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "2822:31:10",
																				"nodeType": "YulIdentifier",
																				"src": "2822:31:10"
																			},
																			"nativeSrc": "2822:38:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2822:38:10"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "2810:8:10",
																				"nodeType": "YulTypedName",
																				"src": "2810:8:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "2873:63:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "2873:63:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "2896:8:10",
																					"nodeType": "YulIdentifier",
																					"src": "2896:8:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "2924:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "2924:10:10"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "2906:17:10",
																						"nodeType": "YulIdentifier",
																						"src": "2906:17:10"
																					},
																					"nativeSrc": "2906:29:10",
																					"nodeType": "YulFunctionCall",
																					"src": "2906:29:10"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "2892:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "2892:3:10"
																			},
																			"nativeSrc": "2892:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2892:44:10"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "2877:11:10",
																				"nodeType": "YulTypedName",
																				"src": "2877:11:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "3093:27:10",
																			"nodeType": "YulBlock",
																			"src": "3093:27:10",
																			"statements": [
																				{
																					"nativeSrc": "3095:23:10",
																					"nodeType": "YulAssignment",
																					"src": "3095:23:10",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "3110:8:10",
																						"nodeType": "YulIdentifier",
																						"src": "3110:8:10"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "3095:11:10",
																							"nodeType": "YulIdentifier",
																							"src": "3095:11:10"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "3077:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "3077:10:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3089:2:10",
																					"nodeType": "YulLiteral",
																					"src": "3089:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "3074:2:10",
																				"nodeType": "YulIdentifier",
																				"src": "3074:2:10"
																			},
																			"nativeSrc": "3074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3074:18:10"
																		},
																		"nativeSrc": "3071:49:10",
																		"nodeType": "YulIf",
																		"src": "3071:49:10"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "3162:11:10",
																					"nodeType": "YulIdentifier",
																					"src": "3162:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "3179:8:10",
																							"nodeType": "YulIdentifier",
																							"src": "3179:8:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "3207:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "3207:3:10"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "3189:17:10",
																								"nodeType": "YulIdentifier",
																								"src": "3189:17:10"
																							},
																							"nativeSrc": "3189:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "3189:22:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "3175:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "3175:3:10"
																					},
																					"nativeSrc": "3175:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "3175:37:10"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "3133:28:10",
																				"nodeType": "YulIdentifier",
																				"src": "3133:28:10"
																			},
																			"nativeSrc": "3133:80:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3133:80:10"
																		},
																		"nativeSrc": "3133:80:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3133:80:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "2783:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "2783:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2788:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2788:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2780:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "2780:2:10"
																},
																"nativeSrc": "2780:11:10",
																"nodeType": "YulFunctionCall",
																"src": "2780:11:10"
															},
															"nativeSrc": "2777:446:10",
															"nodeType": "YulIf",
															"src": "2777:446:10"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "2687:543:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "2742:5:10",
														"nodeType": "YulTypedName",
														"src": "2742:5:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "2749:3:10",
														"nodeType": "YulTypedName",
														"src": "2749:3:10",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "2754:10:10",
														"nodeType": "YulTypedName",
														"src": "2754:10:10",
														"type": ""
													}
												],
												"src": "2687:543:10"
											},
											{
												"body": {
													"nativeSrc": "3299:54:10",
													"nodeType": "YulBlock",
													"src": "3299:54:10",
													"statements": [
														{
															"nativeSrc": "3309:37:10",
															"nodeType": "YulAssignment",
															"src": "3309:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "3334:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3334:4:10"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "3340:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3340:5:10"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "3330:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3330:3:10"
																},
																"nativeSrc": "3330:16:10",
																"nodeType": "YulFunctionCall",
																"src": "3330:16:10"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "3309:8:10",
																	"nodeType": "YulIdentifier",
																	"src": "3309:8:10"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "3236:117:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "3274:4:10",
														"nodeType": "YulTypedName",
														"src": "3274:4:10",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "3280:5:10",
														"nodeType": "YulTypedName",
														"src": "3280:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "3290:8:10",
														"nodeType": "YulTypedName",
														"src": "3290:8:10",
														"type": ""
													}
												],
												"src": "3236:117:10"
											},
											{
												"body": {
													"nativeSrc": "3410:118:10",
													"nodeType": "YulBlock",
													"src": "3410:118:10",
													"statements": [
														{
															"nativeSrc": "3420:68:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3420:68:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3469:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3469:1:10",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "3472:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3472:5:10"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "3465:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3465:3:10"
																				},
																				"nativeSrc": "3465:13:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3465:13:10"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "3484:1:10",
																						"nodeType": "YulLiteral",
																						"src": "3484:1:10",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "3480:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "3480:3:10"
																				},
																				"nativeSrc": "3480:6:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3480:6:10"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "3436:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "3436:28:10"
																		},
																		"nativeSrc": "3436:51:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3436:51:10"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "3432:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3432:3:10"
																},
																"nativeSrc": "3432:56:10",
																"nodeType": "YulFunctionCall",
																"src": "3432:56:10"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "3424:4:10",
																	"nodeType": "YulTypedName",
																	"src": "3424:4:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3497:25:10",
															"nodeType": "YulAssignment",
															"src": "3497:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3511:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3511:4:10"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "3517:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3517:4:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "3507:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3507:3:10"
																},
																"nativeSrc": "3507:15:10",
																"nodeType": "YulFunctionCall",
																"src": "3507:15:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "3497:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3497:6:10"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "3359:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3387:4:10",
														"nodeType": "YulTypedName",
														"src": "3387:4:10",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "3393:5:10",
														"nodeType": "YulTypedName",
														"src": "3393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "3403:6:10",
														"nodeType": "YulTypedName",
														"src": "3403:6:10",
														"type": ""
													}
												],
												"src": "3359:169:10"
											},
											{
												"body": {
													"nativeSrc": "3614:214:10",
													"nodeType": "YulBlock",
													"src": "3614:214:10",
													"statements": [
														{
															"nativeSrc": "3747:37:10",
															"nodeType": "YulAssignment",
															"src": "3747:37:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3774:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3774:4:10"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "3780:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3780:3:10"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "3755:18:10",
																	"nodeType": "YulIdentifier",
																	"src": "3755:18:10"
																},
																"nativeSrc": "3755:29:10",
																"nodeType": "YulFunctionCall",
																"src": "3755:29:10"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "3747:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3747:4:10"
																}
															]
														},
														{
															"nativeSrc": "3793:29:10",
															"nodeType": "YulAssignment",
															"src": "3793:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "3804:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "3804:4:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3814:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3814:1:10",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "3817:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:3:10"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "3810:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3810:3:10"
																		},
																		"nativeSrc": "3810:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3810:11:10"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "3801:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "3801:2:10"
																},
																"nativeSrc": "3801:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3801:21:10"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "3793:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3793:4:10"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "3533:295:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "3595:4:10",
														"nodeType": "YulTypedName",
														"src": "3595:4:10",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3601:3:10",
														"nodeType": "YulTypedName",
														"src": "3601:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "3609:4:10",
														"nodeType": "YulTypedName",
														"src": "3609:4:10",
														"type": ""
													}
												],
												"src": "3533:295:10"
											},
											{
												"body": {
													"nativeSrc": "3925:1303:10",
													"nodeType": "YulBlock",
													"src": "3925:1303:10",
													"statements": [
														{
															"nativeSrc": "3936:51:10",
															"nodeType": "YulVariableDeclaration",
															"src": "3936:51:10",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "3983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3983:3:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "3950:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "3950:32:10"
																},
																"nativeSrc": "3950:37:10",
																"nodeType": "YulFunctionCall",
																"src": "3950:37:10"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "3940:6:10",
																	"nodeType": "YulTypedName",
																	"src": "3940:6:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4072:22:10",
																"nodeType": "YulBlock",
																"src": "4072:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4074:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "4074:16:10"
																			},
																			"nativeSrc": "4074:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4074:18:10"
																		},
																		"nativeSrc": "4074:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4074:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4044:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4044:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4052:18:10",
																		"nodeType": "YulLiteral",
																		"src": "4052:18:10",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4041:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4041:2:10"
																},
																"nativeSrc": "4041:30:10",
																"nodeType": "YulFunctionCall",
																"src": "4041:30:10"
															},
															"nativeSrc": "4038:56:10",
															"nodeType": "YulIf",
															"src": "4038:56:10"
														},
														{
															"nativeSrc": "4104:52:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4104:52:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "4150:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:4:10"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "4144:5:10",
																			"nodeType": "YulIdentifier",
																			"src": "4144:5:10"
																		},
																		"nativeSrc": "4144:11:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4144:11:10"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "4118:25:10",
																	"nodeType": "YulIdentifier",
																	"src": "4118:25:10"
																},
																"nativeSrc": "4118:38:10",
																"nodeType": "YulFunctionCall",
																"src": "4118:38:10"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "4108:6:10",
																	"nodeType": "YulTypedName",
																	"src": "4108:6:10",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "4249:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "4249:4:10"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "4255:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4255:6:10"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "4263:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4263:6:10"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "4203:45:10",
																	"nodeType": "YulIdentifier",
																	"src": "4203:45:10"
																},
																"nativeSrc": "4203:67:10",
																"nodeType": "YulFunctionCall",
																"src": "4203:67:10"
															},
															"nativeSrc": "4203:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "4203:67:10"
														},
														{
															"nativeSrc": "4280:18:10",
															"nodeType": "YulVariableDeclaration",
															"src": "4280:18:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4297:1:10",
																"nodeType": "YulLiteral",
																"src": "4297:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4284:9:10",
																	"nodeType": "YulTypedName",
																	"src": "4284:9:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4308:17:10",
															"nodeType": "YulAssignment",
															"src": "4308:17:10",
															"value": {
																"kind": "number",
																"nativeSrc": "4321:4:10",
																"nodeType": "YulLiteral",
																"src": "4321:4:10",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "4308:9:10",
																	"nodeType": "YulIdentifier",
																	"src": "4308:9:10"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "4372:611:10",
																		"nodeType": "YulBlock",
																		"src": "4372:611:10",
																		"statements": [
																			{
																				"nativeSrc": "4386:37:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4386:37:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "4405:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4405:6:10"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "4417:4:10",
																									"nodeType": "YulLiteral",
																									"src": "4417:4:10",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "4413:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4413:3:10"
																							},
																							"nativeSrc": "4413:9:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4413:9:10"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "4401:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "4401:3:10"
																					},
																					"nativeSrc": "4401:22:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4401:22:10"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "4390:7:10",
																						"nodeType": "YulTypedName",
																						"src": "4390:7:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4437:51:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4437:51:10",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4483:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4483:4:10"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "4451:31:10",
																						"nodeType": "YulIdentifier",
																						"src": "4451:31:10"
																					},
																					"nativeSrc": "4451:37:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4451:37:10"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "4441:6:10",
																						"nodeType": "YulTypedName",
																						"src": "4441:6:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "4501:10:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "4501:10:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "4510:1:10",
																					"nodeType": "YulLiteral",
																					"src": "4510:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "4505:1:10",
																						"nodeType": "YulTypedName",
																						"src": "4505:1:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "4569:163:10",
																					"nodeType": "YulBlock",
																					"src": "4569:163:10",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4594:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4594:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "4612:3:10",
																														"nodeType": "YulIdentifier",
																														"src": "4612:3:10"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "4617:9:10",
																														"nodeType": "YulIdentifier",
																														"src": "4617:9:10"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "4608:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4608:3:10"
																												},
																												"nativeSrc": "4608:19:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4608:19:10"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "4602:5:10",
																											"nodeType": "YulIdentifier",
																											"src": "4602:5:10"
																										},
																										"nativeSrc": "4602:26:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4602:26:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4587:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4587:6:10"
																								},
																								"nativeSrc": "4587:42:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4587:42:10"
																							},
																							"nativeSrc": "4587:42:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4587:42:10"
																						},
																						{
																							"nativeSrc": "4646:24:10",
																							"nodeType": "YulAssignment",
																							"src": "4646:24:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4660:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4660:6:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4668:1:10",
																										"nodeType": "YulLiteral",
																										"src": "4668:1:10",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4656:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4656:3:10"
																								},
																								"nativeSrc": "4656:14:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4656:14:10"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "4646:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4646:6:10"
																								}
																							]
																						},
																						{
																							"nativeSrc": "4687:31:10",
																							"nodeType": "YulAssignment",
																							"src": "4687:31:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "4704:9:10",
																										"nodeType": "YulIdentifier",
																										"src": "4704:9:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4715:2:10",
																										"nodeType": "YulLiteral",
																										"src": "4715:2:10",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4700:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4700:3:10"
																								},
																								"nativeSrc": "4700:18:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4700:18:10"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "4687:9:10",
																									"nodeType": "YulIdentifier",
																									"src": "4687:9:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "4535:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "4535:1:10"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4538:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4538:7:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4532:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4532:2:10"
																					},
																					"nativeSrc": "4532:14:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4532:14:10"
																				},
																				"nativeSrc": "4524:208:10",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "4547:21:10",
																					"nodeType": "YulBlock",
																					"src": "4547:21:10",
																					"statements": [
																						{
																							"nativeSrc": "4549:17:10",
																							"nodeType": "YulAssignment",
																							"src": "4549:17:10",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "4558:1:10",
																										"nodeType": "YulIdentifier",
																										"src": "4558:1:10"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4561:4:10",
																										"nodeType": "YulLiteral",
																										"src": "4561:4:10",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4554:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "4554:3:10"
																								},
																								"nativeSrc": "4554:12:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4554:12:10"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "4549:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "4549:1:10"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "4528:3:10",
																					"nodeType": "YulBlock",
																					"src": "4528:3:10",
																					"statements": []
																				},
																				"src": "4524:208:10"
																			},
																			{
																				"body": {
																					"nativeSrc": "4768:156:10",
																					"nodeType": "YulBlock",
																					"src": "4768:156:10",
																					"statements": [
																						{
																							"nativeSrc": "4786:43:10",
																							"nodeType": "YulVariableDeclaration",
																							"src": "4786:43:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "4813:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "4813:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "4818:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4818:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "4809:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "4809:3:10"
																										},
																										"nativeSrc": "4809:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4809:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "4803:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "4803:5:10"
																								},
																								"nativeSrc": "4803:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4803:26:10"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "4790:9:10",
																									"nodeType": "YulTypedName",
																									"src": "4790:9:10",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "4853:6:10",
																										"nodeType": "YulIdentifier",
																										"src": "4853:6:10"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "4880:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "4880:9:10"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "4895:6:10",
																														"nodeType": "YulIdentifier",
																														"src": "4895:6:10"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "4903:4:10",
																														"nodeType": "YulLiteral",
																														"src": "4903:4:10",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "4891:3:10",
																													"nodeType": "YulIdentifier",
																													"src": "4891:3:10"
																												},
																												"nativeSrc": "4891:17:10",
																												"nodeType": "YulFunctionCall",
																												"src": "4891:17:10"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "4861:18:10",
																											"nodeType": "YulIdentifier",
																											"src": "4861:18:10"
																										},
																										"nativeSrc": "4861:48:10",
																										"nodeType": "YulFunctionCall",
																										"src": "4861:48:10"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "4846:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "4846:6:10"
																								},
																								"nativeSrc": "4846:64:10",
																								"nodeType": "YulFunctionCall",
																								"src": "4846:64:10"
																							},
																							"nativeSrc": "4846:64:10",
																							"nodeType": "YulExpressionStatement",
																							"src": "4846:64:10"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "4751:7:10",
																							"nodeType": "YulIdentifier",
																							"src": "4751:7:10"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "4760:6:10",
																							"nodeType": "YulIdentifier",
																							"src": "4760:6:10"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "4748:2:10",
																						"nodeType": "YulIdentifier",
																						"src": "4748:2:10"
																					},
																					"nativeSrc": "4748:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4748:19:10"
																				},
																				"nativeSrc": "4745:179:10",
																				"nodeType": "YulIf",
																				"src": "4745:179:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "4944:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "4944:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "4958:6:10",
																											"nodeType": "YulIdentifier",
																											"src": "4958:6:10"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "4966:1:10",
																											"nodeType": "YulLiteral",
																											"src": "4966:1:10",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "4954:3:10",
																										"nodeType": "YulIdentifier",
																										"src": "4954:3:10"
																									},
																									"nativeSrc": "4954:14:10",
																									"nodeType": "YulFunctionCall",
																									"src": "4954:14:10"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "4970:1:10",
																									"nodeType": "YulLiteral",
																									"src": "4970:1:10",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "4950:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "4950:3:10"
																							},
																							"nativeSrc": "4950:22:10",
																							"nodeType": "YulFunctionCall",
																							"src": "4950:22:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "4937:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4937:6:10"
																					},
																					"nativeSrc": "4937:36:10",
																					"nodeType": "YulFunctionCall",
																					"src": "4937:36:10"
																				},
																				"nativeSrc": "4937:36:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "4937:36:10"
																			}
																		]
																	},
																	"nativeSrc": "4365:618:10",
																	"nodeType": "YulCase",
																	"src": "4365:618:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4370:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4370:1:10",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5000:222:10",
																		"nodeType": "YulBlock",
																		"src": "5000:222:10",
																		"statements": [
																			{
																				"nativeSrc": "5014:14:10",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5014:14:10",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5027:1:10",
																					"nodeType": "YulLiteral",
																					"src": "5027:1:10",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5018:5:10",
																						"nodeType": "YulTypedName",
																						"src": "5018:5:10",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5051:67:10",
																					"nodeType": "YulBlock",
																					"src": "5051:67:10",
																					"statements": [
																						{
																							"nativeSrc": "5069:35:10",
																							"nodeType": "YulAssignment",
																							"src": "5069:35:10",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5088:3:10",
																												"nodeType": "YulIdentifier",
																												"src": "5088:3:10"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5093:9:10",
																												"nodeType": "YulIdentifier",
																												"src": "5093:9:10"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5084:3:10",
																											"nodeType": "YulIdentifier",
																											"src": "5084:3:10"
																										},
																										"nativeSrc": "5084:19:10",
																										"nodeType": "YulFunctionCall",
																										"src": "5084:19:10"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5078:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5078:5:10"
																								},
																								"nativeSrc": "5078:26:10",
																								"nodeType": "YulFunctionCall",
																								"src": "5078:26:10"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "5069:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5069:5:10"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "5044:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "5044:6:10"
																				},
																				"nativeSrc": "5041:77:10",
																				"nodeType": "YulIf",
																				"src": "5041:77:10"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5138:4:10",
																							"nodeType": "YulIdentifier",
																							"src": "5138:4:10"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "5197:5:10",
																									"nodeType": "YulIdentifier",
																									"src": "5197:5:10"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "5204:6:10",
																									"nodeType": "YulIdentifier",
																									"src": "5204:6:10"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "5144:52:10",
																								"nodeType": "YulIdentifier",
																								"src": "5144:52:10"
																							},
																							"nativeSrc": "5144:67:10",
																							"nodeType": "YulFunctionCall",
																							"src": "5144:67:10"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5131:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5131:6:10"
																					},
																					"nativeSrc": "5131:81:10",
																					"nodeType": "YulFunctionCall",
																					"src": "5131:81:10"
																				},
																				"nativeSrc": "5131:81:10",
																				"nodeType": "YulExpressionStatement",
																				"src": "5131:81:10"
																			}
																		]
																	},
																	"nativeSrc": "4992:230:10",
																	"nodeType": "YulCase",
																	"src": "4992:230:10",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "4345:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4345:6:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4353:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4353:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4342:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "4342:2:10"
																},
																"nativeSrc": "4342:14:10",
																"nodeType": "YulFunctionCall",
																"src": "4342:14:10"
															},
															"nativeSrc": "4335:887:10",
															"nodeType": "YulSwitch",
															"src": "4335:887:10"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "3833:1395:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3914:4:10",
														"nodeType": "YulTypedName",
														"src": "3914:4:10",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "3920:3:10",
														"nodeType": "YulTypedName",
														"src": "3920:3:10",
														"type": ""
													}
												],
												"src": "3833:1395:10"
											},
											{
												"body": {
													"nativeSrc": "5279:81:10",
													"nodeType": "YulBlock",
													"src": "5279:81:10",
													"statements": [
														{
															"nativeSrc": "5289:65:10",
															"nodeType": "YulAssignment",
															"src": "5289:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5304:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5304:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5311:42:10",
																		"nodeType": "YulLiteral",
																		"src": "5311:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5300:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5300:3:10"
																},
																"nativeSrc": "5300:54:10",
																"nodeType": "YulFunctionCall",
																"src": "5300:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5289:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5289:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "5234:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5261:5:10",
														"nodeType": "YulTypedName",
														"src": "5261:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5271:7:10",
														"nodeType": "YulTypedName",
														"src": "5271:7:10",
														"type": ""
													}
												],
												"src": "5234:126:10"
											},
											{
												"body": {
													"nativeSrc": "5411:51:10",
													"nodeType": "YulBlock",
													"src": "5411:51:10",
													"statements": [
														{
															"nativeSrc": "5421:35:10",
															"nodeType": "YulAssignment",
															"src": "5421:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5450:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5450:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5432:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "5432:17:10"
																},
																"nativeSrc": "5432:24:10",
																"nodeType": "YulFunctionCall",
																"src": "5432:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5421:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5421:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "5366:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5393:5:10",
														"nodeType": "YulTypedName",
														"src": "5393:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5403:7:10",
														"nodeType": "YulTypedName",
														"src": "5403:7:10",
														"type": ""
													}
												],
												"src": "5366:96:10"
											},
											{
												"body": {
													"nativeSrc": "5533:53:10",
													"nodeType": "YulBlock",
													"src": "5533:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5550:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5550:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5573:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5573:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5555:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "5555:17:10"
																		},
																		"nativeSrc": "5555:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5555:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5543:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5543:6:10"
																},
																"nativeSrc": "5543:37:10",
																"nodeType": "YulFunctionCall",
																"src": "5543:37:10"
															},
															"nativeSrc": "5543:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "5543:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5468:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5521:5:10",
														"nodeType": "YulTypedName",
														"src": "5521:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5528:3:10",
														"nodeType": "YulTypedName",
														"src": "5528:3:10",
														"type": ""
													}
												],
												"src": "5468:118:10"
											},
											{
												"body": {
													"nativeSrc": "5690:124:10",
													"nodeType": "YulBlock",
													"src": "5690:124:10",
													"statements": [
														{
															"nativeSrc": "5700:26:10",
															"nodeType": "YulAssignment",
															"src": "5700:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5712:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5712:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5723:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5723:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5708:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5708:3:10"
																},
																"nativeSrc": "5708:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5708:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5700:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5700:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5780:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5780:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5793:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5793:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5804:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5804:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5789:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5789:3:10"
																		},
																		"nativeSrc": "5789:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5789:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "5736:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "5736:43:10"
																},
																"nativeSrc": "5736:71:10",
																"nodeType": "YulFunctionCall",
																"src": "5736:71:10"
															},
															"nativeSrc": "5736:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "5736:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5592:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5662:9:10",
														"nodeType": "YulTypedName",
														"src": "5662:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5674:6:10",
														"nodeType": "YulTypedName",
														"src": "5674:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5685:4:10",
														"nodeType": "YulTypedName",
														"src": "5685:4:10",
														"type": ""
													}
												],
												"src": "5592:222:10"
											},
											{
												"body": {
													"nativeSrc": "5848:152:10",
													"nodeType": "YulBlock",
													"src": "5848:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5865:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5865:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5868:77:10",
																		"nodeType": "YulLiteral",
																		"src": "5868:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5858:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5858:6:10"
																},
																"nativeSrc": "5858:88:10",
																"nodeType": "YulFunctionCall",
																"src": "5858:88:10"
															},
															"nativeSrc": "5858:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "5858:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5962:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5962:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5965:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5965:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5955:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5955:6:10"
																},
																"nativeSrc": "5955:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5955:15:10"
															},
															"nativeSrc": "5955:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5955:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5986:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5986:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5989:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5989:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5979:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5979:6:10"
																},
																"nativeSrc": "5979:15:10",
																"nodeType": "YulFunctionCall",
																"src": "5979:15:10"
															},
															"nativeSrc": "5979:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "5979:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "5820:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "5820:180:10"
											},
											{
												"body": {
													"nativeSrc": "6054:362:10",
													"nodeType": "YulBlock",
													"src": "6054:362:10",
													"statements": [
														{
															"nativeSrc": "6064:25:10",
															"nodeType": "YulAssignment",
															"src": "6064:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6087:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6087:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6069:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6069:17:10"
																},
																"nativeSrc": "6069:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6069:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6064:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6064:1:10"
																}
															]
														},
														{
															"nativeSrc": "6098:25:10",
															"nodeType": "YulAssignment",
															"src": "6098:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6121:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6121:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6103:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6103:17:10"
																},
																"nativeSrc": "6103:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6103:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6098:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6098:1:10"
																}
															]
														},
														{
															"nativeSrc": "6132:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "6132:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6155:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6155:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6158:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6158:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "6151:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6151:3:10"
																},
																"nativeSrc": "6151:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6151:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "6136:11:10",
																	"nodeType": "YulTypedName",
																	"src": "6136:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6169:41:10",
															"nodeType": "YulAssignment",
															"src": "6169:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "6198:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "6198:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6180:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6180:17:10"
																},
																"nativeSrc": "6180:30:10",
																"nodeType": "YulFunctionCall",
																"src": "6180:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "6169:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "6169:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6387:22:10",
																"nodeType": "YulBlock",
																"src": "6387:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6389:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6389:16:10"
																			},
																			"nativeSrc": "6389:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6389:18:10"
																		},
																		"nativeSrc": "6389:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6389:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "6320:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "6320:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "6313:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "6313:6:10"
																				},
																				"nativeSrc": "6313:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6313:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "6343:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "6343:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "6350:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "6350:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "6359:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "6359:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "6346:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "6346:3:10"
																						},
																						"nativeSrc": "6346:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "6346:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "6340:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "6340:2:10"
																				},
																				"nativeSrc": "6340:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6340:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "6293:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "6293:2:10"
																		},
																		"nativeSrc": "6293:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6293:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6273:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6273:6:10"
																},
																"nativeSrc": "6273:113:10",
																"nodeType": "YulFunctionCall",
																"src": "6273:113:10"
															},
															"nativeSrc": "6270:139:10",
															"nodeType": "YulIf",
															"src": "6270:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "6006:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6037:1:10",
														"nodeType": "YulTypedName",
														"src": "6037:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6040:1:10",
														"nodeType": "YulTypedName",
														"src": "6040:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "6046:7:10",
														"nodeType": "YulTypedName",
														"src": "6046:7:10",
														"type": ""
													}
												],
												"src": "6006:410:10"
											},
											{
												"body": {
													"nativeSrc": "6450:152:10",
													"nodeType": "YulBlock",
													"src": "6450:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6467:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6467:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6470:77:10",
																		"nodeType": "YulLiteral",
																		"src": "6470:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6460:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6460:6:10"
																},
																"nativeSrc": "6460:88:10",
																"nodeType": "YulFunctionCall",
																"src": "6460:88:10"
															},
															"nativeSrc": "6460:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "6460:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6564:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6564:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6567:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6567:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6557:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6557:6:10"
																},
																"nativeSrc": "6557:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6557:15:10"
															},
															"nativeSrc": "6557:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6557:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6588:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6588:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6591:4:10",
																		"nodeType": "YulLiteral",
																		"src": "6591:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6581:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6581:6:10"
																},
																"nativeSrc": "6581:15:10",
																"nodeType": "YulFunctionCall",
																"src": "6581:15:10"
															},
															"nativeSrc": "6581:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "6581:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "6422:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "6422:180:10"
											},
											{
												"body": {
													"nativeSrc": "6650:143:10",
													"nodeType": "YulBlock",
													"src": "6650:143:10",
													"statements": [
														{
															"nativeSrc": "6660:25:10",
															"nodeType": "YulAssignment",
															"src": "6660:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6683:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6683:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6665:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6665:17:10"
																},
																"nativeSrc": "6665:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6665:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6660:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6660:1:10"
																}
															]
														},
														{
															"nativeSrc": "6694:25:10",
															"nodeType": "YulAssignment",
															"src": "6694:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6717:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6717:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6699:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6699:17:10"
																},
																"nativeSrc": "6699:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6699:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6694:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6694:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6741:22:10",
																"nodeType": "YulBlock",
																"src": "6741:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "6743:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6743:16:10"
																			},
																			"nativeSrc": "6743:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6743:18:10"
																		},
																		"nativeSrc": "6743:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6743:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6738:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6738:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6731:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:10"
																},
																"nativeSrc": "6731:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6731:9:10"
															},
															"nativeSrc": "6728:35:10",
															"nodeType": "YulIf",
															"src": "6728:35:10"
														},
														{
															"nativeSrc": "6773:14:10",
															"nodeType": "YulAssignment",
															"src": "6773:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6782:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6782:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6785:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6785:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "6778:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6778:3:10"
																},
																"nativeSrc": "6778:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6778:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "6773:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6773:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "6608:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6639:1:10",
														"nodeType": "YulTypedName",
														"src": "6639:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6642:1:10",
														"nodeType": "YulTypedName",
														"src": "6642:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "6648:1:10",
														"nodeType": "YulTypedName",
														"src": "6648:1:10",
														"type": ""
													}
												],
												"src": "6608:185:10"
											},
											{
												"body": {
													"nativeSrc": "6843:147:10",
													"nodeType": "YulBlock",
													"src": "6843:147:10",
													"statements": [
														{
															"nativeSrc": "6853:25:10",
															"nodeType": "YulAssignment",
															"src": "6853:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6876:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6876:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6858:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6858:17:10"
																},
																"nativeSrc": "6858:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6858:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6853:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6853:1:10"
																}
															]
														},
														{
															"nativeSrc": "6887:25:10",
															"nodeType": "YulAssignment",
															"src": "6887:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6910:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6910:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6892:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "6892:17:10"
																},
																"nativeSrc": "6892:20:10",
																"nodeType": "YulFunctionCall",
																"src": "6892:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6887:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "6887:1:10"
																}
															]
														},
														{
															"nativeSrc": "6921:16:10",
															"nodeType": "YulAssignment",
															"src": "6921:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6932:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6932:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6935:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6935:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6928:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6928:3:10"
																},
																"nativeSrc": "6928:9:10",
																"nodeType": "YulFunctionCall",
																"src": "6928:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6921:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6921:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6961:22:10",
																"nodeType": "YulBlock",
																"src": "6961:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6963:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "6963:16:10"
																			},
																			"nativeSrc": "6963:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6963:18:10"
																		},
																		"nativeSrc": "6963:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6963:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6953:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "6953:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6956:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6956:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6950:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "6950:2:10"
																},
																"nativeSrc": "6950:10:10",
																"nodeType": "YulFunctionCall",
																"src": "6950:10:10"
															},
															"nativeSrc": "6947:36:10",
															"nodeType": "YulIf",
															"src": "6947:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6799:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6830:1:10",
														"nodeType": "YulTypedName",
														"src": "6830:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6833:1:10",
														"nodeType": "YulTypedName",
														"src": "6833:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6839:3:10",
														"nodeType": "YulTypedName",
														"src": "6839:3:10",
														"type": ""
													}
												],
												"src": "6799:191:10"
											},
											{
												"body": {
													"nativeSrc": "7061:53:10",
													"nodeType": "YulBlock",
													"src": "7061:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7078:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7078:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7101:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "7101:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7083:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "7083:17:10"
																		},
																		"nativeSrc": "7083:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7083:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7071:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7071:6:10"
																},
																"nativeSrc": "7071:37:10",
																"nodeType": "YulFunctionCall",
																"src": "7071:37:10"
															},
															"nativeSrc": "7071:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "7071:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "6996:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7049:5:10",
														"nodeType": "YulTypedName",
														"src": "7049:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7056:3:10",
														"nodeType": "YulTypedName",
														"src": "7056:3:10",
														"type": ""
													}
												],
												"src": "6996:118:10"
											},
											{
												"body": {
													"nativeSrc": "7274:288:10",
													"nodeType": "YulBlock",
													"src": "7274:288:10",
													"statements": [
														{
															"nativeSrc": "7284:26:10",
															"nodeType": "YulAssignment",
															"src": "7284:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7296:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7296:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7307:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7307:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7292:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7292:3:10"
																},
																"nativeSrc": "7292:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7292:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7284:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7284:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7364:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7364:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7377:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7377:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7388:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7388:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7373:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7373:3:10"
																		},
																		"nativeSrc": "7373:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7373:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7320:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7320:43:10"
																},
																"nativeSrc": "7320:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7320:71:10"
															},
															"nativeSrc": "7320:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7320:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7445:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7445:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7458:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7458:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7469:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7469:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7454:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7454:3:10"
																		},
																		"nativeSrc": "7454:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7454:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7401:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7401:43:10"
																},
																"nativeSrc": "7401:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7401:72:10"
															},
															"nativeSrc": "7401:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7401:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7527:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7527:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7540:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7540:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7551:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7551:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7536:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7536:3:10"
																		},
																		"nativeSrc": "7536:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7536:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7483:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7483:43:10"
																},
																"nativeSrc": "7483:72:10",
																"nodeType": "YulFunctionCall",
																"src": "7483:72:10"
															},
															"nativeSrc": "7483:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "7483:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7120:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7230:9:10",
														"nodeType": "YulTypedName",
														"src": "7230:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7242:6:10",
														"nodeType": "YulTypedName",
														"src": "7242:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7250:6:10",
														"nodeType": "YulTypedName",
														"src": "7250:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7258:6:10",
														"nodeType": "YulTypedName",
														"src": "7258:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7269:4:10",
														"nodeType": "YulTypedName",
														"src": "7269:4:10",
														"type": ""
													}
												],
												"src": "7120:442:10"
											},
											{
												"body": {
													"nativeSrc": "7666:124:10",
													"nodeType": "YulBlock",
													"src": "7666:124:10",
													"statements": [
														{
															"nativeSrc": "7676:26:10",
															"nodeType": "YulAssignment",
															"src": "7676:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7688:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "7688:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7699:2:10",
																		"nodeType": "YulLiteral",
																		"src": "7699:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7684:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7684:3:10"
																},
																"nativeSrc": "7684:18:10",
																"nodeType": "YulFunctionCall",
																"src": "7684:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7676:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "7676:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7756:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "7756:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7769:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "7769:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7780:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7780:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7765:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7765:3:10"
																		},
																		"nativeSrc": "7765:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7765:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7712:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "7712:43:10"
																},
																"nativeSrc": "7712:71:10",
																"nodeType": "YulFunctionCall",
																"src": "7712:71:10"
															},
															"nativeSrc": "7712:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "7712:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7568:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7638:9:10",
														"nodeType": "YulTypedName",
														"src": "7638:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7650:6:10",
														"nodeType": "YulTypedName",
														"src": "7650:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7661:4:10",
														"nodeType": "YulTypedName",
														"src": "7661:4:10",
														"type": ""
													}
												],
												"src": "7568:222:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405260026007555f600d5f6101000a81548160ff0219169083151502179055505f600d60016101000a81548160ff02191690831515021790555034801562000048575f80fd5b50336040518060400160405280600981526020017f4765636b6f476f6c6400000000000000000000000000000000000000000000008152506040518060400160405280600581526020017f4745434b4f0000000000000000000000000000000000000000000000000000008152508160039081620000c791906200081d565b508060049081620000d991906200081d565b5050505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036200014f575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040162000146919062000944565b60405180910390fd5b62000160816200024860201b60201c565b506001600681905550620001a433606460196c054f529ca52576bc68920000006200018c91906200098c565b62000198919062000a03565b6200030b60201b60201c565b620001f37302bff1b7b4e9f2483b429afba11ddb474f552678606460196c054f529ca52576bc6892000000620001db91906200098c565b620001e7919062000a03565b6200030b60201b60201c565b620002427378f48f0a33277ac7ff8672f9a71596759cf489d2606460326c054f529ca52576bc68920000006200022a91906200098c565b62000236919062000a03565b6200030b60201b60201c565b62000adb565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036200037e575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040162000375919062000944565b60405180910390fd5b620003915f83836200039560201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603620003e9578060025f828254620003dc919062000a3a565b92505081905550620004ba565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101562000475578381836040517fe450d38c0000000000000000000000000000000000000000000000000000000081526004016200046c9392919062000a85565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160362000503578060025f82825403925050819055506200054d565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051620005ac919062000ac0565b60405180910390a3505050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f60028204905060018216806200063557607f821691505b6020821081036200064b576200064a620005f0565b5b50919050565b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f60088302620006af7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8262000672565b620006bb868362000672565b95508019841693508086168417925050509392505050565b5f819050919050565b5f819050919050565b5f62000705620006ff620006f984620006d3565b620006dc565b620006d3565b9050919050565b5f819050919050565b6200072083620006e5565b620007386200072f826200070c565b8484546200067e565b825550505050565b5f90565b6200074e62000740565b6200075b81848462000715565b505050565b5b818110156200078257620007765f8262000744565b60018101905062000761565b5050565b601f821115620007d1576200079b8162000651565b620007a68462000663565b81016020851015620007b6578190505b620007ce620007c58562000663565b83018262000760565b50505b505050565b5f82821c905092915050565b5f620007f35f1984600802620007d6565b1980831691505092915050565b5f6200080d8383620007e2565b9150826002028217905092915050565b6200082882620005b9565b67ffffffffffffffff811115620008445762000843620005c3565b5b6200085082546200061d565b6200085d82828562000786565b5f60209050601f83116001811462000893575f84156200087e578287015190505b6200088a858262000800565b865550620008f9565b601f198416620008a38662000651565b5f5b82811015620008cc57848901518255600182019150602085019450602081019050620008a5565b86831015620008ec5784890151620008e8601f891682620007e2565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6200092c8262000901565b9050919050565b6200093e8162000920565b82525050565b5f602082019050620009595f83018462000933565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6200099882620006d3565b9150620009a583620006d3565b9250828202620009b581620006d3565b91508282048414831517620009cf57620009ce6200095f565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f62000a0f82620006d3565b915062000a1c83620006d3565b92508262000a2f5762000a2e620009d6565b5b828204905092915050565b5f62000a4682620006d3565b915062000a5383620006d3565b925082820190508082111562000a6e5762000a6d6200095f565b5b92915050565b62000a7f81620006d3565b82525050565b5f60608201905062000a9a5f83018662000933565b62000aa9602083018562000a74565b62000ab8604083018462000a74565b949350505050565b5f60208201905062000ad55f83018462000a74565b92915050565b6128dd8062000ae95f395ff3fe608060405234801561000f575f80fd5b506004361061021a575f3560e01c80638456cb5911610123578063b88a802f116100ab578063dd62ed3e1161007a578063dd62ed3e14610592578063e3d670d7146105c2578063e43252d7146105f2578063f2fde38b1461060e578063fc1b31131461062a5761021a565b8063b88a802f14610532578063c6d69a301461053c578063d595c33114610558578063d798cbd2146105745761021a565b80638fa81732116100f25780638fa817321461048c578063902d55a5146104aa57806395d89b41146104c8578063a9059cbb146104e6578063aabd801d146105165761021a565b80638456cb591461043e5780638a8c523c146104485780638ab1d681146104525780638da5cb5b1461046e5761021a565b806342966c68116101a65780635fd8c710116101755780635fd8c710146103be57806370a08231146103c8578063715018a6146103f8578063771a3a1d14610402578063819edfbc146104205761021a565b806342966c681461034a5780634ada218b1461036657806357376198146103845780635c975abb146103a05761021a565b806318160ddd116101ed57806318160ddd146102a457806323b872dd146102c25780632576f999146102f2578063313ce567146103225780633f4ba83a146103405761021a565b806306fdde031461021e578063095ea7b31461023c578063153b0d1e1461026c57806317386e2c14610288575b5f80fd5b610226610648565b6040516102339190611e60565b60405180910390f35b61025660048036038101906102519190611f11565b6106d8565b6040516102639190611f69565b60405180910390f35b61028660048036038101906102819190611fac565b6106fa565b005b6102a2600480360381019061029d9190611f11565b61075a565b005b6102ac6108c4565b6040516102b99190611ff9565b60405180910390f35b6102dc60048036038101906102d79190612012565b6108cd565b6040516102e99190611f69565b60405180910390f35b61030c60048036038101906103079190612062565b6108fb565b6040516103199190611ff9565b60405180910390f35b61032a610910565b60405161033791906120a8565b60405180910390f35b610348610918565b005b610364600480360381019061035f91906120c1565b61093c565b005b61036e610997565b60405161037b9190611f69565b60405180910390f35b61039e60048036038101906103999190611f11565b6109a9565b005b6103a8610a38565b6040516103b59190611f69565b60405180910390f35b6103c6610a4b565b005b6103e260048036038101906103dd9190612062565b610ab0565b6040516103ef9190611ff9565b60405180910390f35b610400610af5565b005b61040a610b08565b6040516104179190611ff9565b60405180910390f35b610428610b0e565b6040516104359190611ff9565b60405180910390f35b610446610b14565b005b610450610b39565b005b61046c60048036038101906104679190612062565b610b64565b005b610476610bc3565b60405161048391906120fb565b60405180910390f35b610494610beb565b6040516104a19190611ff9565b60405180910390f35b6104b2610bf0565b6040516104bf9190611ff9565b60405180910390f35b6104d0610c01565b6040516104dd9190611e60565b60405180910390f35b61050060048036038101906104fb9190611f11565b610c91565b60405161050d9190611f69565b60405180910390f35b610530600480360381019061052b9190611f11565b610f1e565b005b61053a611095565b005b610556600480360381019061055191906120c1565b6113bd565b005b610572600480360381019061056d91906120c1565b611413565b005b61057c611484565b6040516105899190611ff9565b60405180910390f35b6105ac60048036038101906105a79190612114565b61148a565b6040516105b99190611ff9565b60405180910390f35b6105dc60048036038101906105d79190612062565b61150c565b6040516105e99190611ff9565b60405180910390f35b61060c60048036038101906106079190612062565b61151d565b005b61062860048036038101906106239190612062565b61157d565b005b610632611601565b60405161063f9190611ff9565b60405180910390f35b6060600380546106579061217f565b80601f01602080910402602001604051908101604052809291908181526020018280546106839061217f565b80156106ce5780601f106106a5576101008083540402835291602001916106ce565b820191905f5260205f20905b8154815290600101906020018083116106b157829003601f168201915b5050505050905090565b5f806106e261160f565b90506106ef818585611616565b600191505092915050565b610702611628565b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b610762611628565b80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d9906121f9565b60405180910390fd5b80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461082e9190612244565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f40547f371cf37574d1a01eeeb1593f8db1a3e44286bba3b92cf2867707c9e473600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516108b89190611ff9565b60405180910390a25050565b5f600254905090565b5f806108d761160f565b90506108e48582856116af565b6108ef858585611741565b60019150509392505050565b600a602052805f5260405f205f915090505481565b5f6012905090565b610920611628565b5f600d60016101000a81548160ff021916908315150217905550565b6109463382611831565b3373ffffffffffffffffffffffffffffffffffffffff167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb68260405161098c9190611ff9565b60405180910390a250565b600d5f9054906101000a900460ff1681565b6109b1611628565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6109d5610bc3565b836040518363ffffffff1660e01b81526004016109f3929190612277565b6020604051808303815f875af1158015610a0f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3391906122b2565b505050565b600d60019054906101000a900460ff1681565b610a53611628565b610a5b6118b0565b610a63610bc3565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610aa5573d5f803e3d5ffd5b50610aae6118ff565b565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610afd611628565b610b065f611909565b565b60075481565b61271081565b610b1c611628565b6001600d60016101000a81548160ff021916908315150217905550565b610b41611628565b6001600d5f6101000a81548160ff02191690831515021790555043600c81905550565b610b6c611628565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a81565b6c054f529ca52576bc689200000081565b606060048054610c109061217f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3c9061217f565b8015610c875780601f10610c5e57610100808354040283529160200191610c87565b820191905f5260205f20905b815481529060010190602001808311610c6a57829003601f168201915b5050505050905090565b5f3360085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610d1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1490612327565b60405180910390fd5b33600d5f9054906101000a900460ff1680610d7e575060095f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db49061238f565b60405180910390fd5b600d60019054906101000a900460ff1615610e0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e04906123f7565b60405180910390fd5b843073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7390612485565b60405180910390fd5b69d3c21bcecceda1000000851115610ec9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec0906124ed565b60405180910390fd5b5f606460075487610eda919061250b565b610ee49190612579565b90505f8187610ef39190612244565b9050610f0733610f01610bc3565b84611741565b610f1188826119cc565b9550505050505092915050565b610f26611628565b61271081600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f7291906125a9565b1115610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa9061264c565b60405180910390fd5b80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610fff91906125a9565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f40547f371cf37574d1a01eeeb1593f8db1a3e44286bba3b92cf2867707c9e473600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516110899190611ff9565b60405180910390a25050565b600d60019054906101000a900460ff16156110e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dc906123f7565b60405180910390fd5b3360085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116790612327565b60405180910390fd5b3362015180600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546111bd91906125a9565b4210156111ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f6906126b4565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611282576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112799061271c565b60405180910390fd5b8061129361128e610bc3565b610ab0565b10156112d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb90612784565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061136a611363610bc3565b3383611741565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516113b09190611ff9565b60405180910390a2505050565b6113c5611628565b600a811115611409576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611400906127ec565b60405180910390fd5b8060078190555050565b61141b611628565b61142c611426610bc3565b82611831565b611434610bc3565b73ffffffffffffffffffffffffffffffffffffffff167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6826040516114799190611ff9565b60405180910390a250565b600c5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f61151682610ab0565b9050919050565b611525611628565b600160095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b611585611628565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115f5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115ec91906120fb565b60405180910390fd5b6115fe81611909565b50565b69d3c21bcecceda100000081565b5f33905090565b61162383838360016119ee565b505050565b61163061160f565b73ffffffffffffffffffffffffffffffffffffffff1661164e610bc3565b73ffffffffffffffffffffffffffffffffffffffff16146116ad5761167161160f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116a491906120fb565b60405180910390fd5b565b5f6116ba848461148a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461173b578181101561172c578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016117239392919061280a565b60405180910390fd5b61173a84848484035f6119ee565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117b1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117a891906120fb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611821575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161181891906120fb565b60405180910390fd5b61182c838383611bbd565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118a1575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161189891906120fb565b60405180910390fd5b6118ac825f83611bbd565b5050565b6002600654036118f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ec90612889565b60405180910390fd5b6002600681905550565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f806119d661160f565b90506119e3818585611741565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a5e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a5591906120fb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ace575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611ac591906120fb565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611bb7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611bae9190611ff9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c0d578060025f828254611c0191906125a9565b92505081905550611cdb565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611c96578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611c8d9392919061280a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d22578060025f8282540392505081905550611d6c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611dc99190611ff9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e0d578082015181840152602081019050611df2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e3282611dd6565b611e3c8185611de0565b9350611e4c818560208601611df0565b611e5581611e18565b840191505092915050565b5f6020820190508181035f830152611e788184611e28565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ead82611e84565b9050919050565b611ebd81611ea3565b8114611ec7575f80fd5b50565b5f81359050611ed881611eb4565b92915050565b5f819050919050565b611ef081611ede565b8114611efa575f80fd5b50565b5f81359050611f0b81611ee7565b92915050565b5f8060408385031215611f2757611f26611e80565b5b5f611f3485828601611eca565b9250506020611f4585828601611efd565b9150509250929050565b5f8115159050919050565b611f6381611f4f565b82525050565b5f602082019050611f7c5f830184611f5a565b92915050565b611f8b81611f4f565b8114611f95575f80fd5b50565b5f81359050611fa681611f82565b92915050565b5f8060408385031215611fc257611fc1611e80565b5b5f611fcf85828601611eca565b9250506020611fe085828601611f98565b9150509250929050565b611ff381611ede565b82525050565b5f60208201905061200c5f830184611fea565b92915050565b5f805f6060848603121561202957612028611e80565b5b5f61203686828701611eca565b935050602061204786828701611eca565b925050604061205886828701611efd565b9150509250925092565b5f6020828403121561207757612076611e80565b5b5f61208484828501611eca565b91505092915050565b5f60ff82169050919050565b6120a28161208d565b82525050565b5f6020820190506120bb5f830184612099565b92915050565b5f602082840312156120d6576120d5611e80565b5b5f6120e384828501611efd565b91505092915050565b6120f581611ea3565b82525050565b5f60208201905061210e5f8301846120ec565b92915050565b5f806040838503121561212a57612129611e80565b5b5f61213785828601611eca565b925050602061214885828601611eca565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061219657607f821691505b6020821081036121a9576121a8612152565b5b50919050565b7f4e6f7420656e6f75676820706f696e74730000000000000000000000000000005f82015250565b5f6121e3601183611de0565b91506121ee826121af565b602082019050919050565b5f6020820190508181035f830152612210816121d7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61224e82611ede565b915061225983611ede565b925082820390508181111561227157612270612217565b5b92915050565b5f60408201905061228a5f8301856120ec565b6122976020830184611fea565b9392505050565b5f815190506122ac81611f82565b92915050565b5f602082840312156122c7576122c6611e80565b5b5f6122d48482850161229e565b91505092915050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f612311601683611de0565b915061231c826122dd565b602082019050919050565b5f6020820190508181035f83015261233e81612305565b9050919050565b7f54726164696e67206973206e6f7420656e61626c6564000000000000000000005f82015250565b5f612379601683611de0565b915061238482612345565b602082019050919050565b5f6020820190508181035f8301526123a68161236d565b9050919050565b7f436f6e74726163742069732070617573656400000000000000000000000000005f82015250565b5f6123e1601283611de0565b91506123ec826123ad565b602082019050919050565b5f6020820190508181035f83015261240e816123d5565b9050919050565b7f43616e6e6f74207472616e7366657220746f2074686520636f6e7472616374205f8201527f697473656c660000000000000000000000000000000000000000000000000000602082015250565b5f61246f602683611de0565b915061247a82612415565b604082019050919050565b5f6020820190508181035f83015261249c81612463565b9050919050565b7f45786365656473206d6178696d756d207472616e7366657220616d6f756e74005f82015250565b5f6124d7601f83611de0565b91506124e2826124a3565b602082019050919050565b5f6020820190508181035f830152612504816124cb565b9050919050565b5f61251582611ede565b915061252083611ede565b925082820261252e81611ede565b9150828204841483151761254557612544612217565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61258382611ede565b915061258e83611ede565b92508261259e5761259d61254c565b5b828204905092915050565b5f6125b382611ede565b91506125be83611ede565b92508282019050808211156125d6576125d5612217565b5b92915050565b7f45786365656473206d6178696d756d20656e676167656d656e7420706f696e745f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f612636602183611de0565b9150612641826125dc565b604082019050919050565b5f6020820190508181035f8301526126638161262a565b9050919050565b7f436c61696d20636f6f6c646f776e2061637469766500000000000000000000005f82015250565b5f61269e601583611de0565b91506126a98261266a565b602082019050919050565b5f6020820190508181035f8301526126cb81612692565b9050919050565b7f4e6f207265776172647320617661696c61626c650000000000000000000000005f82015250565b5f612706601483611de0565b9150612711826126d2565b602082019050919050565b5f6020820190508181035f830152612733816126fa565b9050919050565b7f496e73756666696369656e742072657761726420737570706c790000000000005f82015250565b5f61276e601a83611de0565b91506127798261273a565b602082019050919050565b5f6020820190508181035f83015261279b81612762565b9050919050565b7f54617820726174652065786365656473206d6178696d756d206c696d697400005f82015250565b5f6127d6601e83611de0565b91506127e1826127a2565b602082019050919050565b5f6020820190508181035f830152612803816127ca565b9050919050565b5f60608201905061281d5f8301866120ec565b61282a6020830185611fea565b6128376040830184611fea565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612873601f83611de0565b915061287e8261283f565b602082019050919050565b5f6020820190508181035f8301526128a081612867565b905091905056fea2646970667358221220938069a2928d47eee461df4dc4df4f5377f8f98d66ffe2e94382aeee082891ad64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x2 PUSH1 0x7 SSTORE PUSH0 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP CALLVALUE DUP1 ISZERO PUSH3 0x48 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLER PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x9 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4765636B6F476F6C640000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x4745434B4F000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH3 0xC7 SWAP2 SWAP1 PUSH3 0x81D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH3 0xD9 SWAP2 SWAP1 PUSH3 0x81D JUMP JUMPDEST POP POP POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x14F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x146 SWAP2 SWAP1 PUSH3 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x160 DUP2 PUSH3 0x248 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP PUSH3 0x1A4 CALLER PUSH1 0x64 PUSH1 0x19 PUSH13 0x54F529CA52576BC6892000000 PUSH3 0x18C SWAP2 SWAP1 PUSH3 0x98C JUMP JUMPDEST PUSH3 0x198 SWAP2 SWAP1 PUSH3 0xA03 JUMP JUMPDEST PUSH3 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x1F3 PUSH20 0x2BFF1B7B4E9F2483B429AFBA11DDB474F552678 PUSH1 0x64 PUSH1 0x19 PUSH13 0x54F529CA52576BC6892000000 PUSH3 0x1DB SWAP2 SWAP1 PUSH3 0x98C JUMP JUMPDEST PUSH3 0x1E7 SWAP2 SWAP1 PUSH3 0xA03 JUMP JUMPDEST PUSH3 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x242 PUSH20 0x78F48F0A33277AC7FF8672F9A71596759CF489D2 PUSH1 0x64 PUSH1 0x32 PUSH13 0x54F529CA52576BC6892000000 PUSH3 0x22A SWAP2 SWAP1 PUSH3 0x98C JUMP JUMPDEST PUSH3 0x236 SWAP2 SWAP1 PUSH3 0xA03 JUMP JUMPDEST PUSH3 0x30B PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xADB JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x37E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x375 SWAP2 SWAP1 PUSH3 0x944 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH3 0x391 PUSH0 DUP4 DUP4 PUSH3 0x395 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x3E9 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH3 0x3DC SWAP2 SWAP1 PUSH3 0xA3A JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x4BA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH3 0x475 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH3 0x46C SWAP4 SWAP3 SWAP2 SWAP1 PUSH3 0xA85 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH3 0x503 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH3 0x54D JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH3 0x5AC SWAP2 SWAP1 PUSH3 0xAC0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH3 0x635 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH3 0x64B JUMPI PUSH3 0x64A PUSH3 0x5F0 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH3 0x6AF PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH3 0x672 JUMP JUMPDEST PUSH3 0x6BB DUP7 DUP4 PUSH3 0x672 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x705 PUSH3 0x6FF PUSH3 0x6F9 DUP5 PUSH3 0x6D3 JUMP JUMPDEST PUSH3 0x6DC JUMP JUMPDEST PUSH3 0x6D3 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x720 DUP4 PUSH3 0x6E5 JUMP JUMPDEST PUSH3 0x738 PUSH3 0x72F DUP3 PUSH3 0x70C JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH3 0x67E JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH3 0x74E PUSH3 0x740 JUMP JUMPDEST PUSH3 0x75B DUP2 DUP5 DUP5 PUSH3 0x715 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH3 0x782 JUMPI PUSH3 0x776 PUSH0 DUP3 PUSH3 0x744 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH3 0x761 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH3 0x7D1 JUMPI PUSH3 0x79B DUP2 PUSH3 0x651 JUMP JUMPDEST PUSH3 0x7A6 DUP5 PUSH3 0x663 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH3 0x7B6 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH3 0x7CE PUSH3 0x7C5 DUP6 PUSH3 0x663 JUMP JUMPDEST DUP4 ADD DUP3 PUSH3 0x760 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x7F3 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH3 0x7D6 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0x80D DUP4 DUP4 PUSH3 0x7E2 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0x828 DUP3 PUSH3 0x5B9 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH3 0x844 JUMPI PUSH3 0x843 PUSH3 0x5C3 JUMP JUMPDEST JUMPDEST PUSH3 0x850 DUP3 SLOAD PUSH3 0x61D JUMP JUMPDEST PUSH3 0x85D DUP3 DUP3 DUP6 PUSH3 0x786 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH3 0x893 JUMPI PUSH0 DUP5 ISZERO PUSH3 0x87E JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH3 0x88A DUP6 DUP3 PUSH3 0x800 JUMP JUMPDEST DUP7 SSTORE POP PUSH3 0x8F9 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH3 0x8A3 DUP7 PUSH3 0x651 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH3 0x8CC JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH3 0x8A5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH3 0x8EC JUMPI DUP5 DUP10 ADD MLOAD PUSH3 0x8E8 PUSH1 0x1F DUP10 AND DUP3 PUSH3 0x7E2 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH3 0x92C DUP3 PUSH3 0x901 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH3 0x93E DUP2 PUSH3 0x920 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0x959 PUSH0 DUP4 ADD DUP5 PUSH3 0x933 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0x998 DUP3 PUSH3 0x6D3 JUMP JUMPDEST SWAP2 POP PUSH3 0x9A5 DUP4 PUSH3 0x6D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH3 0x9B5 DUP2 PUSH3 0x6D3 JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH3 0x9CF JUMPI PUSH3 0x9CE PUSH3 0x95F JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH3 0xA0F DUP3 PUSH3 0x6D3 JUMP JUMPDEST SWAP2 POP PUSH3 0xA1C DUP4 PUSH3 0x6D3 JUMP JUMPDEST SWAP3 POP DUP3 PUSH3 0xA2F JUMPI PUSH3 0xA2E PUSH3 0x9D6 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH3 0xA46 DUP3 PUSH3 0x6D3 JUMP JUMPDEST SWAP2 POP PUSH3 0xA53 DUP4 PUSH3 0x6D3 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH3 0xA6E JUMPI PUSH3 0xA6D PUSH3 0x95F JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH3 0xA7F DUP2 PUSH3 0x6D3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH3 0xA9A PUSH0 DUP4 ADD DUP7 PUSH3 0x933 JUMP JUMPDEST PUSH3 0xAA9 PUSH1 0x20 DUP4 ADD DUP6 PUSH3 0xA74 JUMP JUMPDEST PUSH3 0xAB8 PUSH1 0x40 DUP4 ADD DUP5 PUSH3 0xA74 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH3 0xAD5 PUSH0 DUP4 ADD DUP5 PUSH3 0xA74 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x28DD DUP1 PUSH3 0xAE9 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xFC1B3113 EQ PUSH2 0x62A JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xB88A802F EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xC6D69A30 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xD595C331 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0xD798CBD2 EQ PUSH2 0x574 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x8FA81732 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8FA81732 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xAABD801D EQ PUSH2 0x516 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46E JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x5FD8C710 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x5FD8C710 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x819EDFBC EQ PUSH2 0x420 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x57376198 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A0 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x2576F999 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x340 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x17386E2C EQ PUSH2 0x288 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x226 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2012 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH2 0x997 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A8 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH2 0xA4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH2 0xAF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40A PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x446 PUSH2 0xB14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x450 PUSH2 0xB39 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x476 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B2 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D0 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0xF1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x53A PUSH2 0x1095 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x13BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x572 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57C PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x2114 JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x151D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x628 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x157D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x632 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x657 SWAP1 PUSH2 0x217F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x683 SWAP1 PUSH2 0x217F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6E2 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP PUSH2 0x6EF DUP2 DUP6 DUP6 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x702 PUSH2 0x1628 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x762 PUSH2 0x1628 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D9 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x2244 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40547F371CF37574D1A01EEEB1593F8DB1A3E44286BBA3B92CF2867707C9E473 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8D7 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP PUSH2 0x8E4 DUP6 DUP3 DUP6 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x8EF DUP6 DUP6 DUP6 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x920 PUSH2 0x1628 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x946 CALLER DUP3 PUSH2 0x1831 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x1628 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x9D5 PUSH2 0xBC3 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F3 SWAP3 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA53 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0xA5B PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xBC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAA5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xAAE PUSH2 0x18FF JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFD PUSH2 0x1628 JUMP JUMPDEST PUSH2 0xB06 PUSH0 PUSH2 0x1909 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0xB1C PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB41 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP NUMBER PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB6C PUSH2 0x1628 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH13 0x54F529CA52576BC6892000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC10 SWAP1 PUSH2 0x217F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC3C SWAP1 PUSH2 0x217F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xD7E JUMPI POP PUSH1 0x9 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE04 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE73 SWAP1 PUSH2 0x2485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP6 GT ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC0 SWAP1 PUSH2 0x24ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP8 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST PUSH2 0xEE4 SWAP2 SWAP1 PUSH2 0x2579 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP8 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP PUSH2 0xF07 CALLER PUSH2 0xF01 PUSH2 0xBC3 JUMP JUMPDEST DUP5 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xF11 DUP9 DUP3 PUSH2 0x19CC JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF26 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST GT ISZERO PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40547F371CF37574D1A01EEEB1593F8DB1A3E44286BBA3B92CF2867707C9E473 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DC SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1167 SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH3 0x15180 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x11BD SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F6 SWAP1 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1282 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1279 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1293 PUSH2 0x128E PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST LT ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CB SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x136A PUSH2 0x1363 PUSH2 0xBC3 JUMP JUMPDEST CALLER DUP4 PUSH2 0x1741 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x13C5 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x1409 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1400 SWAP1 PUSH2 0x27EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x141B PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x142C PUSH2 0x1426 PUSH2 0xBC3 JUMP JUMPDEST DUP3 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x1434 PUSH2 0xBC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1479 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1516 DUP3 PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1525 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1585 PUSH2 0x1628 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EC SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15FE DUP2 PUSH2 0x1909 JUMP JUMPDEST POP JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1623 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1630 PUSH2 0x160F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x164E PUSH2 0xBC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16AD JUMPI PUSH2 0x1671 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A4 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x16BA DUP5 DUP5 PUSH2 0x148A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x173B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x172C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1723 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x173A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x19EE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A8 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1821 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1818 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x182C DUP4 DUP4 DUP4 PUSH2 0x1BBD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AC DUP3 PUSH0 DUP4 PUSH2 0x1BBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x18F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18EC SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x19D6 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP PUSH2 0x19E3 DUP2 DUP6 DUP6 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A5E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ACE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC5 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1BB7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1C01 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CDB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C96 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D22 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D6C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DC9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E32 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x1E3C DUP2 DUP6 PUSH2 0x1DE0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x1E55 DUP2 PUSH2 0x1E18 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E78 DUP2 DUP5 PUSH2 0x1E28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAD DUP3 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EBD DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ED8 DUP2 PUSH2 0x1EB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF0 DUP2 PUSH2 0x1EDE JUMP JUMPDEST DUP2 EQ PUSH2 0x1EFA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F0B DUP2 PUSH2 0x1EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F27 JUMPI PUSH2 0x1F26 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F34 DUP6 DUP3 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F45 DUP6 DUP3 DUP7 ADD PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F63 DUP2 PUSH2 0x1F4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7C PUSH0 DUP4 ADD DUP5 PUSH2 0x1F5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F8B DUP2 PUSH2 0x1F4F JUMP JUMPDEST DUP2 EQ PUSH2 0x1F95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FA6 DUP2 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FCF DUP6 DUP3 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF3 DUP2 PUSH2 0x1EDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x200C PUSH0 DUP4 ADD DUP5 PUSH2 0x1FEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2036 DUP7 DUP3 DUP8 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2047 DUP7 DUP3 DUP8 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2058 DUP7 DUP3 DUP8 ADD PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2084 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A2 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20BB PUSH0 DUP4 ADD DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D6 JUMPI PUSH2 0x20D5 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E3 DUP5 DUP3 DUP6 ADD PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F5 DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210E PUSH0 DUP4 ADD DUP5 PUSH2 0x20EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2137 DUP6 DUP3 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2148 DUP6 DUP3 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2196 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21A9 JUMPI PUSH2 0x21A8 PUSH2 0x2152 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820706F696E7473000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E3 PUSH1 0x11 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EE DUP3 PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2210 DUP2 PUSH2 0x21D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x224E DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x2259 DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x228A PUSH0 DUP4 ADD DUP6 PUSH2 0x20EC JUMP JUMPDEST PUSH2 0x2297 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22AC DUP2 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22D4 DUP5 DUP3 DUP6 ADD PUSH2 0x229E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2311 PUSH1 0x16 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x231C DUP3 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x233E DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206973206E6F7420656E61626C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2379 PUSH1 0x16 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2384 DUP3 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A6 DUP2 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23E1 PUSH1 0x12 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x23EC DUP3 PUSH2 0x23AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x240E DUP2 PUSH2 0x23D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2074686520636F6E747261637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x697473656C660000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x246F PUSH1 0x26 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x247A DUP3 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x249C DUP2 PUSH2 0x2463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D207472616E7366657220616D6F756E7400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24D7 PUSH1 0x1F DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E2 DUP3 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2504 DUP2 PUSH2 0x24CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2515 DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x2520 DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x252E DUP2 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2545 JUMPI PUSH2 0x2544 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2583 DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x258E DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x259E JUMPI PUSH2 0x259D PUSH2 0x254C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25B3 DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x25BE DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25D6 JUMPI PUSH2 0x25D5 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20656E676167656D656E7420706F696E74 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2636 PUSH1 0x21 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2641 DUP3 PUSH2 0x25DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2663 DUP2 PUSH2 0x262A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436C61696D20636F6F6C646F776E206163746976650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x269E PUSH1 0x15 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A9 DUP3 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26CB DUP2 PUSH2 0x2692 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2706 PUSH1 0x14 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2711 DUP3 PUSH2 0x26D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2733 DUP2 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420737570706C79000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x276E PUSH1 0x1A DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2779 DUP3 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x279B DUP2 PUSH2 0x2762 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54617820726174652065786365656473206D6178696D756D206C696D69740000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27D6 PUSH1 0x1E DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E1 DUP3 PUSH2 0x27A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2803 DUP2 PUSH2 0x27CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x281D PUSH0 DUP4 ADD DUP7 PUSH2 0x20EC JUMP JUMPDEST PUSH2 0x282A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FEA JUMP JUMPDEST PUSH2 0x2837 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2873 PUSH1 0x1F DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x287E DUP3 PUSH2 0x283F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28A0 DUP2 PUSH2 0x2867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 DUP1 PUSH10 0xA2928D47EEE461DF4DC4 0xDF 0x4F MSTORE8 PUSH24 0xF8F98D66FFE2E94382AEEE082891AD64736F6C6343000818 STOP CALLER ",
							"sourceMap": "362:6586:9:-:0;;;582:1;557:26;;1179:5;1150:34;;;;;;;;;;;;;;;;;;;;1211:5;1190:26;;;;;;;;;;;;;;;;;;;;1223:560;;;;;;;;;;1273:10;1601:113:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1675:5;1667;:13;;;;;;:::i;:::-;;1700:7;1690;:17;;;;;;:::i;:::-;;1601:113;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1716:1:3;1821:7;:22;;;;1360:44:9::2;1366:10;1400:3;1394:2;524:26;1379:17;;;;:::i;:::-;1378:25;;;;:::i;:::-;1360:5;;;:44;;:::i;:::-;1462:76;1468:42;1534:3;1528:2;524:26;1513:17;;;;:::i;:::-;1512:25;;;;:::i;:::-;1462:5;;;:76;;:::i;:::-;1659;1665:42;1731:3;1725:2;524:26;1710:17;;;;:::i;:::-;1709:25;;;;:::i;:::-;1659:5;;;:76;;:::i;:::-;362:6586:::0;;2912:187:0;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;7458:208:4:-;7547:1;7528:21;;:7;:21;;;7524:91;;7601:1;7572:32;;;;;;;;;;;:::i;:::-;;;;;;;;7524:91;7624:35;7640:1;7644:7;7653:5;7624:7;;;:35;;:::i;:::-;7458:208;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:180::-;160:77;157:1;150:88;257:4;254:1;247:15;281:4;278:1;271:15;298:180;346:77;343:1;336:88;443:4;440:1;433:15;467:4;464:1;457:15;484:320;528:6;565:1;559:4;555:12;545:22;;612:1;606:4;602:12;633:18;623:81;;689:4;681:6;677:17;667:27;;623:81;751:2;743:6;740:14;720:18;717:38;714:84;;770:18;;:::i;:::-;714:84;535:269;484:320;;;:::o;810:141::-;859:4;882:3;874:11;;905:3;902:1;895:14;939:4;936:1;926:18;918:26;;810:141;;;:::o;957:93::-;994:6;1041:2;1036;1029:5;1025:14;1021:23;1011:33;;957:93;;;:::o;1056:107::-;1100:8;1150:5;1144:4;1140:16;1119:37;;1056:107;;;;:::o;1169:393::-;1238:6;1288:1;1276:10;1272:18;1311:97;1341:66;1330:9;1311:97;:::i;:::-;1429:39;1459:8;1448:9;1429:39;:::i;:::-;1417:51;;1501:4;1497:9;1490:5;1486:21;1477:30;;1550:4;1540:8;1536:19;1529:5;1526:30;1516:40;;1245:317;;1169:393;;;;;:::o;1568:77::-;1605:7;1634:5;1623:16;;1568:77;;;:::o;1651:60::-;1679:3;1700:5;1693:12;;1651:60;;;:::o;1717:142::-;1767:9;1800:53;1818:34;1827:24;1845:5;1827:24;:::i;:::-;1818:34;:::i;:::-;1800:53;:::i;:::-;1787:66;;1717:142;;;:::o;1865:75::-;1908:3;1929:5;1922:12;;1865:75;;;:::o;1946:269::-;2056:39;2087:7;2056:39;:::i;:::-;2117:91;2166:41;2190:16;2166:41;:::i;:::-;2158:6;2151:4;2145:11;2117:91;:::i;:::-;2111:4;2104:105;2022:193;1946:269;;;:::o;2221:73::-;2266:3;2221:73;:::o;2300:189::-;2377:32;;:::i;:::-;2418:65;2476:6;2468;2462:4;2418:65;:::i;:::-;2353:136;2300:189;;:::o;2495:186::-;2555:120;2572:3;2565:5;2562:14;2555:120;;;2626:39;2663:1;2656:5;2626:39;:::i;:::-;2599:1;2592:5;2588:13;2579:22;;2555:120;;;2495:186;;:::o;2687:543::-;2788:2;2783:3;2780:11;2777:446;;;2822:38;2854:5;2822:38;:::i;:::-;2906:29;2924:10;2906:29;:::i;:::-;2896:8;2892:44;3089:2;3077:10;3074:18;3071:49;;;3110:8;3095:23;;3071:49;3133:80;3189:22;3207:3;3189:22;:::i;:::-;3179:8;3175:37;3162:11;3133:80;:::i;:::-;2792:431;;2777:446;2687:543;;;:::o;3236:117::-;3290:8;3340:5;3334:4;3330:16;3309:37;;3236:117;;;;:::o;3359:169::-;3403:6;3436:51;3484:1;3480:6;3472:5;3469:1;3465:13;3436:51;:::i;:::-;3432:56;3517:4;3511;3507:15;3497:25;;3410:118;3359:169;;;;:::o;3533:295::-;3609:4;3755:29;3780:3;3774:4;3755:29;:::i;:::-;3747:37;;3817:3;3814:1;3810:11;3804:4;3801:21;3793:29;;3533:295;;;;:::o;3833:1395::-;3950:37;3983:3;3950:37;:::i;:::-;4052:18;4044:6;4041:30;4038:56;;;4074:18;;:::i;:::-;4038:56;4118:38;4150:4;4144:11;4118:38;:::i;:::-;4203:67;4263:6;4255;4249:4;4203:67;:::i;:::-;4297:1;4321:4;4308:17;;4353:2;4345:6;4342:14;4370:1;4365:618;;;;5027:1;5044:6;5041:77;;;5093:9;5088:3;5084:19;5078:26;5069:35;;5041:77;5144:67;5204:6;5197:5;5144:67;:::i;:::-;5138:4;5131:81;5000:222;4335:887;;4365:618;4417:4;4413:9;4405:6;4401:22;4451:37;4483:4;4451:37;:::i;:::-;4510:1;4524:208;4538:7;4535:1;4532:14;4524:208;;;4617:9;4612:3;4608:19;4602:26;4594:6;4587:42;4668:1;4660:6;4656:14;4646:24;;4715:2;4704:9;4700:18;4687:31;;4561:4;4558:1;4554:12;4549:17;;4524:208;;;4760:6;4751:7;4748:19;4745:179;;;4818:9;4813:3;4809:19;4803:26;4861:48;4903:4;4895:6;4891:17;4880:9;4861:48;:::i;:::-;4853:6;4846:64;4768:156;4745:179;4970:1;4966;4958:6;4954:14;4950:22;4944:4;4937:36;4372:611;;;4335:887;;3925:1303;;;3833:1395;;:::o;5234:126::-;5271:7;5311:42;5304:5;5300:54;5289:65;;5234:126;;;:::o;5366:96::-;5403:7;5432:24;5450:5;5432:24;:::i;:::-;5421:35;;5366:96;;;:::o;5468:118::-;5555:24;5573:5;5555:24;:::i;:::-;5550:3;5543:37;5468:118;;:::o;5592:222::-;5685:4;5723:2;5712:9;5708:18;5700:26;;5736:71;5804:1;5793:9;5789:17;5780:6;5736:71;:::i;:::-;5592:222;;;;:::o;5820:180::-;5868:77;5865:1;5858:88;5965:4;5962:1;5955:15;5989:4;5986:1;5979:15;6006:410;6046:7;6069:20;6087:1;6069:20;:::i;:::-;6064:25;;6103:20;6121:1;6103:20;:::i;:::-;6098:25;;6158:1;6155;6151:9;6180:30;6198:11;6180:30;:::i;:::-;6169:41;;6359:1;6350:7;6346:15;6343:1;6340:22;6320:1;6313:9;6293:83;6270:139;;6389:18;;:::i;:::-;6270:139;6054:362;6006:410;;;;:::o;6422:180::-;6470:77;6467:1;6460:88;6567:4;6564:1;6557:15;6591:4;6588:1;6581:15;6608:185;6648:1;6665:20;6683:1;6665:20;:::i;:::-;6660:25;;6699:20;6717:1;6699:20;:::i;:::-;6694:25;;6738:1;6728:35;;6743:18;;:::i;:::-;6728:35;6785:1;6782;6778:9;6773:14;;6608:185;;;;:::o;6799:191::-;6839:3;6858:20;6876:1;6858:20;:::i;:::-;6853:25;;6892:20;6910:1;6892:20;:::i;:::-;6887:25;;6935:1;6932;6928:9;6921:16;;6956:3;6953:1;6950:10;6947:36;;;6963:18;;:::i;:::-;6947:36;6799:191;;;;:::o;6996:118::-;7083:24;7101:5;7083:24;:::i;:::-;7078:3;7071:37;6996:118;;:::o;7120:442::-;7269:4;7307:2;7296:9;7292:18;7284:26;;7320:71;7388:1;7377:9;7373:17;7364:6;7320:71;:::i;:::-;7401:72;7469:2;7458:9;7454:18;7445:6;7401:72;:::i;:::-;7483;7551:2;7540:9;7536:18;7527:6;7483:72;:::i;:::-;7120:442;;;;;;:::o;7568:222::-;7661:4;7699:2;7688:9;7684:18;7676:26;;7712:71;7780:1;7769:9;7765:17;7756:6;7712:71;:::i;:::-;7568:222;;;;:::o;362:6586:9:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_ENGAGEMENT_POINTS_1188": {
									"entryPoint": 2830,
									"id": 1188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TAX_RATE_1178": {
									"entryPoint": 3051,
									"id": 1178,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@MAX_TRANSFER_AMOUNT_1185": {
									"entryPoint": 5633,
									"id": 1185,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@TOTAL_SUPPLY_1172": {
									"entryPoint": 3056,
									"id": 1172,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_approve_863": {
									"entryPoint": 5654,
									"id": 863,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_923": {
									"entryPoint": 6638,
									"id": 923,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_845": {
									"entryPoint": 6193,
									"id": 845,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 5672,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_1134": {
									"entryPoint": 5647,
									"id": 1134,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_445": {
									"entryPoint": 6399,
									"id": 445,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_437": {
									"entryPoint": 6320,
									"id": 437,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_spendAllowance_971": {
									"entryPoint": 5807,
									"id": 971,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6409,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transfer_702": {
									"entryPoint": 5953,
									"id": 702,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_779": {
									"entryPoint": 7101,
									"id": 779,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@addToWhitelist_1373": {
									"entryPoint": 5405,
									"id": 1373,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@allowance_599": {
									"entryPoint": 5258,
									"id": 599,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_623": {
									"entryPoint": 1752,
									"id": 623,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_558": {
									"entryPoint": 2736,
									"id": 558,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@balance_1649": {
									"entryPoint": 5388,
									"id": 1649,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burnSupply_1504": {
									"entryPoint": 5139,
									"id": 1504,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@burn_1484": {
									"entryPoint": 2364,
									"id": 1484,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimReward_1637": {
									"entryPoint": 4245,
									"id": 1637,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@decimals_536": {
									"entryPoint": 2320,
									"id": 536,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@deductEngagementPoints_1570": {
									"entryPoint": 1882,
									"id": 1570,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@enableTrading_1359": {
									"entryPoint": 2873,
									"id": 1359,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@engagementPoints_1200": {
									"entryPoint": 2299,
									"id": 1200,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@name_518": {
									"entryPoint": 1608,
									"id": 518,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 3011,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_1699": {
									"entryPoint": 2836,
									"id": 1699,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1212": {
									"entryPoint": 2616,
									"id": 1212,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@removeFromWhitelist_1387": {
									"entryPoint": 2916,
									"id": 1387,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 2805,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@rescueTokens_1689": {
									"entryPoint": 2473,
									"id": 1689,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setBlacklist_1271": {
									"entryPoint": 1786,
									"id": 1271,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@setTaxRate_1406": {
									"entryPoint": 5053,
									"id": 1406,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@symbol_527": {
									"entryPoint": 3073,
									"id": 527,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@taxRate_1175": {
									"entryPoint": 2824,
									"id": 1175,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@totalSupply_545": {
									"entryPoint": 2244,
									"id": 545,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@tradingEnabled_1209": {
									"entryPoint": 2455,
									"id": 1209,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@tradingStartBlock_1206": {
									"entryPoint": 5252,
									"id": 1206,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferFrom_655": {
									"entryPoint": 2253,
									"id": 655,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5501,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transfer_1466": {
									"entryPoint": 3217,
									"id": 1466,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@transfer_582": {
									"entryPoint": 6604,
									"id": 582,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@unpause_1709": {
									"entryPoint": 2328,
									"id": 1709,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateEngagementPoints_1538": {
									"entryPoint": 3870,
									"id": 1538,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@withdrawBalance_1670": {
									"entryPoint": 2635,
									"id": 1670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 7882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool": {
									"entryPoint": 8088,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 8862,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 7933,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 8468,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 8210,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bool": {
									"entryPoint": 8108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7953,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 8385,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8428,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8026,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 7720,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8663,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9069,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10082,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9874,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9419,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 8965,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10343,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9315,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 9770,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 10186,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 8170,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8345,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8443,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8823,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10250,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8041,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8697,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9103,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10116,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9908,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10012,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9453,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8999,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9804,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 10220,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 8185,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8360,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 7648,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9641,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 9593,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 9483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8772,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 7843,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8015,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 7812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 7902,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8333,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 7664,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 8575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 9548,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 8530,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 7808,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 7704,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238": {
									"entryPoint": 8623,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3": {
									"entryPoint": 9029,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a": {
									"entryPoint": 10042,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32": {
									"entryPoint": 9834,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040": {
									"entryPoint": 9938,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef": {
									"entryPoint": 9379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53": {
									"entryPoint": 8925,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d": {
									"entryPoint": 9133,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 10303,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388": {
									"entryPoint": 9237,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a": {
									"entryPoint": 9692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978": {
									"entryPoint": 10146,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 7860,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 8066,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 7911,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:22074:10",
										"nodeType": "YulBlock",
										"src": "0:22074:10",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:10",
													"nodeType": "YulBlock",
													"src": "66:40:10",
													"statements": [
														{
															"nativeSrc": "77:22:10",
															"nodeType": "YulAssignment",
															"src": "77:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:10"
																},
																"nativeSrc": "87:12:10",
																"nodeType": "YulFunctionCall",
																"src": "87:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:10"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:10",
														"nodeType": "YulTypedName",
														"src": "49:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:10",
														"nodeType": "YulTypedName",
														"src": "59:6:10",
														"type": ""
													}
												],
												"src": "7:99:10"
											},
											{
												"body": {
													"nativeSrc": "208:73:10",
													"nodeType": "YulBlock",
													"src": "208:73:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:10"
																},
																"nativeSrc": "218:19:10",
																"nodeType": "YulFunctionCall",
																"src": "218:19:10"
															},
															"nativeSrc": "218:19:10",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:10"
														},
														{
															"nativeSrc": "246:29:10",
															"nodeType": "YulAssignment",
															"src": "246:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:10",
																		"nodeType": "YulLiteral",
																		"src": "270:4:10",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:10"
																},
																"nativeSrc": "261:14:10",
																"nodeType": "YulFunctionCall",
																"src": "261:14:10"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:10",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:10"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:10",
														"nodeType": "YulTypedName",
														"src": "180:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:10",
														"nodeType": "YulTypedName",
														"src": "185:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:10",
														"nodeType": "YulTypedName",
														"src": "196:11:10",
														"type": ""
													}
												],
												"src": "112:169:10"
											},
											{
												"body": {
													"nativeSrc": "349:184:10",
													"nodeType": "YulBlock",
													"src": "349:184:10",
													"statements": [
														{
															"nativeSrc": "359:10:10",
															"nodeType": "YulVariableDeclaration",
															"src": "359:10:10",
															"value": {
																"kind": "number",
																"nativeSrc": "368:1:10",
																"nodeType": "YulLiteral",
																"src": "368:1:10",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "i",
																	"nativeSrc": "363:1:10",
																	"nodeType": "YulTypedName",
																	"src": "363:1:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "428:63:10",
																"nodeType": "YulBlock",
																"src": "428:63:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"name": "dst",
																							"nativeSrc": "453:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "453:3:10"
																						},
																						{
																							"name": "i",
																							"nativeSrc": "458:1:10",
																							"nodeType": "YulIdentifier",
																							"src": "458:1:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "449:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "449:3:10"
																					},
																					"nativeSrc": "449:11:10",
																					"nodeType": "YulFunctionCall",
																					"src": "449:11:10"
																				},
																				{
																					"arguments": [
																						{
																							"arguments": [
																								{
																									"name": "src",
																									"nativeSrc": "472:3:10",
																									"nodeType": "YulIdentifier",
																									"src": "472:3:10"
																								},
																								{
																									"name": "i",
																									"nativeSrc": "477:1:10",
																									"nodeType": "YulIdentifier",
																									"src": "477:1:10"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "468:3:10",
																								"nodeType": "YulIdentifier",
																								"src": "468:3:10"
																							},
																							"nativeSrc": "468:11:10",
																							"nodeType": "YulFunctionCall",
																							"src": "468:11:10"
																						}
																					],
																					"functionName": {
																						"name": "mload",
																						"nativeSrc": "462:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "462:5:10"
																					},
																					"nativeSrc": "462:18:10",
																					"nodeType": "YulFunctionCall",
																					"src": "462:18:10"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "442:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "442:6:10"
																			},
																			"nativeSrc": "442:39:10",
																			"nodeType": "YulFunctionCall",
																			"src": "442:39:10"
																		},
																		"nativeSrc": "442:39:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "442:39:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nativeSrc": "389:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "389:1:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "392:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "392:6:10"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "386:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "386:2:10"
																},
																"nativeSrc": "386:13:10",
																"nodeType": "YulFunctionCall",
																"src": "386:13:10"
															},
															"nativeSrc": "378:113:10",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "400:19:10",
																"nodeType": "YulBlock",
																"src": "400:19:10",
																"statements": [
																	{
																		"nativeSrc": "402:15:10",
																		"nodeType": "YulAssignment",
																		"src": "402:15:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nativeSrc": "411:1:10",
																					"nodeType": "YulIdentifier",
																					"src": "411:1:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "414:2:10",
																					"nodeType": "YulLiteral",
																					"src": "414:2:10",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "407:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "407:3:10"
																			},
																			"nativeSrc": "407:10:10",
																			"nodeType": "YulFunctionCall",
																			"src": "407:10:10"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nativeSrc": "402:1:10",
																				"nodeType": "YulIdentifier",
																				"src": "402:1:10"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "382:3:10",
																"nodeType": "YulBlock",
																"src": "382:3:10",
																"statements": []
															},
															"src": "378:113:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "511:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "511:3:10"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "516:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "516:6:10"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "507:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "507:3:10"
																		},
																		"nativeSrc": "507:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "507:16:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "525:1:10",
																		"nodeType": "YulLiteral",
																		"src": "525:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "500:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "500:6:10"
																},
																"nativeSrc": "500:27:10",
																"nodeType": "YulFunctionCall",
																"src": "500:27:10"
															},
															"nativeSrc": "500:27:10",
															"nodeType": "YulExpressionStatement",
															"src": "500:27:10"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:246:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:10",
														"nodeType": "YulTypedName",
														"src": "331:3:10",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:10",
														"nodeType": "YulTypedName",
														"src": "336:3:10",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:10",
														"nodeType": "YulTypedName",
														"src": "341:6:10",
														"type": ""
													}
												],
												"src": "287:246:10"
											},
											{
												"body": {
													"nativeSrc": "587:54:10",
													"nodeType": "YulBlock",
													"src": "587:54:10",
													"statements": [
														{
															"nativeSrc": "597:38:10",
															"nodeType": "YulAssignment",
															"src": "597:38:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "615:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "615:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "622:2:10",
																				"nodeType": "YulLiteral",
																				"src": "622:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "611:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "611:3:10"
																		},
																		"nativeSrc": "611:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "611:14:10"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "631:2:10",
																				"nodeType": "YulLiteral",
																				"src": "631:2:10",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "627:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "627:3:10"
																		},
																		"nativeSrc": "627:7:10",
																		"nodeType": "YulFunctionCall",
																		"src": "627:7:10"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "607:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "607:3:10"
																},
																"nativeSrc": "607:28:10",
																"nodeType": "YulFunctionCall",
																"src": "607:28:10"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "597:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:10"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "539:102:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "570:5:10",
														"nodeType": "YulTypedName",
														"src": "570:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "580:6:10",
														"nodeType": "YulTypedName",
														"src": "580:6:10",
														"type": ""
													}
												],
												"src": "539:102:10"
											},
											{
												"body": {
													"nativeSrc": "739:285:10",
													"nodeType": "YulBlock",
													"src": "739:285:10",
													"statements": [
														{
															"nativeSrc": "749:53:10",
															"nodeType": "YulVariableDeclaration",
															"src": "749:53:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "796:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "796:5:10"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "763:32:10",
																	"nodeType": "YulIdentifier",
																	"src": "763:32:10"
																},
																"nativeSrc": "763:39:10",
																"nodeType": "YulFunctionCall",
																"src": "763:39:10"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "753:6:10",
																	"nodeType": "YulTypedName",
																	"src": "753:6:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "811:78:10",
															"nodeType": "YulAssignment",
															"src": "811:78:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "877:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "877:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "882:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "882:6:10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "818:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "818:58:10"
																},
																"nativeSrc": "818:71:10",
																"nodeType": "YulFunctionCall",
																"src": "818:71:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "811:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "811:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "937:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "937:5:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "944:4:10",
																				"nodeType": "YulLiteral",
																				"src": "944:4:10",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "933:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "933:3:10"
																		},
																		"nativeSrc": "933:16:10",
																		"nodeType": "YulFunctionCall",
																		"src": "933:16:10"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "951:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "951:3:10"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "956:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "956:6:10"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "898:34:10",
																	"nodeType": "YulIdentifier",
																	"src": "898:34:10"
																},
																"nativeSrc": "898:65:10",
																"nodeType": "YulFunctionCall",
																"src": "898:65:10"
															},
															"nativeSrc": "898:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "898:65:10"
														},
														{
															"nativeSrc": "972:46:10",
															"nodeType": "YulAssignment",
															"src": "972:46:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "983:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "983:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1010:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:10"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "988:21:10",
																			"nodeType": "YulIdentifier",
																			"src": "988:21:10"
																		},
																		"nativeSrc": "988:29:10",
																		"nodeType": "YulFunctionCall",
																		"src": "988:29:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "979:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "979:3:10"
																},
																"nativeSrc": "979:39:10",
																"nodeType": "YulFunctionCall",
																"src": "979:39:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "972:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "972:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "647:377:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "720:5:10",
														"nodeType": "YulTypedName",
														"src": "720:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "727:3:10",
														"nodeType": "YulTypedName",
														"src": "727:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "735:3:10",
														"nodeType": "YulTypedName",
														"src": "735:3:10",
														"type": ""
													}
												],
												"src": "647:377:10"
											},
											{
												"body": {
													"nativeSrc": "1148:195:10",
													"nodeType": "YulBlock",
													"src": "1148:195:10",
													"statements": [
														{
															"nativeSrc": "1158:26:10",
															"nodeType": "YulAssignment",
															"src": "1158:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1170:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "1170:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1181:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1181:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1166:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1166:3:10"
																},
																"nativeSrc": "1166:18:10",
																"nodeType": "YulFunctionCall",
																"src": "1166:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1158:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1158:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1205:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1205:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1216:1:10",
																				"nodeType": "YulLiteral",
																				"src": "1216:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1201:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1201:3:10"
																		},
																		"nativeSrc": "1201:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1201:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1224:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "1224:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1230:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "1230:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1220:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "1220:3:10"
																		},
																		"nativeSrc": "1220:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1220:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1194:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1194:6:10"
																},
																"nativeSrc": "1194:47:10",
																"nodeType": "YulFunctionCall",
																"src": "1194:47:10"
															},
															"nativeSrc": "1194:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "1194:47:10"
														},
														{
															"nativeSrc": "1250:86:10",
															"nodeType": "YulAssignment",
															"src": "1250:86:10",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1322:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "1322:6:10"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1331:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "1331:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1258:63:10",
																	"nodeType": "YulIdentifier",
																	"src": "1258:63:10"
																},
																"nativeSrc": "1258:78:10",
																"nodeType": "YulFunctionCall",
																"src": "1258:78:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1250:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "1250:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "1030:313:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1120:9:10",
														"nodeType": "YulTypedName",
														"src": "1120:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1132:6:10",
														"nodeType": "YulTypedName",
														"src": "1132:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1143:4:10",
														"nodeType": "YulTypedName",
														"src": "1143:4:10",
														"type": ""
													}
												],
												"src": "1030:313:10"
											},
											{
												"body": {
													"nativeSrc": "1389:35:10",
													"nodeType": "YulBlock",
													"src": "1389:35:10",
													"statements": [
														{
															"nativeSrc": "1399:19:10",
															"nodeType": "YulAssignment",
															"src": "1399:19:10",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1415:2:10",
																		"nodeType": "YulLiteral",
																		"src": "1415:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1409:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "1409:5:10"
																},
																"nativeSrc": "1409:9:10",
																"nodeType": "YulFunctionCall",
																"src": "1409:9:10"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1399:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1399:6:10"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1349:75:10",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1382:6:10",
														"nodeType": "YulTypedName",
														"src": "1382:6:10",
														"type": ""
													}
												],
												"src": "1349:75:10"
											},
											{
												"body": {
													"nativeSrc": "1519:28:10",
													"nodeType": "YulBlock",
													"src": "1519:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1536:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1536:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1539:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1539:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1529:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1529:6:10"
																},
																"nativeSrc": "1529:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1529:12:10"
															},
															"nativeSrc": "1529:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1529:12:10"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1430:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1430:117:10"
											},
											{
												"body": {
													"nativeSrc": "1642:28:10",
													"nodeType": "YulBlock",
													"src": "1642:28:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1659:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1659:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1662:1:10",
																		"nodeType": "YulLiteral",
																		"src": "1662:1:10",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1652:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1652:6:10"
																},
																"nativeSrc": "1652:12:10",
																"nodeType": "YulFunctionCall",
																"src": "1652:12:10"
															},
															"nativeSrc": "1652:12:10",
															"nodeType": "YulExpressionStatement",
															"src": "1652:12:10"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1553:117:10",
												"nodeType": "YulFunctionDefinition",
												"src": "1553:117:10"
											},
											{
												"body": {
													"nativeSrc": "1721:81:10",
													"nodeType": "YulBlock",
													"src": "1721:81:10",
													"statements": [
														{
															"nativeSrc": "1731:65:10",
															"nodeType": "YulAssignment",
															"src": "1731:65:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1746:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1746:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1753:42:10",
																		"nodeType": "YulLiteral",
																		"src": "1753:42:10",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1742:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "1742:3:10"
																},
																"nativeSrc": "1742:54:10",
																"nodeType": "YulFunctionCall",
																"src": "1742:54:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1731:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1731:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1676:126:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1703:5:10",
														"nodeType": "YulTypedName",
														"src": "1703:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1713:7:10",
														"nodeType": "YulTypedName",
														"src": "1713:7:10",
														"type": ""
													}
												],
												"src": "1676:126:10"
											},
											{
												"body": {
													"nativeSrc": "1853:51:10",
													"nodeType": "YulBlock",
													"src": "1853:51:10",
													"statements": [
														{
															"nativeSrc": "1863:35:10",
															"nodeType": "YulAssignment",
															"src": "1863:35:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1874:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "1874:17:10"
																},
																"nativeSrc": "1874:24:10",
																"nodeType": "YulFunctionCall",
																"src": "1874:24:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1863:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "1863:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1808:96:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1835:5:10",
														"nodeType": "YulTypedName",
														"src": "1835:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1845:7:10",
														"nodeType": "YulTypedName",
														"src": "1845:7:10",
														"type": ""
													}
												],
												"src": "1808:96:10"
											},
											{
												"body": {
													"nativeSrc": "1953:79:10",
													"nodeType": "YulBlock",
													"src": "1953:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2010:16:10",
																"nodeType": "YulBlock",
																"src": "2010:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2019:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2019:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2022:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2022:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2012:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2012:6:10"
																			},
																			"nativeSrc": "2012:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2012:12:10"
																		},
																		"nativeSrc": "2012:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2012:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1976:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "1976:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2001:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2001:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1983:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "1983:17:10"
																				},
																				"nativeSrc": "1983:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "1983:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1973:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "1973:2:10"
																		},
																		"nativeSrc": "1973:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "1973:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1966:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "1966:6:10"
																},
																"nativeSrc": "1966:43:10",
																"nodeType": "YulFunctionCall",
																"src": "1966:43:10"
															},
															"nativeSrc": "1963:63:10",
															"nodeType": "YulIf",
															"src": "1963:63:10"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1910:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1946:5:10",
														"nodeType": "YulTypedName",
														"src": "1946:5:10",
														"type": ""
													}
												],
												"src": "1910:122:10"
											},
											{
												"body": {
													"nativeSrc": "2090:87:10",
													"nodeType": "YulBlock",
													"src": "2090:87:10",
													"statements": [
														{
															"nativeSrc": "2100:29:10",
															"nodeType": "YulAssignment",
															"src": "2100:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2122:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2122:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2109:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2109:12:10"
																},
																"nativeSrc": "2109:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2109:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2100:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2100:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2165:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2165:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2138:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2138:26:10"
																},
																"nativeSrc": "2138:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2138:33:10"
															},
															"nativeSrc": "2138:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2138:33:10"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "2038:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2068:6:10",
														"nodeType": "YulTypedName",
														"src": "2068:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2076:3:10",
														"nodeType": "YulTypedName",
														"src": "2076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2084:5:10",
														"nodeType": "YulTypedName",
														"src": "2084:5:10",
														"type": ""
													}
												],
												"src": "2038:139:10"
											},
											{
												"body": {
													"nativeSrc": "2228:32:10",
													"nodeType": "YulBlock",
													"src": "2228:32:10",
													"statements": [
														{
															"nativeSrc": "2238:16:10",
															"nodeType": "YulAssignment",
															"src": "2238:16:10",
															"value": {
																"name": "value",
																"nativeSrc": "2249:5:10",
																"nodeType": "YulIdentifier",
																"src": "2249:5:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2238:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "2238:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2183:77:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2210:5:10",
														"nodeType": "YulTypedName",
														"src": "2210:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2220:7:10",
														"nodeType": "YulTypedName",
														"src": "2220:7:10",
														"type": ""
													}
												],
												"src": "2183:77:10"
											},
											{
												"body": {
													"nativeSrc": "2309:79:10",
													"nodeType": "YulBlock",
													"src": "2309:79:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2366:16:10",
																"nodeType": "YulBlock",
																"src": "2366:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2375:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2375:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2378:1:10",
																					"nodeType": "YulLiteral",
																					"src": "2378:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2368:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "2368:6:10"
																			},
																			"nativeSrc": "2368:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2368:12:10"
																		},
																		"nativeSrc": "2368:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2368:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2332:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "2332:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2357:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "2357:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2339:17:10",
																					"nodeType": "YulIdentifier",
																					"src": "2339:17:10"
																				},
																				"nativeSrc": "2339:24:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2339:24:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2329:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "2329:2:10"
																		},
																		"nativeSrc": "2329:35:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2329:35:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2322:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "2322:6:10"
																},
																"nativeSrc": "2322:43:10",
																"nodeType": "YulFunctionCall",
																"src": "2322:43:10"
															},
															"nativeSrc": "2319:63:10",
															"nodeType": "YulIf",
															"src": "2319:63:10"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2266:122:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2302:5:10",
														"nodeType": "YulTypedName",
														"src": "2302:5:10",
														"type": ""
													}
												],
												"src": "2266:122:10"
											},
											{
												"body": {
													"nativeSrc": "2446:87:10",
													"nodeType": "YulBlock",
													"src": "2446:87:10",
													"statements": [
														{
															"nativeSrc": "2456:29:10",
															"nodeType": "YulAssignment",
															"src": "2456:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2478:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "2478:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2465:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "2465:12:10"
																},
																"nativeSrc": "2465:20:10",
																"nodeType": "YulFunctionCall",
																"src": "2465:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2456:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "2456:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2521:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "2521:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2494:26:10",
																	"nodeType": "YulIdentifier",
																	"src": "2494:26:10"
																},
																"nativeSrc": "2494:33:10",
																"nodeType": "YulFunctionCall",
																"src": "2494:33:10"
															},
															"nativeSrc": "2494:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "2494:33:10"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2394:139:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2424:6:10",
														"nodeType": "YulTypedName",
														"src": "2424:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2432:3:10",
														"nodeType": "YulTypedName",
														"src": "2432:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2440:5:10",
														"nodeType": "YulTypedName",
														"src": "2440:5:10",
														"type": ""
													}
												],
												"src": "2394:139:10"
											},
											{
												"body": {
													"nativeSrc": "2622:391:10",
													"nodeType": "YulBlock",
													"src": "2622:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "2668:83:10",
																"nodeType": "YulBlock",
																"src": "2668:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2670:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "2670:77:10"
																			},
																			"nativeSrc": "2670:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "2670:79:10"
																		},
																		"nativeSrc": "2670:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "2670:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2643:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2643:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2652:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "2652:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2639:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "2639:3:10"
																		},
																		"nativeSrc": "2639:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2639:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2664:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2664:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2635:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "2635:3:10"
																},
																"nativeSrc": "2635:32:10",
																"nodeType": "YulFunctionCall",
																"src": "2635:32:10"
															},
															"nativeSrc": "2632:119:10",
															"nodeType": "YulIf",
															"src": "2632:119:10"
														},
														{
															"nativeSrc": "2761:117:10",
															"nodeType": "YulBlock",
															"src": "2761:117:10",
															"statements": [
																{
																	"nativeSrc": "2776:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2776:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2790:1:10",
																		"nodeType": "YulLiteral",
																		"src": "2790:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2780:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2780:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2805:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2805:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2840:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2840:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2851:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2851:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2836:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2836:3:10"
																				},
																				"nativeSrc": "2836:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2836:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2860:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2860:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2815:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2815:20:10"
																		},
																		"nativeSrc": "2815:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2815:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2805:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2805:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2888:118:10",
															"nodeType": "YulBlock",
															"src": "2888:118:10",
															"statements": [
																{
																	"nativeSrc": "2903:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2903:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2917:2:10",
																		"nodeType": "YulLiteral",
																		"src": "2917:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2907:6:10",
																			"nodeType": "YulTypedName",
																			"src": "2907:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2933:63:10",
																	"nodeType": "YulAssignment",
																	"src": "2933:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2968:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "2968:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2979:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "2979:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2964:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "2964:3:10"
																				},
																				"nativeSrc": "2964:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "2964:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2988:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "2988:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2943:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "2943:20:10"
																		},
																		"nativeSrc": "2943:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "2943:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2933:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "2933:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2539:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2584:9:10",
														"nodeType": "YulTypedName",
														"src": "2584:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2595:7:10",
														"nodeType": "YulTypedName",
														"src": "2595:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2607:6:10",
														"nodeType": "YulTypedName",
														"src": "2607:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2615:6:10",
														"nodeType": "YulTypedName",
														"src": "2615:6:10",
														"type": ""
													}
												],
												"src": "2539:474:10"
											},
											{
												"body": {
													"nativeSrc": "3061:48:10",
													"nodeType": "YulBlock",
													"src": "3061:48:10",
													"statements": [
														{
															"nativeSrc": "3071:32:10",
															"nodeType": "YulAssignment",
															"src": "3071:32:10",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3096:5:10"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "3089:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3089:6:10"
																		},
																		"nativeSrc": "3089:13:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:13:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3082:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3082:6:10"
																},
																"nativeSrc": "3082:21:10",
																"nodeType": "YulFunctionCall",
																"src": "3082:21:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "3071:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "3071:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "3019:90:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3043:5:10",
														"nodeType": "YulTypedName",
														"src": "3043:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "3053:7:10",
														"nodeType": "YulTypedName",
														"src": "3053:7:10",
														"type": ""
													}
												],
												"src": "3019:90:10"
											},
											{
												"body": {
													"nativeSrc": "3174:50:10",
													"nodeType": "YulBlock",
													"src": "3174:50:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3191:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "3191:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3211:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3211:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3196:14:10",
																			"nodeType": "YulIdentifier",
																			"src": "3196:14:10"
																		},
																		"nativeSrc": "3196:21:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3196:21:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3184:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3184:6:10"
																},
																"nativeSrc": "3184:34:10",
																"nodeType": "YulFunctionCall",
																"src": "3184:34:10"
															},
															"nativeSrc": "3184:34:10",
															"nodeType": "YulExpressionStatement",
															"src": "3184:34:10"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3115:109:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3162:5:10",
														"nodeType": "YulTypedName",
														"src": "3162:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3169:3:10",
														"nodeType": "YulTypedName",
														"src": "3169:3:10",
														"type": ""
													}
												],
												"src": "3115:109:10"
											},
											{
												"body": {
													"nativeSrc": "3322:118:10",
													"nodeType": "YulBlock",
													"src": "3322:118:10",
													"statements": [
														{
															"nativeSrc": "3332:26:10",
															"nodeType": "YulAssignment",
															"src": "3332:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3344:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3355:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3340:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:10"
																},
																"nativeSrc": "3340:18:10",
																"nodeType": "YulFunctionCall",
																"src": "3340:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3332:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3406:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3406:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3419:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3419:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3430:1:10",
																				"nodeType": "YulLiteral",
																				"src": "3430:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3415:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:10"
																		},
																		"nativeSrc": "3415:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3368:37:10",
																	"nodeType": "YulIdentifier",
																	"src": "3368:37:10"
																},
																"nativeSrc": "3368:65:10",
																"nodeType": "YulFunctionCall",
																"src": "3368:65:10"
															},
															"nativeSrc": "3368:65:10",
															"nodeType": "YulExpressionStatement",
															"src": "3368:65:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3230:210:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3294:9:10",
														"nodeType": "YulTypedName",
														"src": "3294:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3306:6:10",
														"nodeType": "YulTypedName",
														"src": "3306:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3317:4:10",
														"nodeType": "YulTypedName",
														"src": "3317:4:10",
														"type": ""
													}
												],
												"src": "3230:210:10"
											},
											{
												"body": {
													"nativeSrc": "3486:76:10",
													"nodeType": "YulBlock",
													"src": "3486:76:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3540:16:10",
																"nodeType": "YulBlock",
																"src": "3540:16:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3549:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3549:1:10",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3552:1:10",
																					"nodeType": "YulLiteral",
																					"src": "3552:1:10",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3542:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "3542:6:10"
																			},
																			"nativeSrc": "3542:12:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3542:12:10"
																		},
																		"nativeSrc": "3542:12:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3542:12:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3509:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "3509:5:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3531:5:10",
																						"nodeType": "YulIdentifier",
																						"src": "3531:5:10"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "3516:14:10",
																					"nodeType": "YulIdentifier",
																					"src": "3516:14:10"
																				},
																				"nativeSrc": "3516:21:10",
																				"nodeType": "YulFunctionCall",
																				"src": "3516:21:10"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "3506:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "3506:2:10"
																		},
																		"nativeSrc": "3506:32:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3506:32:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3499:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "3499:6:10"
																},
																"nativeSrc": "3499:40:10",
																"nodeType": "YulFunctionCall",
																"src": "3499:40:10"
															},
															"nativeSrc": "3496:60:10",
															"nodeType": "YulIf",
															"src": "3496:60:10"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "3446:116:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3479:5:10",
														"nodeType": "YulTypedName",
														"src": "3479:5:10",
														"type": ""
													}
												],
												"src": "3446:116:10"
											},
											{
												"body": {
													"nativeSrc": "3617:84:10",
													"nodeType": "YulBlock",
													"src": "3617:84:10",
													"statements": [
														{
															"nativeSrc": "3627:29:10",
															"nodeType": "YulAssignment",
															"src": "3627:29:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3649:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "3649:6:10"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3636:12:10",
																	"nodeType": "YulIdentifier",
																	"src": "3636:12:10"
																},
																"nativeSrc": "3636:20:10",
																"nodeType": "YulFunctionCall",
																"src": "3636:20:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3627:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "3627:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3689:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "3689:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "3665:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "3665:23:10"
																},
																"nativeSrc": "3665:30:10",
																"nodeType": "YulFunctionCall",
																"src": "3665:30:10"
															},
															"nativeSrc": "3665:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "3665:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool",
												"nativeSrc": "3568:133:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "3595:6:10",
														"nodeType": "YulTypedName",
														"src": "3595:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3603:3:10",
														"nodeType": "YulTypedName",
														"src": "3603:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "3611:5:10",
														"nodeType": "YulTypedName",
														"src": "3611:5:10",
														"type": ""
													}
												],
												"src": "3568:133:10"
											},
											{
												"body": {
													"nativeSrc": "3787:388:10",
													"nodeType": "YulBlock",
													"src": "3787:388:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "3833:83:10",
																"nodeType": "YulBlock",
																"src": "3833:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3835:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "3835:77:10"
																			},
																			"nativeSrc": "3835:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "3835:79:10"
																		},
																		"nativeSrc": "3835:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "3835:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3808:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "3808:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3817:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "3817:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3804:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "3804:3:10"
																		},
																		"nativeSrc": "3804:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3804:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3829:2:10",
																		"nodeType": "YulLiteral",
																		"src": "3829:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3800:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "3800:3:10"
																},
																"nativeSrc": "3800:32:10",
																"nodeType": "YulFunctionCall",
																"src": "3800:32:10"
															},
															"nativeSrc": "3797:119:10",
															"nodeType": "YulIf",
															"src": "3797:119:10"
														},
														{
															"nativeSrc": "3926:117:10",
															"nodeType": "YulBlock",
															"src": "3926:117:10",
															"statements": [
																{
																	"nativeSrc": "3941:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3941:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3955:1:10",
																		"nodeType": "YulLiteral",
																		"src": "3955:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3945:6:10",
																			"nodeType": "YulTypedName",
																			"src": "3945:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3970:63:10",
																	"nodeType": "YulAssignment",
																	"src": "3970:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4005:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4005:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4016:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4016:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4001:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4001:3:10"
																				},
																				"nativeSrc": "4001:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4001:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4025:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4025:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3980:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "3980:20:10"
																		},
																		"nativeSrc": "3980:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "3980:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3970:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "3970:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4053:115:10",
															"nodeType": "YulBlock",
															"src": "4053:115:10",
															"statements": [
																{
																	"nativeSrc": "4068:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4068:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4082:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4082:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4072:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4072:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4098:60:10",
																	"nodeType": "YulAssignment",
																	"src": "4098:60:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4130:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4130:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4141:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4141:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4126:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4126:3:10"
																				},
																				"nativeSrc": "4126:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4126:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4150:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4150:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool",
																			"nativeSrc": "4108:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4108:17:10"
																		},
																		"nativeSrc": "4108:50:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4108:50:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4098:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4098:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bool",
												"nativeSrc": "3707:468:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3749:9:10",
														"nodeType": "YulTypedName",
														"src": "3749:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3760:7:10",
														"nodeType": "YulTypedName",
														"src": "3760:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3772:6:10",
														"nodeType": "YulTypedName",
														"src": "3772:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3780:6:10",
														"nodeType": "YulTypedName",
														"src": "3780:6:10",
														"type": ""
													}
												],
												"src": "3707:468:10"
											},
											{
												"body": {
													"nativeSrc": "4246:53:10",
													"nodeType": "YulBlock",
													"src": "4246:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4263:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "4263:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4286:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "4286:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "4268:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "4268:17:10"
																		},
																		"nativeSrc": "4268:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4268:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4256:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "4256:6:10"
																},
																"nativeSrc": "4256:37:10",
																"nodeType": "YulFunctionCall",
																"src": "4256:37:10"
															},
															"nativeSrc": "4256:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "4256:37:10"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "4181:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4234:5:10",
														"nodeType": "YulTypedName",
														"src": "4234:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4241:3:10",
														"nodeType": "YulTypedName",
														"src": "4241:3:10",
														"type": ""
													}
												],
												"src": "4181:118:10"
											},
											{
												"body": {
													"nativeSrc": "4403:124:10",
													"nodeType": "YulBlock",
													"src": "4403:124:10",
													"statements": [
														{
															"nativeSrc": "4413:26:10",
															"nodeType": "YulAssignment",
															"src": "4413:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4425:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "4425:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4436:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4436:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4421:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4421:3:10"
																},
																"nativeSrc": "4421:18:10",
																"nodeType": "YulFunctionCall",
																"src": "4421:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4413:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "4413:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4493:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "4493:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4506:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4506:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4517:1:10",
																				"nodeType": "YulLiteral",
																				"src": "4517:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4502:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4502:3:10"
																		},
																		"nativeSrc": "4502:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4502:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "4449:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "4449:43:10"
																},
																"nativeSrc": "4449:71:10",
																"nodeType": "YulFunctionCall",
																"src": "4449:71:10"
															},
															"nativeSrc": "4449:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "4449:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "4305:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4375:9:10",
														"nodeType": "YulTypedName",
														"src": "4375:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4387:6:10",
														"nodeType": "YulTypedName",
														"src": "4387:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4398:4:10",
														"nodeType": "YulTypedName",
														"src": "4398:4:10",
														"type": ""
													}
												],
												"src": "4305:222:10"
											},
											{
												"body": {
													"nativeSrc": "4633:519:10",
													"nodeType": "YulBlock",
													"src": "4633:519:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "4679:83:10",
																"nodeType": "YulBlock",
																"src": "4679:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4681:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "4681:77:10"
																			},
																			"nativeSrc": "4681:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "4681:79:10"
																		},
																		"nativeSrc": "4681:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "4681:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4654:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4654:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4663:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "4663:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4650:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "4650:3:10"
																		},
																		"nativeSrc": "4650:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4650:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4675:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4675:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4646:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "4646:3:10"
																},
																"nativeSrc": "4646:32:10",
																"nodeType": "YulFunctionCall",
																"src": "4646:32:10"
															},
															"nativeSrc": "4643:119:10",
															"nodeType": "YulIf",
															"src": "4643:119:10"
														},
														{
															"nativeSrc": "4772:117:10",
															"nodeType": "YulBlock",
															"src": "4772:117:10",
															"statements": [
																{
																	"nativeSrc": "4787:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4787:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4801:1:10",
																		"nodeType": "YulLiteral",
																		"src": "4801:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4791:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4791:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4816:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4816:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4851:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4851:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4862:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4862:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4847:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4847:3:10"
																				},
																				"nativeSrc": "4847:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4847:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4871:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4871:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4826:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4826:20:10"
																		},
																		"nativeSrc": "4826:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4826:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4816:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4816:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4899:118:10",
															"nodeType": "YulBlock",
															"src": "4899:118:10",
															"statements": [
																{
																	"nativeSrc": "4914:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4914:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4928:2:10",
																		"nodeType": "YulLiteral",
																		"src": "4928:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4918:6:10",
																			"nodeType": "YulTypedName",
																			"src": "4918:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4944:63:10",
																	"nodeType": "YulAssignment",
																	"src": "4944:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4979:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "4979:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4990:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "4990:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4975:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "4975:3:10"
																				},
																				"nativeSrc": "4975:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "4975:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4999:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "4999:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4954:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "4954:20:10"
																		},
																		"nativeSrc": "4954:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "4954:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4944:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "4944:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5027:118:10",
															"nodeType": "YulBlock",
															"src": "5027:118:10",
															"statements": [
																{
																	"nativeSrc": "5042:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5042:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5056:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5056:2:10",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5046:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5046:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5072:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5072:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5107:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5107:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5118:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5118:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5103:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5103:3:10"
																				},
																				"nativeSrc": "5103:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5103:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5127:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5127:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "5082:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5082:20:10"
																		},
																		"nativeSrc": "5082:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5082:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "5072:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5072:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "4533:619:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4587:9:10",
														"nodeType": "YulTypedName",
														"src": "4587:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4598:7:10",
														"nodeType": "YulTypedName",
														"src": "4598:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4610:6:10",
														"nodeType": "YulTypedName",
														"src": "4610:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4618:6:10",
														"nodeType": "YulTypedName",
														"src": "4618:6:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4626:6:10",
														"nodeType": "YulTypedName",
														"src": "4626:6:10",
														"type": ""
													}
												],
												"src": "4533:619:10"
											},
											{
												"body": {
													"nativeSrc": "5224:263:10",
													"nodeType": "YulBlock",
													"src": "5224:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "5270:83:10",
																"nodeType": "YulBlock",
																"src": "5270:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5272:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "5272:77:10"
																			},
																			"nativeSrc": "5272:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "5272:79:10"
																		},
																		"nativeSrc": "5272:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "5272:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5245:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5245:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5254:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5254:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5241:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5241:3:10"
																		},
																		"nativeSrc": "5241:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5241:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5266:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5266:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5237:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5237:3:10"
																},
																"nativeSrc": "5237:32:10",
																"nodeType": "YulFunctionCall",
																"src": "5237:32:10"
															},
															"nativeSrc": "5234:119:10",
															"nodeType": "YulIf",
															"src": "5234:119:10"
														},
														{
															"nativeSrc": "5363:117:10",
															"nodeType": "YulBlock",
															"src": "5363:117:10",
															"statements": [
																{
																	"nativeSrc": "5378:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5378:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5392:1:10",
																		"nodeType": "YulLiteral",
																		"src": "5392:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5382:6:10",
																			"nodeType": "YulTypedName",
																			"src": "5382:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5407:63:10",
																	"nodeType": "YulAssignment",
																	"src": "5407:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5442:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "5442:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5453:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "5453:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5438:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "5438:3:10"
																				},
																				"nativeSrc": "5438:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "5438:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5462:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "5462:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5417:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "5417:20:10"
																		},
																		"nativeSrc": "5417:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5417:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5407:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "5407:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5158:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5194:9:10",
														"nodeType": "YulTypedName",
														"src": "5194:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5205:7:10",
														"nodeType": "YulTypedName",
														"src": "5205:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5217:6:10",
														"nodeType": "YulTypedName",
														"src": "5217:6:10",
														"type": ""
													}
												],
												"src": "5158:329:10"
											},
											{
												"body": {
													"nativeSrc": "5536:43:10",
													"nodeType": "YulBlock",
													"src": "5536:43:10",
													"statements": [
														{
															"nativeSrc": "5546:27:10",
															"nodeType": "YulAssignment",
															"src": "5546:27:10",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5561:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "5561:5:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5568:4:10",
																		"nodeType": "YulLiteral",
																		"src": "5568:4:10",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5557:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5557:3:10"
																},
																"nativeSrc": "5557:16:10",
																"nodeType": "YulFunctionCall",
																"src": "5557:16:10"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "5546:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "5546:7:10"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "5493:86:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5518:5:10",
														"nodeType": "YulTypedName",
														"src": "5518:5:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "5528:7:10",
														"nodeType": "YulTypedName",
														"src": "5528:7:10",
														"type": ""
													}
												],
												"src": "5493:86:10"
											},
											{
												"body": {
													"nativeSrc": "5646:51:10",
													"nodeType": "YulBlock",
													"src": "5646:51:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5663:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "5663:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5684:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "5684:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "5668:15:10",
																			"nodeType": "YulIdentifier",
																			"src": "5668:15:10"
																		},
																		"nativeSrc": "5668:22:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5668:22:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5656:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "5656:6:10"
																},
																"nativeSrc": "5656:35:10",
																"nodeType": "YulFunctionCall",
																"src": "5656:35:10"
															},
															"nativeSrc": "5656:35:10",
															"nodeType": "YulExpressionStatement",
															"src": "5656:35:10"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "5585:112:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5634:5:10",
														"nodeType": "YulTypedName",
														"src": "5634:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5641:3:10",
														"nodeType": "YulTypedName",
														"src": "5641:3:10",
														"type": ""
													}
												],
												"src": "5585:112:10"
											},
											{
												"body": {
													"nativeSrc": "5797:120:10",
													"nodeType": "YulBlock",
													"src": "5797:120:10",
													"statements": [
														{
															"nativeSrc": "5807:26:10",
															"nodeType": "YulAssignment",
															"src": "5807:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5819:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "5819:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5830:2:10",
																		"nodeType": "YulLiteral",
																		"src": "5830:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5815:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "5815:3:10"
																},
																"nativeSrc": "5815:18:10",
																"nodeType": "YulFunctionCall",
																"src": "5815:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5807:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "5807:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5883:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "5883:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5896:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "5896:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5907:1:10",
																				"nodeType": "YulLiteral",
																				"src": "5907:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5892:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "5892:3:10"
																		},
																		"nativeSrc": "5892:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "5892:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "5843:39:10",
																	"nodeType": "YulIdentifier",
																	"src": "5843:39:10"
																},
																"nativeSrc": "5843:67:10",
																"nodeType": "YulFunctionCall",
																"src": "5843:67:10"
															},
															"nativeSrc": "5843:67:10",
															"nodeType": "YulExpressionStatement",
															"src": "5843:67:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "5703:214:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5769:9:10",
														"nodeType": "YulTypedName",
														"src": "5769:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5781:6:10",
														"nodeType": "YulTypedName",
														"src": "5781:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5792:4:10",
														"nodeType": "YulTypedName",
														"src": "5792:4:10",
														"type": ""
													}
												],
												"src": "5703:214:10"
											},
											{
												"body": {
													"nativeSrc": "5989:263:10",
													"nodeType": "YulBlock",
													"src": "5989:263:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6035:83:10",
																"nodeType": "YulBlock",
																"src": "6035:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6037:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6037:77:10"
																			},
																			"nativeSrc": "6037:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6037:79:10"
																		},
																		"nativeSrc": "6037:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6037:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6010:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6010:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6019:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6019:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6006:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6006:3:10"
																		},
																		"nativeSrc": "6006:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6006:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6031:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6031:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6002:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6002:3:10"
																},
																"nativeSrc": "6002:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6002:32:10"
															},
															"nativeSrc": "5999:119:10",
															"nodeType": "YulIf",
															"src": "5999:119:10"
														},
														{
															"nativeSrc": "6128:117:10",
															"nodeType": "YulBlock",
															"src": "6128:117:10",
															"statements": [
																{
																	"nativeSrc": "6143:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6143:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6157:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6157:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6147:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6147:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6172:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6172:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6207:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6207:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6218:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6218:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6203:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6203:3:10"
																				},
																				"nativeSrc": "6203:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6203:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6227:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6227:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "6182:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6182:20:10"
																		},
																		"nativeSrc": "6182:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6182:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6172:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6172:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "5923:329:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5959:9:10",
														"nodeType": "YulTypedName",
														"src": "5959:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5970:7:10",
														"nodeType": "YulTypedName",
														"src": "5970:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5982:6:10",
														"nodeType": "YulTypedName",
														"src": "5982:6:10",
														"type": ""
													}
												],
												"src": "5923:329:10"
											},
											{
												"body": {
													"nativeSrc": "6323:53:10",
													"nodeType": "YulBlock",
													"src": "6323:53:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6340:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "6340:3:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6363:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6363:5:10"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6345:17:10",
																			"nodeType": "YulIdentifier",
																			"src": "6345:17:10"
																		},
																		"nativeSrc": "6345:24:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6345:24:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6333:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:10"
																},
																"nativeSrc": "6333:37:10",
																"nodeType": "YulFunctionCall",
																"src": "6333:37:10"
															},
															"nativeSrc": "6333:37:10",
															"nodeType": "YulExpressionStatement",
															"src": "6333:37:10"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6258:118:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6311:5:10",
														"nodeType": "YulTypedName",
														"src": "6311:5:10",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6318:3:10",
														"nodeType": "YulTypedName",
														"src": "6318:3:10",
														"type": ""
													}
												],
												"src": "6258:118:10"
											},
											{
												"body": {
													"nativeSrc": "6480:124:10",
													"nodeType": "YulBlock",
													"src": "6480:124:10",
													"statements": [
														{
															"nativeSrc": "6490:26:10",
															"nodeType": "YulAssignment",
															"src": "6490:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6502:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "6502:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6513:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6513:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6498:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6498:3:10"
																},
																"nativeSrc": "6498:18:10",
																"nodeType": "YulFunctionCall",
																"src": "6498:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6490:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "6490:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6570:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "6570:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6583:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6583:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6594:1:10",
																				"nodeType": "YulLiteral",
																				"src": "6594:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6579:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6579:3:10"
																		},
																		"nativeSrc": "6579:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6579:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6526:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "6526:43:10"
																},
																"nativeSrc": "6526:71:10",
																"nodeType": "YulFunctionCall",
																"src": "6526:71:10"
															},
															"nativeSrc": "6526:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "6526:71:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6382:222:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6452:9:10",
														"nodeType": "YulTypedName",
														"src": "6452:9:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6464:6:10",
														"nodeType": "YulTypedName",
														"src": "6464:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6475:4:10",
														"nodeType": "YulTypedName",
														"src": "6475:4:10",
														"type": ""
													}
												],
												"src": "6382:222:10"
											},
											{
												"body": {
													"nativeSrc": "6693:391:10",
													"nodeType": "YulBlock",
													"src": "6693:391:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "6739:83:10",
																"nodeType": "YulBlock",
																"src": "6739:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "6741:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "6741:77:10"
																			},
																			"nativeSrc": "6741:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6741:79:10"
																		},
																		"nativeSrc": "6741:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6741:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6714:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6714:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6723:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "6723:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6710:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "6710:3:10"
																		},
																		"nativeSrc": "6710:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6710:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6735:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6735:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6706:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "6706:3:10"
																},
																"nativeSrc": "6706:32:10",
																"nodeType": "YulFunctionCall",
																"src": "6706:32:10"
															},
															"nativeSrc": "6703:119:10",
															"nodeType": "YulIf",
															"src": "6703:119:10"
														},
														{
															"nativeSrc": "6832:117:10",
															"nodeType": "YulBlock",
															"src": "6832:117:10",
															"statements": [
																{
																	"nativeSrc": "6847:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6847:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6861:1:10",
																		"nodeType": "YulLiteral",
																		"src": "6861:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6851:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6851:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "6876:63:10",
																	"nodeType": "YulAssignment",
																	"src": "6876:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "6911:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "6911:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "6922:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "6922:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6907:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "6907:3:10"
																				},
																				"nativeSrc": "6907:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "6907:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6931:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "6931:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "6886:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "6886:20:10"
																		},
																		"nativeSrc": "6886:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "6886:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "6876:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "6876:6:10"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "6959:118:10",
															"nodeType": "YulBlock",
															"src": "6959:118:10",
															"statements": [
																{
																	"nativeSrc": "6974:16:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "6974:16:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "6988:2:10",
																		"nodeType": "YulLiteral",
																		"src": "6988:2:10",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "6978:6:10",
																			"nodeType": "YulTypedName",
																			"src": "6978:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "7004:63:10",
																	"nodeType": "YulAssignment",
																	"src": "7004:63:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "7039:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "7039:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "7050:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "7050:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "7035:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "7035:3:10"
																				},
																				"nativeSrc": "7035:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "7035:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7059:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "7059:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "7014:20:10",
																			"nodeType": "YulIdentifier",
																			"src": "7014:20:10"
																		},
																		"nativeSrc": "7014:53:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7014:53:10"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "7004:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "7004:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "6610:474:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6655:9:10",
														"nodeType": "YulTypedName",
														"src": "6655:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6666:7:10",
														"nodeType": "YulTypedName",
														"src": "6666:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6678:6:10",
														"nodeType": "YulTypedName",
														"src": "6678:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6686:6:10",
														"nodeType": "YulTypedName",
														"src": "6686:6:10",
														"type": ""
													}
												],
												"src": "6610:474:10"
											},
											{
												"body": {
													"nativeSrc": "7118:152:10",
													"nodeType": "YulBlock",
													"src": "7118:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7135:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7135:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7138:77:10",
																		"nodeType": "YulLiteral",
																		"src": "7138:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7128:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7128:6:10"
																},
																"nativeSrc": "7128:88:10",
																"nodeType": "YulFunctionCall",
																"src": "7128:88:10"
															},
															"nativeSrc": "7128:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "7128:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7232:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7232:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7235:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7235:4:10",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7225:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7225:6:10"
																},
																"nativeSrc": "7225:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7225:15:10"
															},
															"nativeSrc": "7225:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7225:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7256:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7256:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7259:4:10",
																		"nodeType": "YulLiteral",
																		"src": "7259:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7249:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7249:6:10"
																},
																"nativeSrc": "7249:15:10",
																"nodeType": "YulFunctionCall",
																"src": "7249:15:10"
															},
															"nativeSrc": "7249:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "7249:15:10"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "7090:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "7090:180:10"
											},
											{
												"body": {
													"nativeSrc": "7327:269:10",
													"nodeType": "YulBlock",
													"src": "7327:269:10",
													"statements": [
														{
															"nativeSrc": "7337:22:10",
															"nodeType": "YulAssignment",
															"src": "7337:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7351:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7351:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7357:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7357:1:10",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "7347:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7347:3:10"
																},
																"nativeSrc": "7347:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7347:12:10"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "7337:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7337:6:10"
																}
															]
														},
														{
															"nativeSrc": "7368:38:10",
															"nodeType": "YulVariableDeclaration",
															"src": "7368:38:10",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "7398:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "7398:4:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7404:1:10",
																		"nodeType": "YulLiteral",
																		"src": "7404:1:10",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "7394:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7394:3:10"
																},
																"nativeSrc": "7394:12:10",
																"nodeType": "YulFunctionCall",
																"src": "7394:12:10"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "7372:18:10",
																	"nodeType": "YulTypedName",
																	"src": "7372:18:10",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7445:51:10",
																"nodeType": "YulBlock",
																"src": "7445:51:10",
																"statements": [
																	{
																		"nativeSrc": "7459:27:10",
																		"nodeType": "YulAssignment",
																		"src": "7459:27:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "7473:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "7473:6:10"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7481:4:10",
																					"nodeType": "YulLiteral",
																					"src": "7481:4:10",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "7469:3:10",
																				"nodeType": "YulIdentifier",
																				"src": "7469:3:10"
																			},
																			"nativeSrc": "7469:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7469:17:10"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "7459:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7459:6:10"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7425:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "7425:18:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7418:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7418:6:10"
																},
																"nativeSrc": "7418:26:10",
																"nodeType": "YulFunctionCall",
																"src": "7418:26:10"
															},
															"nativeSrc": "7415:81:10",
															"nodeType": "YulIf",
															"src": "7415:81:10"
														},
														{
															"body": {
																"nativeSrc": "7548:42:10",
																"nodeType": "YulBlock",
																"src": "7548:42:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "7562:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "7562:16:10"
																			},
																			"nativeSrc": "7562:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "7562:18:10"
																		},
																		"nativeSrc": "7562:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "7562:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "7512:18:10",
																		"nodeType": "YulIdentifier",
																		"src": "7512:18:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "7535:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7535:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7543:2:10",
																				"nodeType": "YulLiteral",
																				"src": "7543:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "7532:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "7532:2:10"
																		},
																		"nativeSrc": "7532:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7532:14:10"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "7509:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "7509:2:10"
																},
																"nativeSrc": "7509:38:10",
																"nodeType": "YulFunctionCall",
																"src": "7509:38:10"
															},
															"nativeSrc": "7506:84:10",
															"nodeType": "YulIf",
															"src": "7506:84:10"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "7276:320:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "7311:4:10",
														"nodeType": "YulTypedName",
														"src": "7311:4:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "7320:6:10",
														"nodeType": "YulTypedName",
														"src": "7320:6:10",
														"type": ""
													}
												],
												"src": "7276:320:10"
											},
											{
												"body": {
													"nativeSrc": "7708:61:10",
													"nodeType": "YulBlock",
													"src": "7708:61:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "7730:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "7730:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7738:1:10",
																				"nodeType": "YulLiteral",
																				"src": "7738:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7726:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "7726:3:10"
																		},
																		"nativeSrc": "7726:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "7726:14:10"
																	},
																	{
																		"hexValue": "4e6f7420656e6f75676820706f696e7473",
																		"kind": "string",
																		"nativeSrc": "7742:19:10",
																		"nodeType": "YulLiteral",
																		"src": "7742:19:10",
																		"type": "",
																		"value": "Not enough points"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7719:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "7719:6:10"
																},
																"nativeSrc": "7719:43:10",
																"nodeType": "YulFunctionCall",
																"src": "7719:43:10"
															},
															"nativeSrc": "7719:43:10",
															"nodeType": "YulExpressionStatement",
															"src": "7719:43:10"
														}
													]
												},
												"name": "store_literal_in_memory_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238",
												"nativeSrc": "7602:167:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "7700:6:10",
														"nodeType": "YulTypedName",
														"src": "7700:6:10",
														"type": ""
													}
												],
												"src": "7602:167:10"
											},
											{
												"body": {
													"nativeSrc": "7921:220:10",
													"nodeType": "YulBlock",
													"src": "7921:220:10",
													"statements": [
														{
															"nativeSrc": "7931:74:10",
															"nodeType": "YulAssignment",
															"src": "7931:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7997:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "7997:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8002:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8002:2:10",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "7938:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "7938:58:10"
																},
																"nativeSrc": "7938:67:10",
																"nodeType": "YulFunctionCall",
																"src": "7938:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "7931:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "7931:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8103:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8103:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238",
																	"nativeSrc": "8014:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "8014:88:10"
																},
																"nativeSrc": "8014:93:10",
																"nodeType": "YulFunctionCall",
																"src": "8014:93:10"
															},
															"nativeSrc": "8014:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "8014:93:10"
														},
														{
															"nativeSrc": "8116:19:10",
															"nodeType": "YulAssignment",
															"src": "8116:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8127:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "8127:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8132:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8132:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8123:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8123:3:10"
																},
																"nativeSrc": "8123:12:10",
																"nodeType": "YulFunctionCall",
																"src": "8123:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "8116:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8116:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "7775:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "7909:3:10",
														"nodeType": "YulTypedName",
														"src": "7909:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "7917:3:10",
														"nodeType": "YulTypedName",
														"src": "7917:3:10",
														"type": ""
													}
												],
												"src": "7775:366:10"
											},
											{
												"body": {
													"nativeSrc": "8318:248:10",
													"nodeType": "YulBlock",
													"src": "8318:248:10",
													"statements": [
														{
															"nativeSrc": "8328:26:10",
															"nodeType": "YulAssignment",
															"src": "8328:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8340:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "8340:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8351:2:10",
																		"nodeType": "YulLiteral",
																		"src": "8351:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8336:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8336:3:10"
																},
																"nativeSrc": "8336:18:10",
																"nodeType": "YulFunctionCall",
																"src": "8336:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8328:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8328:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8375:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8375:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8386:1:10",
																				"nodeType": "YulLiteral",
																				"src": "8386:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8371:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8371:3:10"
																		},
																		"nativeSrc": "8371:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8371:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "8394:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "8394:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8400:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "8400:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8390:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "8390:3:10"
																		},
																		"nativeSrc": "8390:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "8390:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8364:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8364:6:10"
																},
																"nativeSrc": "8364:47:10",
																"nodeType": "YulFunctionCall",
																"src": "8364:47:10"
															},
															"nativeSrc": "8364:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "8364:47:10"
														},
														{
															"nativeSrc": "8420:139:10",
															"nodeType": "YulAssignment",
															"src": "8420:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "8554:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8554:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "8428:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "8428:124:10"
																},
																"nativeSrc": "8428:131:10",
																"nodeType": "YulFunctionCall",
																"src": "8428:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8420:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8420:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8147:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8298:9:10",
														"nodeType": "YulTypedName",
														"src": "8298:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8313:4:10",
														"nodeType": "YulTypedName",
														"src": "8313:4:10",
														"type": ""
													}
												],
												"src": "8147:419:10"
											},
											{
												"body": {
													"nativeSrc": "8600:152:10",
													"nodeType": "YulBlock",
													"src": "8600:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8617:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8617:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8620:77:10",
																		"nodeType": "YulLiteral",
																		"src": "8620:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8610:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8610:6:10"
																},
																"nativeSrc": "8610:88:10",
																"nodeType": "YulFunctionCall",
																"src": "8610:88:10"
															},
															"nativeSrc": "8610:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "8610:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8714:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8714:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8717:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8717:4:10",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8707:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8707:6:10"
																},
																"nativeSrc": "8707:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8707:15:10"
															},
															"nativeSrc": "8707:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8707:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8738:1:10",
																		"nodeType": "YulLiteral",
																		"src": "8738:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8741:4:10",
																		"nodeType": "YulLiteral",
																		"src": "8741:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8731:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "8731:6:10"
																},
																"nativeSrc": "8731:15:10",
																"nodeType": "YulFunctionCall",
																"src": "8731:15:10"
															},
															"nativeSrc": "8731:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "8731:15:10"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8572:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "8572:180:10"
											},
											{
												"body": {
													"nativeSrc": "8803:149:10",
													"nodeType": "YulBlock",
													"src": "8803:149:10",
													"statements": [
														{
															"nativeSrc": "8813:25:10",
															"nodeType": "YulAssignment",
															"src": "8813:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8836:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8836:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8818:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8818:17:10"
																},
																"nativeSrc": "8818:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8818:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "8813:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8813:1:10"
																}
															]
														},
														{
															"nativeSrc": "8847:25:10",
															"nodeType": "YulAssignment",
															"src": "8847:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "8870:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8870:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "8852:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "8852:17:10"
																},
																"nativeSrc": "8852:20:10",
																"nodeType": "YulFunctionCall",
																"src": "8852:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "8847:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "8847:1:10"
																}
															]
														},
														{
															"nativeSrc": "8881:17:10",
															"nodeType": "YulAssignment",
															"src": "8881:17:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "8893:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8893:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "8896:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8896:1:10"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "8889:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "8889:3:10"
																},
																"nativeSrc": "8889:9:10",
																"nodeType": "YulFunctionCall",
																"src": "8889:9:10"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "8881:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "8881:4:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8923:22:10",
																"nodeType": "YulBlock",
																"src": "8923:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "8925:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "8925:16:10"
																			},
																			"nativeSrc": "8925:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "8925:18:10"
																		},
																		"nativeSrc": "8925:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "8925:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "8914:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "8914:4:10"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "8920:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "8920:1:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "8911:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "8911:2:10"
																},
																"nativeSrc": "8911:11:10",
																"nodeType": "YulFunctionCall",
																"src": "8911:11:10"
															},
															"nativeSrc": "8908:37:10",
															"nodeType": "YulIf",
															"src": "8908:37:10"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "8758:194:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "8789:1:10",
														"nodeType": "YulTypedName",
														"src": "8789:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "8792:1:10",
														"nodeType": "YulTypedName",
														"src": "8792:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "8798:4:10",
														"nodeType": "YulTypedName",
														"src": "8798:4:10",
														"type": ""
													}
												],
												"src": "8758:194:10"
											},
											{
												"body": {
													"nativeSrc": "9084:206:10",
													"nodeType": "YulBlock",
													"src": "9084:206:10",
													"statements": [
														{
															"nativeSrc": "9094:26:10",
															"nodeType": "YulAssignment",
															"src": "9094:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9106:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "9106:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9117:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9117:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9102:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9102:3:10"
																},
																"nativeSrc": "9102:18:10",
																"nodeType": "YulFunctionCall",
																"src": "9102:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9094:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "9094:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9174:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9174:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9187:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9187:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9198:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9198:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9183:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9183:3:10"
																		},
																		"nativeSrc": "9183:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9183:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "9130:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9130:43:10"
																},
																"nativeSrc": "9130:71:10",
																"nodeType": "YulFunctionCall",
																"src": "9130:71:10"
															},
															"nativeSrc": "9130:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "9130:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "9255:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9255:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9268:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9268:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9279:2:10",
																				"nodeType": "YulLiteral",
																				"src": "9279:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9264:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9264:3:10"
																		},
																		"nativeSrc": "9264:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9264:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "9211:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "9211:43:10"
																},
																"nativeSrc": "9211:72:10",
																"nodeType": "YulFunctionCall",
																"src": "9211:72:10"
															},
															"nativeSrc": "9211:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "9211:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "8958:332:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9048:9:10",
														"nodeType": "YulTypedName",
														"src": "9048:9:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9060:6:10",
														"nodeType": "YulTypedName",
														"src": "9060:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9068:6:10",
														"nodeType": "YulTypedName",
														"src": "9068:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9079:4:10",
														"nodeType": "YulTypedName",
														"src": "9079:4:10",
														"type": ""
													}
												],
												"src": "8958:332:10"
											},
											{
												"body": {
													"nativeSrc": "9356:77:10",
													"nodeType": "YulBlock",
													"src": "9356:77:10",
													"statements": [
														{
															"nativeSrc": "9366:22:10",
															"nodeType": "YulAssignment",
															"src": "9366:22:10",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "9381:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "9381:6:10"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9375:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9375:5:10"
																},
																"nativeSrc": "9375:13:10",
																"nodeType": "YulFunctionCall",
																"src": "9375:13:10"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "9366:5:10",
																	"nodeType": "YulIdentifier",
																	"src": "9366:5:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9421:5:10",
																		"nodeType": "YulIdentifier",
																		"src": "9421:5:10"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "9397:23:10",
																	"nodeType": "YulIdentifier",
																	"src": "9397:23:10"
																},
																"nativeSrc": "9397:30:10",
																"nodeType": "YulFunctionCall",
																"src": "9397:30:10"
															},
															"nativeSrc": "9397:30:10",
															"nodeType": "YulExpressionStatement",
															"src": "9397:30:10"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "9296:137:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "9334:6:10",
														"nodeType": "YulTypedName",
														"src": "9334:6:10",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "9342:3:10",
														"nodeType": "YulTypedName",
														"src": "9342:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "9350:5:10",
														"nodeType": "YulTypedName",
														"src": "9350:5:10",
														"type": ""
													}
												],
												"src": "9296:137:10"
											},
											{
												"body": {
													"nativeSrc": "9513:271:10",
													"nodeType": "YulBlock",
													"src": "9513:271:10",
													"statements": [
														{
															"body": {
																"nativeSrc": "9559:83:10",
																"nodeType": "YulBlock",
																"src": "9559:83:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9561:77:10",
																				"nodeType": "YulIdentifier",
																				"src": "9561:77:10"
																			},
																			"nativeSrc": "9561:79:10",
																			"nodeType": "YulFunctionCall",
																			"src": "9561:79:10"
																		},
																		"nativeSrc": "9561:79:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "9561:79:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9534:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9534:7:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9543:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "9543:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9530:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9530:3:10"
																		},
																		"nativeSrc": "9530:23:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9530:23:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9555:2:10",
																		"nodeType": "YulLiteral",
																		"src": "9555:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9526:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "9526:3:10"
																},
																"nativeSrc": "9526:32:10",
																"nodeType": "YulFunctionCall",
																"src": "9526:32:10"
															},
															"nativeSrc": "9523:119:10",
															"nodeType": "YulIf",
															"src": "9523:119:10"
														},
														{
															"nativeSrc": "9652:125:10",
															"nodeType": "YulBlock",
															"src": "9652:125:10",
															"statements": [
																{
																	"nativeSrc": "9667:15:10",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9667:15:10",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9681:1:10",
																		"nodeType": "YulLiteral",
																		"src": "9681:1:10",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9671:6:10",
																			"nodeType": "YulTypedName",
																			"src": "9671:6:10",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9696:71:10",
																	"nodeType": "YulAssignment",
																	"src": "9696:71:10",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9739:9:10",
																						"nodeType": "YulIdentifier",
																						"src": "9739:9:10"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9750:6:10",
																						"nodeType": "YulIdentifier",
																						"src": "9750:6:10"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9735:3:10",
																					"nodeType": "YulIdentifier",
																					"src": "9735:3:10"
																				},
																				"nativeSrc": "9735:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "9735:22:10"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9759:7:10",
																				"nodeType": "YulIdentifier",
																				"src": "9759:7:10"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "9706:28:10",
																			"nodeType": "YulIdentifier",
																			"src": "9706:28:10"
																		},
																		"nativeSrc": "9706:61:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9706:61:10"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9696:6:10",
																			"nodeType": "YulIdentifier",
																			"src": "9696:6:10"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "9439:345:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9483:9:10",
														"nodeType": "YulTypedName",
														"src": "9483:9:10",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9494:7:10",
														"nodeType": "YulTypedName",
														"src": "9494:7:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9506:6:10",
														"nodeType": "YulTypedName",
														"src": "9506:6:10",
														"type": ""
													}
												],
												"src": "9439:345:10"
											},
											{
												"body": {
													"nativeSrc": "9896:66:10",
													"nodeType": "YulBlock",
													"src": "9896:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "9918:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "9918:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9926:1:10",
																				"nodeType": "YulLiteral",
																				"src": "9926:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9914:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "9914:3:10"
																		},
																		"nativeSrc": "9914:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "9914:14:10"
																	},
																	{
																		"hexValue": "4164647265737320697320626c61636b6c6973746564",
																		"kind": "string",
																		"nativeSrc": "9930:24:10",
																		"nodeType": "YulLiteral",
																		"src": "9930:24:10",
																		"type": "",
																		"value": "Address is blacklisted"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9907:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "9907:6:10"
																},
																"nativeSrc": "9907:48:10",
																"nodeType": "YulFunctionCall",
																"src": "9907:48:10"
															},
															"nativeSrc": "9907:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "9907:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
												"nativeSrc": "9790:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "9888:6:10",
														"nodeType": "YulTypedName",
														"src": "9888:6:10",
														"type": ""
													}
												],
												"src": "9790:172:10"
											},
											{
												"body": {
													"nativeSrc": "10114:220:10",
													"nodeType": "YulBlock",
													"src": "10114:220:10",
													"statements": [
														{
															"nativeSrc": "10124:74:10",
															"nodeType": "YulAssignment",
															"src": "10124:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10190:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10190:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10195:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10195:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10131:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "10131:58:10"
																},
																"nativeSrc": "10131:67:10",
																"nodeType": "YulFunctionCall",
																"src": "10131:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "10124:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10124:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10296:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10296:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																	"nativeSrc": "10207:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "10207:88:10"
																},
																"nativeSrc": "10207:93:10",
																"nodeType": "YulFunctionCall",
																"src": "10207:93:10"
															},
															"nativeSrc": "10207:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "10207:93:10"
														},
														{
															"nativeSrc": "10309:19:10",
															"nodeType": "YulAssignment",
															"src": "10309:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10320:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "10320:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10325:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10325:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10316:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10316:3:10"
																},
																"nativeSrc": "10316:12:10",
																"nodeType": "YulFunctionCall",
																"src": "10316:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10309:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10309:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "9968:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10102:3:10",
														"nodeType": "YulTypedName",
														"src": "10102:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10110:3:10",
														"nodeType": "YulTypedName",
														"src": "10110:3:10",
														"type": ""
													}
												],
												"src": "9968:366:10"
											},
											{
												"body": {
													"nativeSrc": "10511:248:10",
													"nodeType": "YulBlock",
													"src": "10511:248:10",
													"statements": [
														{
															"nativeSrc": "10521:26:10",
															"nodeType": "YulAssignment",
															"src": "10521:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10533:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "10533:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10544:2:10",
																		"nodeType": "YulLiteral",
																		"src": "10544:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10529:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "10529:3:10"
																},
																"nativeSrc": "10529:18:10",
																"nodeType": "YulFunctionCall",
																"src": "10529:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10521:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10521:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10568:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10568:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10579:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10579:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10564:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10564:3:10"
																		},
																		"nativeSrc": "10564:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10564:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "10587:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "10587:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10593:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "10593:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10583:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10583:3:10"
																		},
																		"nativeSrc": "10583:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10583:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10557:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10557:6:10"
																},
																"nativeSrc": "10557:47:10",
																"nodeType": "YulFunctionCall",
																"src": "10557:47:10"
															},
															"nativeSrc": "10557:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "10557:47:10"
														},
														{
															"nativeSrc": "10613:139:10",
															"nodeType": "YulAssignment",
															"src": "10613:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "10747:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "10747:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "10621:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "10621:124:10"
																},
																"nativeSrc": "10621:131:10",
																"nodeType": "YulFunctionCall",
																"src": "10621:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10613:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "10613:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10340:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10491:9:10",
														"nodeType": "YulTypedName",
														"src": "10491:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10506:4:10",
														"nodeType": "YulTypedName",
														"src": "10506:4:10",
														"type": ""
													}
												],
												"src": "10340:419:10"
											},
											{
												"body": {
													"nativeSrc": "10871:66:10",
													"nodeType": "YulBlock",
													"src": "10871:66:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "10893:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "10893:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10901:1:10",
																				"nodeType": "YulLiteral",
																				"src": "10901:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10889:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "10889:3:10"
																		},
																		"nativeSrc": "10889:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "10889:14:10"
																	},
																	{
																		"hexValue": "54726164696e67206973206e6f7420656e61626c6564",
																		"kind": "string",
																		"nativeSrc": "10905:24:10",
																		"nodeType": "YulLiteral",
																		"src": "10905:24:10",
																		"type": "",
																		"value": "Trading is not enabled"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10882:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "10882:6:10"
																},
																"nativeSrc": "10882:48:10",
																"nodeType": "YulFunctionCall",
																"src": "10882:48:10"
															},
															"nativeSrc": "10882:48:10",
															"nodeType": "YulExpressionStatement",
															"src": "10882:48:10"
														}
													]
												},
												"name": "store_literal_in_memory_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3",
												"nativeSrc": "10765:172:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "10863:6:10",
														"nodeType": "YulTypedName",
														"src": "10863:6:10",
														"type": ""
													}
												],
												"src": "10765:172:10"
											},
											{
												"body": {
													"nativeSrc": "11089:220:10",
													"nodeType": "YulBlock",
													"src": "11089:220:10",
													"statements": [
														{
															"nativeSrc": "11099:74:10",
															"nodeType": "YulAssignment",
															"src": "11099:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11165:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11165:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11170:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11170:2:10",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11106:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "11106:58:10"
																},
																"nativeSrc": "11106:67:10",
																"nodeType": "YulFunctionCall",
																"src": "11106:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "11099:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11099:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11271:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11271:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3",
																	"nativeSrc": "11182:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "11182:88:10"
																},
																"nativeSrc": "11182:93:10",
																"nodeType": "YulFunctionCall",
																"src": "11182:93:10"
															},
															"nativeSrc": "11182:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "11182:93:10"
														},
														{
															"nativeSrc": "11284:19:10",
															"nodeType": "YulAssignment",
															"src": "11284:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11295:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "11295:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11300:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11300:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11291:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11291:3:10"
																},
																"nativeSrc": "11291:12:10",
																"nodeType": "YulFunctionCall",
																"src": "11291:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11284:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11284:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "10943:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "11077:3:10",
														"nodeType": "YulTypedName",
														"src": "11077:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "11085:3:10",
														"nodeType": "YulTypedName",
														"src": "11085:3:10",
														"type": ""
													}
												],
												"src": "10943:366:10"
											},
											{
												"body": {
													"nativeSrc": "11486:248:10",
													"nodeType": "YulBlock",
													"src": "11486:248:10",
													"statements": [
														{
															"nativeSrc": "11496:26:10",
															"nodeType": "YulAssignment",
															"src": "11496:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11508:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "11508:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11519:2:10",
																		"nodeType": "YulLiteral",
																		"src": "11519:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11504:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "11504:3:10"
																},
																"nativeSrc": "11504:18:10",
																"nodeType": "YulFunctionCall",
																"src": "11504:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11496:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11496:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11543:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11543:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11554:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11554:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11539:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11539:3:10"
																		},
																		"nativeSrc": "11539:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11539:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "11562:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "11562:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11568:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "11568:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11558:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11558:3:10"
																		},
																		"nativeSrc": "11558:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11558:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11532:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11532:6:10"
																},
																"nativeSrc": "11532:47:10",
																"nodeType": "YulFunctionCall",
																"src": "11532:47:10"
															},
															"nativeSrc": "11532:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "11532:47:10"
														},
														{
															"nativeSrc": "11588:139:10",
															"nodeType": "YulAssignment",
															"src": "11588:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "11722:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "11722:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "11596:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "11596:124:10"
																},
																"nativeSrc": "11596:131:10",
																"nodeType": "YulFunctionCall",
																"src": "11596:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11588:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "11588:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11315:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11466:9:10",
														"nodeType": "YulTypedName",
														"src": "11466:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11481:4:10",
														"nodeType": "YulTypedName",
														"src": "11481:4:10",
														"type": ""
													}
												],
												"src": "11315:419:10"
											},
											{
												"body": {
													"nativeSrc": "11846:62:10",
													"nodeType": "YulBlock",
													"src": "11846:62:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "11868:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "11868:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11876:1:10",
																				"nodeType": "YulLiteral",
																				"src": "11876:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11864:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "11864:3:10"
																		},
																		"nativeSrc": "11864:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "11864:14:10"
																	},
																	{
																		"hexValue": "436f6e747261637420697320706175736564",
																		"kind": "string",
																		"nativeSrc": "11880:20:10",
																		"nodeType": "YulLiteral",
																		"src": "11880:20:10",
																		"type": "",
																		"value": "Contract is paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11857:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "11857:6:10"
																},
																"nativeSrc": "11857:44:10",
																"nodeType": "YulFunctionCall",
																"src": "11857:44:10"
															},
															"nativeSrc": "11857:44:10",
															"nodeType": "YulExpressionStatement",
															"src": "11857:44:10"
														}
													]
												},
												"name": "store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
												"nativeSrc": "11740:168:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "11838:6:10",
														"nodeType": "YulTypedName",
														"src": "11838:6:10",
														"type": ""
													}
												],
												"src": "11740:168:10"
											},
											{
												"body": {
													"nativeSrc": "12060:220:10",
													"nodeType": "YulBlock",
													"src": "12060:220:10",
													"statements": [
														{
															"nativeSrc": "12070:74:10",
															"nodeType": "YulAssignment",
															"src": "12070:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12136:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12136:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12141:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12141:2:10",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12077:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "12077:58:10"
																},
																"nativeSrc": "12077:67:10",
																"nodeType": "YulFunctionCall",
																"src": "12077:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "12070:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12070:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12242:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12242:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																	"nativeSrc": "12153:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "12153:88:10"
																},
																"nativeSrc": "12153:93:10",
																"nodeType": "YulFunctionCall",
																"src": "12153:93:10"
															},
															"nativeSrc": "12153:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "12153:93:10"
														},
														{
															"nativeSrc": "12255:19:10",
															"nodeType": "YulAssignment",
															"src": "12255:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12266:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "12266:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12271:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12271:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12262:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12262:3:10"
																},
																"nativeSrc": "12262:12:10",
																"nodeType": "YulFunctionCall",
																"src": "12262:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "12255:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12255:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "11914:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "12048:3:10",
														"nodeType": "YulTypedName",
														"src": "12048:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "12056:3:10",
														"nodeType": "YulTypedName",
														"src": "12056:3:10",
														"type": ""
													}
												],
												"src": "11914:366:10"
											},
											{
												"body": {
													"nativeSrc": "12457:248:10",
													"nodeType": "YulBlock",
													"src": "12457:248:10",
													"statements": [
														{
															"nativeSrc": "12467:26:10",
															"nodeType": "YulAssignment",
															"src": "12467:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12479:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "12479:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12490:2:10",
																		"nodeType": "YulLiteral",
																		"src": "12490:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12475:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "12475:3:10"
																},
																"nativeSrc": "12475:18:10",
																"nodeType": "YulFunctionCall",
																"src": "12475:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12467:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12467:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12514:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12514:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12525:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12525:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12510:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12510:3:10"
																		},
																		"nativeSrc": "12510:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12510:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "12533:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "12533:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12539:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "12539:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12529:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12529:3:10"
																		},
																		"nativeSrc": "12529:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12529:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12503:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12503:6:10"
																},
																"nativeSrc": "12503:47:10",
																"nodeType": "YulFunctionCall",
																"src": "12503:47:10"
															},
															"nativeSrc": "12503:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "12503:47:10"
														},
														{
															"nativeSrc": "12559:139:10",
															"nodeType": "YulAssignment",
															"src": "12559:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "12693:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "12693:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "12567:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "12567:124:10"
																},
																"nativeSrc": "12567:131:10",
																"nodeType": "YulFunctionCall",
																"src": "12567:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12559:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "12559:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12286:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12437:9:10",
														"nodeType": "YulTypedName",
														"src": "12437:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12452:4:10",
														"nodeType": "YulTypedName",
														"src": "12452:4:10",
														"type": ""
													}
												],
												"src": "12286:419:10"
											},
											{
												"body": {
													"nativeSrc": "12817:119:10",
													"nodeType": "YulBlock",
													"src": "12817:119:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12839:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12839:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12847:1:10",
																				"nodeType": "YulLiteral",
																				"src": "12847:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12835:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12835:3:10"
																		},
																		"nativeSrc": "12835:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12835:14:10"
																	},
																	{
																		"hexValue": "43616e6e6f74207472616e7366657220746f2074686520636f6e747261637420",
																		"kind": "string",
																		"nativeSrc": "12851:34:10",
																		"nodeType": "YulLiteral",
																		"src": "12851:34:10",
																		"type": "",
																		"value": "Cannot transfer to the contract "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12828:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12828:6:10"
																},
																"nativeSrc": "12828:58:10",
																"nodeType": "YulFunctionCall",
																"src": "12828:58:10"
															},
															"nativeSrc": "12828:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "12828:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "12907:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "12907:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12915:2:10",
																				"nodeType": "YulLiteral",
																				"src": "12915:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12903:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "12903:3:10"
																		},
																		"nativeSrc": "12903:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "12903:15:10"
																	},
																	{
																		"hexValue": "697473656c66",
																		"kind": "string",
																		"nativeSrc": "12920:8:10",
																		"nodeType": "YulLiteral",
																		"src": "12920:8:10",
																		"type": "",
																		"value": "itself"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12896:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "12896:6:10"
																},
																"nativeSrc": "12896:33:10",
																"nodeType": "YulFunctionCall",
																"src": "12896:33:10"
															},
															"nativeSrc": "12896:33:10",
															"nodeType": "YulExpressionStatement",
															"src": "12896:33:10"
														}
													]
												},
												"name": "store_literal_in_memory_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388",
												"nativeSrc": "12711:225:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "12809:6:10",
														"nodeType": "YulTypedName",
														"src": "12809:6:10",
														"type": ""
													}
												],
												"src": "12711:225:10"
											},
											{
												"body": {
													"nativeSrc": "13088:220:10",
													"nodeType": "YulBlock",
													"src": "13088:220:10",
													"statements": [
														{
															"nativeSrc": "13098:74:10",
															"nodeType": "YulAssignment",
															"src": "13098:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13164:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13164:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13169:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13169:2:10",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13105:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "13105:58:10"
																},
																"nativeSrc": "13105:67:10",
																"nodeType": "YulFunctionCall",
																"src": "13105:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "13098:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13098:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13270:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13270:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388",
																	"nativeSrc": "13181:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "13181:88:10"
																},
																"nativeSrc": "13181:93:10",
																"nodeType": "YulFunctionCall",
																"src": "13181:93:10"
															},
															"nativeSrc": "13181:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "13181:93:10"
														},
														{
															"nativeSrc": "13283:19:10",
															"nodeType": "YulAssignment",
															"src": "13283:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13294:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "13294:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13299:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13299:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13290:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13290:3:10"
																},
																"nativeSrc": "13290:12:10",
																"nodeType": "YulFunctionCall",
																"src": "13290:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13283:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13283:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "12942:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13076:3:10",
														"nodeType": "YulTypedName",
														"src": "13076:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13084:3:10",
														"nodeType": "YulTypedName",
														"src": "13084:3:10",
														"type": ""
													}
												],
												"src": "12942:366:10"
											},
											{
												"body": {
													"nativeSrc": "13485:248:10",
													"nodeType": "YulBlock",
													"src": "13485:248:10",
													"statements": [
														{
															"nativeSrc": "13495:26:10",
															"nodeType": "YulAssignment",
															"src": "13495:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13507:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "13507:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13518:2:10",
																		"nodeType": "YulLiteral",
																		"src": "13518:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13503:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "13503:3:10"
																},
																"nativeSrc": "13503:18:10",
																"nodeType": "YulFunctionCall",
																"src": "13503:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13495:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13495:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13542:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13542:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13553:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13553:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13538:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13538:3:10"
																		},
																		"nativeSrc": "13538:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13538:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "13561:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "13561:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "13567:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "13567:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "13557:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13557:3:10"
																		},
																		"nativeSrc": "13557:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13557:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13531:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13531:6:10"
																},
																"nativeSrc": "13531:47:10",
																"nodeType": "YulFunctionCall",
																"src": "13531:47:10"
															},
															"nativeSrc": "13531:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "13531:47:10"
														},
														{
															"nativeSrc": "13587:139:10",
															"nodeType": "YulAssignment",
															"src": "13587:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "13721:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "13721:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "13595:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "13595:124:10"
																},
																"nativeSrc": "13595:131:10",
																"nodeType": "YulFunctionCall",
																"src": "13595:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "13587:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "13587:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13314:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13465:9:10",
														"nodeType": "YulTypedName",
														"src": "13465:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13480:4:10",
														"nodeType": "YulTypedName",
														"src": "13480:4:10",
														"type": ""
													}
												],
												"src": "13314:419:10"
											},
											{
												"body": {
													"nativeSrc": "13845:75:10",
													"nodeType": "YulBlock",
													"src": "13845:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "13867:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "13867:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13875:1:10",
																				"nodeType": "YulLiteral",
																				"src": "13875:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13863:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "13863:3:10"
																		},
																		"nativeSrc": "13863:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "13863:14:10"
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d207472616e7366657220616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "13879:33:10",
																		"nodeType": "YulLiteral",
																		"src": "13879:33:10",
																		"type": "",
																		"value": "Exceeds maximum transfer amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13856:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "13856:6:10"
																},
																"nativeSrc": "13856:57:10",
																"nodeType": "YulFunctionCall",
																"src": "13856:57:10"
															},
															"nativeSrc": "13856:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "13856:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef",
												"nativeSrc": "13739:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "13837:6:10",
														"nodeType": "YulTypedName",
														"src": "13837:6:10",
														"type": ""
													}
												],
												"src": "13739:181:10"
											},
											{
												"body": {
													"nativeSrc": "14072:220:10",
													"nodeType": "YulBlock",
													"src": "14072:220:10",
													"statements": [
														{
															"nativeSrc": "14082:74:10",
															"nodeType": "YulAssignment",
															"src": "14082:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14148:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14148:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14153:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14153:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14089:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "14089:58:10"
																},
																"nativeSrc": "14089:67:10",
																"nodeType": "YulFunctionCall",
																"src": "14089:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14082:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14082:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14254:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14254:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef",
																	"nativeSrc": "14165:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "14165:88:10"
																},
																"nativeSrc": "14165:93:10",
																"nodeType": "YulFunctionCall",
																"src": "14165:93:10"
															},
															"nativeSrc": "14165:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "14165:93:10"
														},
														{
															"nativeSrc": "14267:19:10",
															"nodeType": "YulAssignment",
															"src": "14267:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14278:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "14278:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14283:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14283:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14274:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14274:3:10"
																},
																"nativeSrc": "14274:12:10",
																"nodeType": "YulFunctionCall",
																"src": "14274:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14267:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14267:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "13926:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14060:3:10",
														"nodeType": "YulTypedName",
														"src": "14060:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14068:3:10",
														"nodeType": "YulTypedName",
														"src": "14068:3:10",
														"type": ""
													}
												],
												"src": "13926:366:10"
											},
											{
												"body": {
													"nativeSrc": "14469:248:10",
													"nodeType": "YulBlock",
													"src": "14469:248:10",
													"statements": [
														{
															"nativeSrc": "14479:26:10",
															"nodeType": "YulAssignment",
															"src": "14479:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14491:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "14491:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14502:2:10",
																		"nodeType": "YulLiteral",
																		"src": "14502:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14487:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14487:3:10"
																},
																"nativeSrc": "14487:18:10",
																"nodeType": "YulFunctionCall",
																"src": "14487:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14479:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14479:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14526:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14526:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14537:1:10",
																				"nodeType": "YulLiteral",
																				"src": "14537:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14522:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14522:3:10"
																		},
																		"nativeSrc": "14522:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14522:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "14545:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "14545:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14551:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "14551:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14541:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "14541:3:10"
																		},
																		"nativeSrc": "14541:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "14541:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14515:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14515:6:10"
																},
																"nativeSrc": "14515:47:10",
																"nodeType": "YulFunctionCall",
																"src": "14515:47:10"
															},
															"nativeSrc": "14515:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "14515:47:10"
														},
														{
															"nativeSrc": "14571:139:10",
															"nodeType": "YulAssignment",
															"src": "14571:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "14705:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "14705:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "14579:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "14579:124:10"
																},
																"nativeSrc": "14579:131:10",
																"nodeType": "YulFunctionCall",
																"src": "14579:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14571:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "14571:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14298:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14449:9:10",
														"nodeType": "YulTypedName",
														"src": "14449:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14464:4:10",
														"nodeType": "YulTypedName",
														"src": "14464:4:10",
														"type": ""
													}
												],
												"src": "14298:419:10"
											},
											{
												"body": {
													"nativeSrc": "14771:362:10",
													"nodeType": "YulBlock",
													"src": "14771:362:10",
													"statements": [
														{
															"nativeSrc": "14781:25:10",
															"nodeType": "YulAssignment",
															"src": "14781:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14804:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14804:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14786:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14786:17:10"
																},
																"nativeSrc": "14786:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14786:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14781:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14781:1:10"
																}
															]
														},
														{
															"nativeSrc": "14815:25:10",
															"nodeType": "YulAssignment",
															"src": "14815:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14838:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14838:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14820:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14820:17:10"
																},
																"nativeSrc": "14820:20:10",
																"nodeType": "YulFunctionCall",
																"src": "14820:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14815:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "14815:1:10"
																}
															]
														},
														{
															"nativeSrc": "14849:28:10",
															"nodeType": "YulVariableDeclaration",
															"src": "14849:28:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14872:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14872:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14875:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "14875:1:10"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "14868:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "14868:3:10"
																},
																"nativeSrc": "14868:9:10",
																"nodeType": "YulFunctionCall",
																"src": "14868:9:10"
															},
															"variables": [
																{
																	"name": "product_raw",
																	"nativeSrc": "14853:11:10",
																	"nodeType": "YulTypedName",
																	"src": "14853:11:10",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "14886:41:10",
															"nodeType": "YulAssignment",
															"src": "14886:41:10",
															"value": {
																"arguments": [
																	{
																		"name": "product_raw",
																		"nativeSrc": "14915:11:10",
																		"nodeType": "YulIdentifier",
																		"src": "14915:11:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14897:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "14897:17:10"
																},
																"nativeSrc": "14897:30:10",
																"nodeType": "YulFunctionCall",
																"src": "14897:30:10"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "14886:7:10",
																	"nodeType": "YulIdentifier",
																	"src": "14886:7:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15104:22:10",
																"nodeType": "YulBlock",
																"src": "15104:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15106:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15106:16:10"
																			},
																			"nativeSrc": "15106:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15106:18:10"
																		},
																		"nativeSrc": "15106:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15106:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "15037:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "15037:1:10"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "15030:6:10",
																					"nodeType": "YulIdentifier",
																					"src": "15030:6:10"
																				},
																				"nativeSrc": "15030:9:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15030:9:10"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "15060:1:10",
																						"nodeType": "YulIdentifier",
																						"src": "15060:1:10"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "15067:7:10",
																								"nodeType": "YulIdentifier",
																								"src": "15067:7:10"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "15076:1:10",
																								"nodeType": "YulIdentifier",
																								"src": "15076:1:10"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "15063:3:10",
																							"nodeType": "YulIdentifier",
																							"src": "15063:3:10"
																						},
																						"nativeSrc": "15063:15:10",
																						"nodeType": "YulFunctionCall",
																						"src": "15063:15:10"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "15057:2:10",
																					"nodeType": "YulIdentifier",
																					"src": "15057:2:10"
																				},
																				"nativeSrc": "15057:22:10",
																				"nodeType": "YulFunctionCall",
																				"src": "15057:22:10"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "15010:2:10",
																			"nodeType": "YulIdentifier",
																			"src": "15010:2:10"
																		},
																		"nativeSrc": "15010:83:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15010:83:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "14990:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "14990:6:10"
																},
																"nativeSrc": "14990:113:10",
																"nodeType": "YulFunctionCall",
																"src": "14990:113:10"
															},
															"nativeSrc": "14987:139:10",
															"nodeType": "YulIf",
															"src": "14987:139:10"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "14723:410:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14754:1:10",
														"nodeType": "YulTypedName",
														"src": "14754:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14757:1:10",
														"nodeType": "YulTypedName",
														"src": "14757:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "14763:7:10",
														"nodeType": "YulTypedName",
														"src": "14763:7:10",
														"type": ""
													}
												],
												"src": "14723:410:10"
											},
											{
												"body": {
													"nativeSrc": "15167:152:10",
													"nodeType": "YulBlock",
													"src": "15167:152:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15184:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15184:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15187:77:10",
																		"nodeType": "YulLiteral",
																		"src": "15187:77:10",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15177:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15177:6:10"
																},
																"nativeSrc": "15177:88:10",
																"nodeType": "YulFunctionCall",
																"src": "15177:88:10"
															},
															"nativeSrc": "15177:88:10",
															"nodeType": "YulExpressionStatement",
															"src": "15177:88:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15281:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15281:1:10",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15284:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15284:4:10",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15274:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15274:6:10"
																},
																"nativeSrc": "15274:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15274:15:10"
															},
															"nativeSrc": "15274:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15274:15:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "15305:1:10",
																		"nodeType": "YulLiteral",
																		"src": "15305:1:10",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15308:4:10",
																		"nodeType": "YulLiteral",
																		"src": "15308:4:10",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "15298:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15298:6:10"
																},
																"nativeSrc": "15298:15:10",
																"nodeType": "YulFunctionCall",
																"src": "15298:15:10"
															},
															"nativeSrc": "15298:15:10",
															"nodeType": "YulExpressionStatement",
															"src": "15298:15:10"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "15139:180:10",
												"nodeType": "YulFunctionDefinition",
												"src": "15139:180:10"
											},
											{
												"body": {
													"nativeSrc": "15367:143:10",
													"nodeType": "YulBlock",
													"src": "15367:143:10",
													"statements": [
														{
															"nativeSrc": "15377:25:10",
															"nodeType": "YulAssignment",
															"src": "15377:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15400:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15400:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15382:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15382:17:10"
																},
																"nativeSrc": "15382:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15382:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15377:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15377:1:10"
																}
															]
														},
														{
															"nativeSrc": "15411:25:10",
															"nodeType": "YulAssignment",
															"src": "15411:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15434:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15434:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15416:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15416:17:10"
																},
																"nativeSrc": "15416:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15416:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15411:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15411:1:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15458:22:10",
																"nodeType": "YulBlock",
																"src": "15458:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nativeSrc": "15460:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15460:16:10"
																			},
																			"nativeSrc": "15460:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15460:18:10"
																		},
																		"nativeSrc": "15460:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15460:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15455:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15455:1:10"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "15448:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15448:6:10"
																},
																"nativeSrc": "15448:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15448:9:10"
															},
															"nativeSrc": "15445:35:10",
															"nodeType": "YulIf",
															"src": "15445:35:10"
														},
														{
															"nativeSrc": "15490:14:10",
															"nodeType": "YulAssignment",
															"src": "15490:14:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15499:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15499:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15502:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15502:1:10"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "15495:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15495:3:10"
																},
																"nativeSrc": "15495:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15495:9:10"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "15490:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15490:1:10"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "15325:185:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15356:1:10",
														"nodeType": "YulTypedName",
														"src": "15356:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15359:1:10",
														"nodeType": "YulTypedName",
														"src": "15359:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "15365:1:10",
														"nodeType": "YulTypedName",
														"src": "15365:1:10",
														"type": ""
													}
												],
												"src": "15325:185:10"
											},
											{
												"body": {
													"nativeSrc": "15560:147:10",
													"nodeType": "YulBlock",
													"src": "15560:147:10",
													"statements": [
														{
															"nativeSrc": "15570:25:10",
															"nodeType": "YulAssignment",
															"src": "15570:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15593:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15593:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15575:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15575:17:10"
																},
																"nativeSrc": "15575:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15575:20:10"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15570:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15570:1:10"
																}
															]
														},
														{
															"nativeSrc": "15604:25:10",
															"nodeType": "YulAssignment",
															"src": "15604:25:10",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15627:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15627:1:10"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15609:17:10",
																	"nodeType": "YulIdentifier",
																	"src": "15609:17:10"
																},
																"nativeSrc": "15609:20:10",
																"nodeType": "YulFunctionCall",
																"src": "15609:20:10"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15604:1:10",
																	"nodeType": "YulIdentifier",
																	"src": "15604:1:10"
																}
															]
														},
														{
															"nativeSrc": "15638:16:10",
															"nodeType": "YulAssignment",
															"src": "15638:16:10",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15649:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15649:1:10"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15652:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15652:1:10"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15645:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15645:3:10"
																},
																"nativeSrc": "15645:9:10",
																"nodeType": "YulFunctionCall",
																"src": "15645:9:10"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15638:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "15638:3:10"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15678:22:10",
																"nodeType": "YulBlock",
																"src": "15678:22:10",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15680:16:10",
																				"nodeType": "YulIdentifier",
																				"src": "15680:16:10"
																			},
																			"nativeSrc": "15680:18:10",
																			"nodeType": "YulFunctionCall",
																			"src": "15680:18:10"
																		},
																		"nativeSrc": "15680:18:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "15680:18:10"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15670:1:10",
																		"nodeType": "YulIdentifier",
																		"src": "15670:1:10"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15673:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "15673:3:10"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15667:2:10",
																	"nodeType": "YulIdentifier",
																	"src": "15667:2:10"
																},
																"nativeSrc": "15667:10:10",
																"nodeType": "YulFunctionCall",
																"src": "15667:10:10"
															},
															"nativeSrc": "15664:36:10",
															"nodeType": "YulIf",
															"src": "15664:36:10"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15516:191:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15547:1:10",
														"nodeType": "YulTypedName",
														"src": "15547:1:10",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15550:1:10",
														"nodeType": "YulTypedName",
														"src": "15550:1:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15556:3:10",
														"nodeType": "YulTypedName",
														"src": "15556:3:10",
														"type": ""
													}
												],
												"src": "15516:191:10"
											},
											{
												"body": {
													"nativeSrc": "15819:114:10",
													"nodeType": "YulBlock",
													"src": "15819:114:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15841:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15841:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15849:1:10",
																				"nodeType": "YulLiteral",
																				"src": "15849:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15837:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15837:3:10"
																		},
																		"nativeSrc": "15837:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15837:14:10"
																	},
																	{
																		"hexValue": "45786365656473206d6178696d756d20656e676167656d656e7420706f696e74",
																		"kind": "string",
																		"nativeSrc": "15853:34:10",
																		"nodeType": "YulLiteral",
																		"src": "15853:34:10",
																		"type": "",
																		"value": "Exceeds maximum engagement point"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15830:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15830:6:10"
																},
																"nativeSrc": "15830:58:10",
																"nodeType": "YulFunctionCall",
																"src": "15830:58:10"
															},
															"nativeSrc": "15830:58:10",
															"nodeType": "YulExpressionStatement",
															"src": "15830:58:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "15909:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "15909:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15917:2:10",
																				"nodeType": "YulLiteral",
																				"src": "15917:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15905:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "15905:3:10"
																		},
																		"nativeSrc": "15905:15:10",
																		"nodeType": "YulFunctionCall",
																		"src": "15905:15:10"
																	},
																	{
																		"hexValue": "73",
																		"kind": "string",
																		"nativeSrc": "15922:3:10",
																		"nodeType": "YulLiteral",
																		"src": "15922:3:10",
																		"type": "",
																		"value": "s"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15898:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "15898:6:10"
																},
																"nativeSrc": "15898:28:10",
																"nodeType": "YulFunctionCall",
																"src": "15898:28:10"
															},
															"nativeSrc": "15898:28:10",
															"nodeType": "YulExpressionStatement",
															"src": "15898:28:10"
														}
													]
												},
												"name": "store_literal_in_memory_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a",
												"nativeSrc": "15713:220:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "15811:6:10",
														"nodeType": "YulTypedName",
														"src": "15811:6:10",
														"type": ""
													}
												],
												"src": "15713:220:10"
											},
											{
												"body": {
													"nativeSrc": "16085:220:10",
													"nodeType": "YulBlock",
													"src": "16085:220:10",
													"statements": [
														{
															"nativeSrc": "16095:74:10",
															"nodeType": "YulAssignment",
															"src": "16095:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16161:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16161:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16166:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16166:2:10",
																		"type": "",
																		"value": "33"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16102:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "16102:58:10"
																},
																"nativeSrc": "16102:67:10",
																"nodeType": "YulFunctionCall",
																"src": "16102:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "16095:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16095:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16267:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16267:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a",
																	"nativeSrc": "16178:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "16178:88:10"
																},
																"nativeSrc": "16178:93:10",
																"nodeType": "YulFunctionCall",
																"src": "16178:93:10"
															},
															"nativeSrc": "16178:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "16178:93:10"
														},
														{
															"nativeSrc": "16280:19:10",
															"nodeType": "YulAssignment",
															"src": "16280:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16291:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "16291:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16296:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16296:2:10",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16287:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16287:3:10"
																},
																"nativeSrc": "16287:12:10",
																"nodeType": "YulFunctionCall",
																"src": "16287:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "16280:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16280:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "15939:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "16073:3:10",
														"nodeType": "YulTypedName",
														"src": "16073:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "16081:3:10",
														"nodeType": "YulTypedName",
														"src": "16081:3:10",
														"type": ""
													}
												],
												"src": "15939:366:10"
											},
											{
												"body": {
													"nativeSrc": "16482:248:10",
													"nodeType": "YulBlock",
													"src": "16482:248:10",
													"statements": [
														{
															"nativeSrc": "16492:26:10",
															"nodeType": "YulAssignment",
															"src": "16492:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16504:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "16504:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16515:2:10",
																		"nodeType": "YulLiteral",
																		"src": "16515:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16500:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "16500:3:10"
																},
																"nativeSrc": "16500:18:10",
																"nodeType": "YulFunctionCall",
																"src": "16500:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16492:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16492:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16539:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16539:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16550:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16550:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16535:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16535:3:10"
																		},
																		"nativeSrc": "16535:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16535:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "16558:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "16558:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "16564:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "16564:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "16554:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16554:3:10"
																		},
																		"nativeSrc": "16554:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16554:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16528:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16528:6:10"
																},
																"nativeSrc": "16528:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16528:47:10"
															},
															"nativeSrc": "16528:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16528:47:10"
														},
														{
															"nativeSrc": "16584:139:10",
															"nodeType": "YulAssignment",
															"src": "16584:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "16718:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "16718:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "16592:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "16592:124:10"
																},
																"nativeSrc": "16592:131:10",
																"nodeType": "YulFunctionCall",
																"src": "16592:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16584:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "16584:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16311:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16462:9:10",
														"nodeType": "YulTypedName",
														"src": "16462:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16477:4:10",
														"nodeType": "YulTypedName",
														"src": "16477:4:10",
														"type": ""
													}
												],
												"src": "16311:419:10"
											},
											{
												"body": {
													"nativeSrc": "16842:65:10",
													"nodeType": "YulBlock",
													"src": "16842:65:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "16864:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "16864:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16872:1:10",
																				"nodeType": "YulLiteral",
																				"src": "16872:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16860:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "16860:3:10"
																		},
																		"nativeSrc": "16860:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "16860:14:10"
																	},
																	{
																		"hexValue": "436c61696d20636f6f6c646f776e20616374697665",
																		"kind": "string",
																		"nativeSrc": "16876:23:10",
																		"nodeType": "YulLiteral",
																		"src": "16876:23:10",
																		"type": "",
																		"value": "Claim cooldown active"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16853:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "16853:6:10"
																},
																"nativeSrc": "16853:47:10",
																"nodeType": "YulFunctionCall",
																"src": "16853:47:10"
															},
															"nativeSrc": "16853:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "16853:47:10"
														}
													]
												},
												"name": "store_literal_in_memory_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32",
												"nativeSrc": "16736:171:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "16834:6:10",
														"nodeType": "YulTypedName",
														"src": "16834:6:10",
														"type": ""
													}
												],
												"src": "16736:171:10"
											},
											{
												"body": {
													"nativeSrc": "17059:220:10",
													"nodeType": "YulBlock",
													"src": "17059:220:10",
													"statements": [
														{
															"nativeSrc": "17069:74:10",
															"nodeType": "YulAssignment",
															"src": "17069:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17135:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17135:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17140:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17140:2:10",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17076:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "17076:58:10"
																},
																"nativeSrc": "17076:67:10",
																"nodeType": "YulFunctionCall",
																"src": "17076:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "17069:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17069:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17241:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17241:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32",
																	"nativeSrc": "17152:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "17152:88:10"
																},
																"nativeSrc": "17152:93:10",
																"nodeType": "YulFunctionCall",
																"src": "17152:93:10"
															},
															"nativeSrc": "17152:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "17152:93:10"
														},
														{
															"nativeSrc": "17254:19:10",
															"nodeType": "YulAssignment",
															"src": "17254:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "17265:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "17265:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17270:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17270:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17261:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17261:3:10"
																},
																"nativeSrc": "17261:12:10",
																"nodeType": "YulFunctionCall",
																"src": "17261:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "17254:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17254:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "16913:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "17047:3:10",
														"nodeType": "YulTypedName",
														"src": "17047:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "17055:3:10",
														"nodeType": "YulTypedName",
														"src": "17055:3:10",
														"type": ""
													}
												],
												"src": "16913:366:10"
											},
											{
												"body": {
													"nativeSrc": "17456:248:10",
													"nodeType": "YulBlock",
													"src": "17456:248:10",
													"statements": [
														{
															"nativeSrc": "17466:26:10",
															"nodeType": "YulAssignment",
															"src": "17466:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17478:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "17478:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17489:2:10",
																		"nodeType": "YulLiteral",
																		"src": "17489:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17474:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "17474:3:10"
																},
																"nativeSrc": "17474:18:10",
																"nodeType": "YulFunctionCall",
																"src": "17474:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17466:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17466:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17513:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17513:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17524:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17524:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17509:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17509:3:10"
																		},
																		"nativeSrc": "17509:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17509:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "17532:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "17532:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17538:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "17538:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17528:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17528:3:10"
																		},
																		"nativeSrc": "17528:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17528:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17502:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17502:6:10"
																},
																"nativeSrc": "17502:47:10",
																"nodeType": "YulFunctionCall",
																"src": "17502:47:10"
															},
															"nativeSrc": "17502:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "17502:47:10"
														},
														{
															"nativeSrc": "17558:139:10",
															"nodeType": "YulAssignment",
															"src": "17558:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "17692:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "17692:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "17566:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "17566:124:10"
																},
																"nativeSrc": "17566:131:10",
																"nodeType": "YulFunctionCall",
																"src": "17566:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17558:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "17558:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "17285:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17436:9:10",
														"nodeType": "YulTypedName",
														"src": "17436:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17451:4:10",
														"nodeType": "YulTypedName",
														"src": "17451:4:10",
														"type": ""
													}
												],
												"src": "17285:419:10"
											},
											{
												"body": {
													"nativeSrc": "17816:64:10",
													"nodeType": "YulBlock",
													"src": "17816:64:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "17838:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "17838:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17846:1:10",
																				"nodeType": "YulLiteral",
																				"src": "17846:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17834:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "17834:3:10"
																		},
																		"nativeSrc": "17834:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "17834:14:10"
																	},
																	{
																		"hexValue": "4e6f207265776172647320617661696c61626c65",
																		"kind": "string",
																		"nativeSrc": "17850:22:10",
																		"nodeType": "YulLiteral",
																		"src": "17850:22:10",
																		"type": "",
																		"value": "No rewards available"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17827:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "17827:6:10"
																},
																"nativeSrc": "17827:46:10",
																"nodeType": "YulFunctionCall",
																"src": "17827:46:10"
															},
															"nativeSrc": "17827:46:10",
															"nodeType": "YulExpressionStatement",
															"src": "17827:46:10"
														}
													]
												},
												"name": "store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
												"nativeSrc": "17710:170:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "17808:6:10",
														"nodeType": "YulTypedName",
														"src": "17808:6:10",
														"type": ""
													}
												],
												"src": "17710:170:10"
											},
											{
												"body": {
													"nativeSrc": "18032:220:10",
													"nodeType": "YulBlock",
													"src": "18032:220:10",
													"statements": [
														{
															"nativeSrc": "18042:74:10",
															"nodeType": "YulAssignment",
															"src": "18042:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18108:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18108:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18113:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18113:2:10",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18049:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "18049:58:10"
																},
																"nativeSrc": "18049:67:10",
																"nodeType": "YulFunctionCall",
																"src": "18049:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18042:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18042:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18214:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18214:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																	"nativeSrc": "18125:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "18125:88:10"
																},
																"nativeSrc": "18125:93:10",
																"nodeType": "YulFunctionCall",
																"src": "18125:93:10"
															},
															"nativeSrc": "18125:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "18125:93:10"
														},
														{
															"nativeSrc": "18227:19:10",
															"nodeType": "YulAssignment",
															"src": "18227:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18238:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "18238:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18243:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18243:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18234:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18234:3:10"
																},
																"nativeSrc": "18234:12:10",
																"nodeType": "YulFunctionCall",
																"src": "18234:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18227:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18227:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "17886:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18020:3:10",
														"nodeType": "YulTypedName",
														"src": "18020:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18028:3:10",
														"nodeType": "YulTypedName",
														"src": "18028:3:10",
														"type": ""
													}
												],
												"src": "17886:366:10"
											},
											{
												"body": {
													"nativeSrc": "18429:248:10",
													"nodeType": "YulBlock",
													"src": "18429:248:10",
													"statements": [
														{
															"nativeSrc": "18439:26:10",
															"nodeType": "YulAssignment",
															"src": "18439:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "18451:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "18451:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18462:2:10",
																		"nodeType": "YulLiteral",
																		"src": "18462:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18447:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "18447:3:10"
																},
																"nativeSrc": "18447:18:10",
																"nodeType": "YulFunctionCall",
																"src": "18447:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18439:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18439:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "18486:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18486:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18497:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18497:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18482:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18482:3:10"
																		},
																		"nativeSrc": "18482:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18482:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "18505:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "18505:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "18511:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "18511:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "18501:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18501:3:10"
																		},
																		"nativeSrc": "18501:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18501:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18475:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18475:6:10"
																},
																"nativeSrc": "18475:47:10",
																"nodeType": "YulFunctionCall",
																"src": "18475:47:10"
															},
															"nativeSrc": "18475:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "18475:47:10"
														},
														{
															"nativeSrc": "18531:139:10",
															"nodeType": "YulAssignment",
															"src": "18531:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "18665:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "18665:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "18539:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "18539:124:10"
																},
																"nativeSrc": "18539:131:10",
																"nodeType": "YulFunctionCall",
																"src": "18539:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "18531:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "18531:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "18258:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "18409:9:10",
														"nodeType": "YulTypedName",
														"src": "18409:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "18424:4:10",
														"nodeType": "YulTypedName",
														"src": "18424:4:10",
														"type": ""
													}
												],
												"src": "18258:419:10"
											},
											{
												"body": {
													"nativeSrc": "18789:70:10",
													"nodeType": "YulBlock",
													"src": "18789:70:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "18811:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "18811:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18819:1:10",
																				"nodeType": "YulLiteral",
																				"src": "18819:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18807:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "18807:3:10"
																		},
																		"nativeSrc": "18807:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "18807:14:10"
																	},
																	{
																		"hexValue": "496e73756666696369656e742072657761726420737570706c79",
																		"kind": "string",
																		"nativeSrc": "18823:28:10",
																		"nodeType": "YulLiteral",
																		"src": "18823:28:10",
																		"type": "",
																		"value": "Insufficient reward supply"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18800:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "18800:6:10"
																},
																"nativeSrc": "18800:52:10",
																"nodeType": "YulFunctionCall",
																"src": "18800:52:10"
															},
															"nativeSrc": "18800:52:10",
															"nodeType": "YulExpressionStatement",
															"src": "18800:52:10"
														}
													]
												},
												"name": "store_literal_in_memory_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a",
												"nativeSrc": "18683:176:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "18781:6:10",
														"nodeType": "YulTypedName",
														"src": "18781:6:10",
														"type": ""
													}
												],
												"src": "18683:176:10"
											},
											{
												"body": {
													"nativeSrc": "19011:220:10",
													"nodeType": "YulBlock",
													"src": "19011:220:10",
													"statements": [
														{
															"nativeSrc": "19021:74:10",
															"nodeType": "YulAssignment",
															"src": "19021:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19087:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19087:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19092:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19092:2:10",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19028:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "19028:58:10"
																},
																"nativeSrc": "19028:67:10",
																"nodeType": "YulFunctionCall",
																"src": "19028:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19021:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19021:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19193:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19193:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a",
																	"nativeSrc": "19104:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "19104:88:10"
																},
																"nativeSrc": "19104:93:10",
																"nodeType": "YulFunctionCall",
																"src": "19104:93:10"
															},
															"nativeSrc": "19104:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "19104:93:10"
														},
														{
															"nativeSrc": "19206:19:10",
															"nodeType": "YulAssignment",
															"src": "19206:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "19217:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "19217:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19222:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19222:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19213:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19213:3:10"
																},
																"nativeSrc": "19213:12:10",
																"nodeType": "YulFunctionCall",
																"src": "19213:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19206:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19206:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "18865:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18999:3:10",
														"nodeType": "YulTypedName",
														"src": "18999:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19007:3:10",
														"nodeType": "YulTypedName",
														"src": "19007:3:10",
														"type": ""
													}
												],
												"src": "18865:366:10"
											},
											{
												"body": {
													"nativeSrc": "19408:248:10",
													"nodeType": "YulBlock",
													"src": "19408:248:10",
													"statements": [
														{
															"nativeSrc": "19418:26:10",
															"nodeType": "YulAssignment",
															"src": "19418:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "19430:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "19430:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "19441:2:10",
																		"nodeType": "YulLiteral",
																		"src": "19441:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "19426:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "19426:3:10"
																},
																"nativeSrc": "19426:18:10",
																"nodeType": "YulFunctionCall",
																"src": "19426:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19418:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19418:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "19465:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19465:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19476:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19476:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19461:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19461:3:10"
																		},
																		"nativeSrc": "19461:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19461:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "19484:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "19484:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "19490:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "19490:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "19480:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19480:3:10"
																		},
																		"nativeSrc": "19480:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19480:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19454:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19454:6:10"
																},
																"nativeSrc": "19454:47:10",
																"nodeType": "YulFunctionCall",
																"src": "19454:47:10"
															},
															"nativeSrc": "19454:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "19454:47:10"
														},
														{
															"nativeSrc": "19510:139:10",
															"nodeType": "YulAssignment",
															"src": "19510:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "19644:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "19644:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "19518:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "19518:124:10"
																},
																"nativeSrc": "19518:131:10",
																"nodeType": "YulFunctionCall",
																"src": "19518:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "19510:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "19510:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "19237:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "19388:9:10",
														"nodeType": "YulTypedName",
														"src": "19388:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "19403:4:10",
														"nodeType": "YulTypedName",
														"src": "19403:4:10",
														"type": ""
													}
												],
												"src": "19237:419:10"
											},
											{
												"body": {
													"nativeSrc": "19768:74:10",
													"nodeType": "YulBlock",
													"src": "19768:74:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "19790:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "19790:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "19798:1:10",
																				"nodeType": "YulLiteral",
																				"src": "19798:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "19786:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "19786:3:10"
																		},
																		"nativeSrc": "19786:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "19786:14:10"
																	},
																	{
																		"hexValue": "54617820726174652065786365656473206d6178696d756d206c696d6974",
																		"kind": "string",
																		"nativeSrc": "19802:32:10",
																		"nodeType": "YulLiteral",
																		"src": "19802:32:10",
																		"type": "",
																		"value": "Tax rate exceeds maximum limit"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "19779:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "19779:6:10"
																},
																"nativeSrc": "19779:56:10",
																"nodeType": "YulFunctionCall",
																"src": "19779:56:10"
															},
															"nativeSrc": "19779:56:10",
															"nodeType": "YulExpressionStatement",
															"src": "19779:56:10"
														}
													]
												},
												"name": "store_literal_in_memory_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978",
												"nativeSrc": "19662:180:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "19760:6:10",
														"nodeType": "YulTypedName",
														"src": "19760:6:10",
														"type": ""
													}
												],
												"src": "19662:180:10"
											},
											{
												"body": {
													"nativeSrc": "19994:220:10",
													"nodeType": "YulBlock",
													"src": "19994:220:10",
													"statements": [
														{
															"nativeSrc": "20004:74:10",
															"nodeType": "YulAssignment",
															"src": "20004:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20070:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20070:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20075:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20075:2:10",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20011:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "20011:58:10"
																},
																"nativeSrc": "20011:67:10",
																"nodeType": "YulFunctionCall",
																"src": "20011:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "20004:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20004:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20176:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20176:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978",
																	"nativeSrc": "20087:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "20087:88:10"
																},
																"nativeSrc": "20087:93:10",
																"nodeType": "YulFunctionCall",
																"src": "20087:93:10"
															},
															"nativeSrc": "20087:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "20087:93:10"
														},
														{
															"nativeSrc": "20189:19:10",
															"nodeType": "YulAssignment",
															"src": "20189:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "20200:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "20200:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20205:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20205:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20196:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20196:3:10"
																},
																"nativeSrc": "20196:12:10",
																"nodeType": "YulFunctionCall",
																"src": "20196:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "20189:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20189:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "19848:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19982:3:10",
														"nodeType": "YulTypedName",
														"src": "19982:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19990:3:10",
														"nodeType": "YulTypedName",
														"src": "19990:3:10",
														"type": ""
													}
												],
												"src": "19848:366:10"
											},
											{
												"body": {
													"nativeSrc": "20391:248:10",
													"nodeType": "YulBlock",
													"src": "20391:248:10",
													"statements": [
														{
															"nativeSrc": "20401:26:10",
															"nodeType": "YulAssignment",
															"src": "20401:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20413:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20413:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20424:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20424:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20409:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20409:3:10"
																},
																"nativeSrc": "20409:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20409:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20401:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20401:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20448:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20448:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20459:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20459:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20444:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20444:3:10"
																		},
																		"nativeSrc": "20444:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20444:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "20467:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "20467:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "20473:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20473:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "20463:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20463:3:10"
																		},
																		"nativeSrc": "20463:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20463:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "20437:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "20437:6:10"
																},
																"nativeSrc": "20437:47:10",
																"nodeType": "YulFunctionCall",
																"src": "20437:47:10"
															},
															"nativeSrc": "20437:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "20437:47:10"
														},
														{
															"nativeSrc": "20493:139:10",
															"nodeType": "YulAssignment",
															"src": "20493:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "20627:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "20627:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "20501:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "20501:124:10"
																},
																"nativeSrc": "20501:131:10",
																"nodeType": "YulFunctionCall",
																"src": "20501:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20493:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20493:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "20220:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20371:9:10",
														"nodeType": "YulTypedName",
														"src": "20371:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20386:4:10",
														"nodeType": "YulTypedName",
														"src": "20386:4:10",
														"type": ""
													}
												],
												"src": "20220:419:10"
											},
											{
												"body": {
													"nativeSrc": "20799:288:10",
													"nodeType": "YulBlock",
													"src": "20799:288:10",
													"statements": [
														{
															"nativeSrc": "20809:26:10",
															"nodeType": "YulAssignment",
															"src": "20809:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "20821:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "20821:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "20832:2:10",
																		"nodeType": "YulLiteral",
																		"src": "20832:2:10",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "20817:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "20817:3:10"
																},
																"nativeSrc": "20817:18:10",
																"nodeType": "YulFunctionCall",
																"src": "20817:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "20809:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "20809:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "20889:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20889:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20902:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20902:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20913:1:10",
																				"nodeType": "YulLiteral",
																				"src": "20913:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20898:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20898:3:10"
																		},
																		"nativeSrc": "20898:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20898:17:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "20845:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20845:43:10"
																},
																"nativeSrc": "20845:71:10",
																"nodeType": "YulFunctionCall",
																"src": "20845:71:10"
															},
															"nativeSrc": "20845:71:10",
															"nodeType": "YulExpressionStatement",
															"src": "20845:71:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "20970:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "20970:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "20983:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "20983:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "20994:2:10",
																				"nodeType": "YulLiteral",
																				"src": "20994:2:10",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "20979:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "20979:3:10"
																		},
																		"nativeSrc": "20979:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "20979:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "20926:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "20926:43:10"
																},
																"nativeSrc": "20926:72:10",
																"nodeType": "YulFunctionCall",
																"src": "20926:72:10"
															},
															"nativeSrc": "20926:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "20926:72:10"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "21052:6:10",
																		"nodeType": "YulIdentifier",
																		"src": "21052:6:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21065:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21065:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21076:2:10",
																				"nodeType": "YulLiteral",
																				"src": "21076:2:10",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21061:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21061:3:10"
																		},
																		"nativeSrc": "21061:18:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21061:18:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "21008:43:10",
																	"nodeType": "YulIdentifier",
																	"src": "21008:43:10"
																},
																"nativeSrc": "21008:72:10",
																"nodeType": "YulFunctionCall",
																"src": "21008:72:10"
															},
															"nativeSrc": "21008:72:10",
															"nodeType": "YulExpressionStatement",
															"src": "21008:72:10"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "20645:442:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "20755:9:10",
														"nodeType": "YulTypedName",
														"src": "20755:9:10",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "20767:6:10",
														"nodeType": "YulTypedName",
														"src": "20767:6:10",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "20775:6:10",
														"nodeType": "YulTypedName",
														"src": "20775:6:10",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "20783:6:10",
														"nodeType": "YulTypedName",
														"src": "20783:6:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "20794:4:10",
														"nodeType": "YulTypedName",
														"src": "20794:4:10",
														"type": ""
													}
												],
												"src": "20645:442:10"
											},
											{
												"body": {
													"nativeSrc": "21199:75:10",
													"nodeType": "YulBlock",
													"src": "21199:75:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "21221:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "21221:6:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21229:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21229:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21217:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21217:3:10"
																		},
																		"nativeSrc": "21217:14:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21217:14:10"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nativeSrc": "21233:33:10",
																		"nodeType": "YulLiteral",
																		"src": "21233:33:10",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21210:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21210:6:10"
																},
																"nativeSrc": "21210:57:10",
																"nodeType": "YulFunctionCall",
																"src": "21210:57:10"
															},
															"nativeSrc": "21210:57:10",
															"nodeType": "YulExpressionStatement",
															"src": "21210:57:10"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nativeSrc": "21093:181:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "21191:6:10",
														"nodeType": "YulTypedName",
														"src": "21191:6:10",
														"type": ""
													}
												],
												"src": "21093:181:10"
											},
											{
												"body": {
													"nativeSrc": "21426:220:10",
													"nodeType": "YulBlock",
													"src": "21426:220:10",
													"statements": [
														{
															"nativeSrc": "21436:74:10",
															"nodeType": "YulAssignment",
															"src": "21436:74:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21502:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21502:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21507:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21507:2:10",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21443:58:10",
																	"nodeType": "YulIdentifier",
																	"src": "21443:58:10"
																},
																"nativeSrc": "21443:67:10",
																"nodeType": "YulFunctionCall",
																"src": "21443:67:10"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "21436:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21436:3:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21608:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21608:3:10"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nativeSrc": "21519:88:10",
																	"nodeType": "YulIdentifier",
																	"src": "21519:88:10"
																},
																"nativeSrc": "21519:93:10",
																"nodeType": "YulFunctionCall",
																"src": "21519:93:10"
															},
															"nativeSrc": "21519:93:10",
															"nodeType": "YulExpressionStatement",
															"src": "21519:93:10"
														},
														{
															"nativeSrc": "21621:19:10",
															"nodeType": "YulAssignment",
															"src": "21621:19:10",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "21632:3:10",
																		"nodeType": "YulIdentifier",
																		"src": "21632:3:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21637:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21637:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21628:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21628:3:10"
																},
																"nativeSrc": "21628:12:10",
																"nodeType": "YulFunctionCall",
																"src": "21628:12:10"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "21621:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21621:3:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "21280:366:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "21414:3:10",
														"nodeType": "YulTypedName",
														"src": "21414:3:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "21422:3:10",
														"nodeType": "YulTypedName",
														"src": "21422:3:10",
														"type": ""
													}
												],
												"src": "21280:366:10"
											},
											{
												"body": {
													"nativeSrc": "21823:248:10",
													"nodeType": "YulBlock",
													"src": "21823:248:10",
													"statements": [
														{
															"nativeSrc": "21833:26:10",
															"nodeType": "YulAssignment",
															"src": "21833:26:10",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "21845:9:10",
																		"nodeType": "YulIdentifier",
																		"src": "21845:9:10"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "21856:2:10",
																		"nodeType": "YulLiteral",
																		"src": "21856:2:10",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "21841:3:10",
																	"nodeType": "YulIdentifier",
																	"src": "21841:3:10"
																},
																"nativeSrc": "21841:18:10",
																"nodeType": "YulFunctionCall",
																"src": "21841:18:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21833:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21833:4:10"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "21880:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21880:9:10"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "21891:1:10",
																				"nodeType": "YulLiteral",
																				"src": "21891:1:10",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "21876:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21876:3:10"
																		},
																		"nativeSrc": "21876:17:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21876:17:10"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "21899:4:10",
																				"nodeType": "YulIdentifier",
																				"src": "21899:4:10"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "21905:9:10",
																				"nodeType": "YulIdentifier",
																				"src": "21905:9:10"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "21895:3:10",
																			"nodeType": "YulIdentifier",
																			"src": "21895:3:10"
																		},
																		"nativeSrc": "21895:20:10",
																		"nodeType": "YulFunctionCall",
																		"src": "21895:20:10"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "21869:6:10",
																	"nodeType": "YulIdentifier",
																	"src": "21869:6:10"
																},
																"nativeSrc": "21869:47:10",
																"nodeType": "YulFunctionCall",
																"src": "21869:47:10"
															},
															"nativeSrc": "21869:47:10",
															"nodeType": "YulExpressionStatement",
															"src": "21869:47:10"
														},
														{
															"nativeSrc": "21925:139:10",
															"nodeType": "YulAssignment",
															"src": "21925:139:10",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "22059:4:10",
																		"nodeType": "YulIdentifier",
																		"src": "22059:4:10"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "21933:124:10",
																	"nodeType": "YulIdentifier",
																	"src": "21933:124:10"
																},
																"nativeSrc": "21933:131:10",
																"nodeType": "YulFunctionCall",
																"src": "21933:131:10"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "21925:4:10",
																	"nodeType": "YulIdentifier",
																	"src": "21925:4:10"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "21652:419:10",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "21803:9:10",
														"nodeType": "YulTypedName",
														"src": "21803:9:10",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "21818:4:10",
														"nodeType": "YulTypedName",
														"src": "21818:4:10",
														"type": ""
													}
												],
												"src": "21652:419:10"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not enough points\")\n\n    }\n\n    function abi_encode_t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 17)\n        store_literal_in_memory_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(memPtr) {\n\n        mstore(add(memPtr, 0), \"Address is blacklisted\")\n\n    }\n\n    function abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Trading is not enabled\")\n\n    }\n\n    function abi_encode_t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 22)\n        store_literal_in_memory_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d(memPtr) {\n\n        mstore(add(memPtr, 0), \"Contract is paused\")\n\n    }\n\n    function abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cannot transfer to the contract \")\n\n        mstore(add(memPtr, 32), \"itself\")\n\n    }\n\n    function abi_encode_t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds maximum transfer amount\")\n\n    }\n\n    function abi_encode_t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function store_literal_in_memory_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Exceeds maximum engagement point\")\n\n        mstore(add(memPtr, 32), \"s\")\n\n    }\n\n    function abi_encode_t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 33)\n        store_literal_in_memory_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32(memPtr) {\n\n        mstore(add(memPtr, 0), \"Claim cooldown active\")\n\n    }\n\n    function abi_encode_t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 21)\n        store_literal_in_memory_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040(memPtr) {\n\n        mstore(add(memPtr, 0), \"No rewards available\")\n\n    }\n\n    function abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 20)\n        store_literal_in_memory_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a(memPtr) {\n\n        mstore(add(memPtr, 0), \"Insufficient reward supply\")\n\n    }\n\n    function abi_encode_t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 26)\n        store_literal_in_memory_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978(memPtr) {\n\n        mstore(add(memPtr, 0), \"Tax rate exceeds maximum limit\")\n\n    }\n\n    function abi_encode_t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 10,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506004361061021a575f3560e01c80638456cb5911610123578063b88a802f116100ab578063dd62ed3e1161007a578063dd62ed3e14610592578063e3d670d7146105c2578063e43252d7146105f2578063f2fde38b1461060e578063fc1b31131461062a5761021a565b8063b88a802f14610532578063c6d69a301461053c578063d595c33114610558578063d798cbd2146105745761021a565b80638fa81732116100f25780638fa817321461048c578063902d55a5146104aa57806395d89b41146104c8578063a9059cbb146104e6578063aabd801d146105165761021a565b80638456cb591461043e5780638a8c523c146104485780638ab1d681146104525780638da5cb5b1461046e5761021a565b806342966c68116101a65780635fd8c710116101755780635fd8c710146103be57806370a08231146103c8578063715018a6146103f8578063771a3a1d14610402578063819edfbc146104205761021a565b806342966c681461034a5780634ada218b1461036657806357376198146103845780635c975abb146103a05761021a565b806318160ddd116101ed57806318160ddd146102a457806323b872dd146102c25780632576f999146102f2578063313ce567146103225780633f4ba83a146103405761021a565b806306fdde031461021e578063095ea7b31461023c578063153b0d1e1461026c57806317386e2c14610288575b5f80fd5b610226610648565b6040516102339190611e60565b60405180910390f35b61025660048036038101906102519190611f11565b6106d8565b6040516102639190611f69565b60405180910390f35b61028660048036038101906102819190611fac565b6106fa565b005b6102a2600480360381019061029d9190611f11565b61075a565b005b6102ac6108c4565b6040516102b99190611ff9565b60405180910390f35b6102dc60048036038101906102d79190612012565b6108cd565b6040516102e99190611f69565b60405180910390f35b61030c60048036038101906103079190612062565b6108fb565b6040516103199190611ff9565b60405180910390f35b61032a610910565b60405161033791906120a8565b60405180910390f35b610348610918565b005b610364600480360381019061035f91906120c1565b61093c565b005b61036e610997565b60405161037b9190611f69565b60405180910390f35b61039e60048036038101906103999190611f11565b6109a9565b005b6103a8610a38565b6040516103b59190611f69565b60405180910390f35b6103c6610a4b565b005b6103e260048036038101906103dd9190612062565b610ab0565b6040516103ef9190611ff9565b60405180910390f35b610400610af5565b005b61040a610b08565b6040516104179190611ff9565b60405180910390f35b610428610b0e565b6040516104359190611ff9565b60405180910390f35b610446610b14565b005b610450610b39565b005b61046c60048036038101906104679190612062565b610b64565b005b610476610bc3565b60405161048391906120fb565b60405180910390f35b610494610beb565b6040516104a19190611ff9565b60405180910390f35b6104b2610bf0565b6040516104bf9190611ff9565b60405180910390f35b6104d0610c01565b6040516104dd9190611e60565b60405180910390f35b61050060048036038101906104fb9190611f11565b610c91565b60405161050d9190611f69565b60405180910390f35b610530600480360381019061052b9190611f11565b610f1e565b005b61053a611095565b005b610556600480360381019061055191906120c1565b6113bd565b005b610572600480360381019061056d91906120c1565b611413565b005b61057c611484565b6040516105899190611ff9565b60405180910390f35b6105ac60048036038101906105a79190612114565b61148a565b6040516105b99190611ff9565b60405180910390f35b6105dc60048036038101906105d79190612062565b61150c565b6040516105e99190611ff9565b60405180910390f35b61060c60048036038101906106079190612062565b61151d565b005b61062860048036038101906106239190612062565b61157d565b005b610632611601565b60405161063f9190611ff9565b60405180910390f35b6060600380546106579061217f565b80601f01602080910402602001604051908101604052809291908181526020018280546106839061217f565b80156106ce5780601f106106a5576101008083540402835291602001916106ce565b820191905f5260205f20905b8154815290600101906020018083116106b157829003601f168201915b5050505050905090565b5f806106e261160f565b90506106ef818585611616565b600191505092915050565b610702611628565b8060085f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff0219169083151502179055505050565b610762611628565b80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205410156107e2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107d9906121f9565b60405180910390fd5b80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825461082e9190612244565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f40547f371cf37574d1a01eeeb1593f8db1a3e44286bba3b92cf2867707c9e473600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516108b89190611ff9565b60405180910390a25050565b5f600254905090565b5f806108d761160f565b90506108e48582856116af565b6108ef858585611741565b60019150509392505050565b600a602052805f5260405f205f915090505481565b5f6012905090565b610920611628565b5f600d60016101000a81548160ff021916908315150217905550565b6109463382611831565b3373ffffffffffffffffffffffffffffffffffffffff167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb68260405161098c9190611ff9565b60405180910390a250565b600d5f9054906101000a900460ff1681565b6109b1611628565b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb6109d5610bc3565b836040518363ffffffff1660e01b81526004016109f3929190612277565b6020604051808303815f875af1158015610a0f573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610a3391906122b2565b505050565b600d60019054906101000a900460ff1681565b610a53611628565b610a5b6118b0565b610a63610bc3565b73ffffffffffffffffffffffffffffffffffffffff166108fc4790811502906040515f60405180830381858888f19350505050158015610aa5573d5f803e3d5ffd5b50610aae6118ff565b565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b610afd611628565b610b065f611909565b565b60075481565b61271081565b610b1c611628565b6001600d60016101000a81548160ff021916908315150217905550565b610b41611628565b6001600d5f6101000a81548160ff02191690831515021790555043600c81905550565b610b6c611628565b5f60095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600a81565b6c054f529ca52576bc689200000081565b606060048054610c109061217f565b80601f0160208091040260200160405190810160405280929190818152602001828054610c3c9061217f565b8015610c875780601f10610c5e57610100808354040283529160200191610c87565b820191905f5260205f20905b815481529060010190602001808311610c6a57829003601f168201915b5050505050905090565b5f3360085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615610d1d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d1490612327565b60405180910390fd5b33600d5f9054906101000a900460ff1680610d7e575060095f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff165b610dbd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610db49061238f565b60405180910390fd5b600d60019054906101000a900460ff1615610e0d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e04906123f7565b60405180910390fd5b843073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603610e7c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e7390612485565b60405180910390fd5b69d3c21bcecceda1000000851115610ec9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ec0906124ed565b60405180910390fd5b5f606460075487610eda919061250b565b610ee49190612579565b90505f8187610ef39190612244565b9050610f0733610f01610bc3565b84611741565b610f1188826119cc565b9550505050505092915050565b610f26611628565b61271081600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054610f7291906125a9565b1115610fb3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610faa9061264c565b60405180910390fd5b80600a5f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f828254610fff91906125a9565b925050819055508173ffffffffffffffffffffffffffffffffffffffff167f40547f371cf37574d1a01eeeb1593f8db1a3e44286bba3b92cf2867707c9e473600a5f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546040516110899190611ff9565b60405180910390a25050565b600d60019054906101000a900460ff16156110e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016110dc906123f7565b60405180910390fd5b3360085f8273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f9054906101000a900460ff1615611170576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161116790612327565b60405180910390fd5b3362015180600b5f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20546111bd91906125a9565b4210156111ff576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111f6906126b4565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490505f8111611282576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112799061271c565b60405180910390fd5b8061129361128e610bc3565b610ab0565b10156112d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112cb90612784565b60405180910390fd5b5f600a5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555042600b5f3373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f208190555061136a611363610bc3565b3383611741565b3373ffffffffffffffffffffffffffffffffffffffff167f106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241826040516113b09190611ff9565b60405180910390a2505050565b6113c5611628565b600a811115611409576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611400906127ec565b60405180910390fd5b8060078190555050565b61141b611628565b61142c611426610bc3565b82611831565b611434610bc3565b73ffffffffffffffffffffffffffffffffffffffff167ffd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6826040516114799190611ff9565b60405180910390a250565b600c5481565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b5f61151682610ab0565b9050919050565b611525611628565b600160095f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b611585611628565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036115f5575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016115ec91906120fb565b60405180910390fd5b6115fe81611909565b50565b69d3c21bcecceda100000081565b5f33905090565b61162383838360016119ee565b505050565b61163061160f565b73ffffffffffffffffffffffffffffffffffffffff1661164e610bc3565b73ffffffffffffffffffffffffffffffffffffffff16146116ad5761167161160f565b6040517f118cdaa70000000000000000000000000000000000000000000000000000000081526004016116a491906120fb565b60405180910390fd5b565b5f6116ba848461148a565b90507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff811461173b578181101561172c578281836040517ffb8f41b20000000000000000000000000000000000000000000000000000000081526004016117239392919061280a565b60405180910390fd5b61173a84848484035f6119ee565b5b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036117b1575f6040517f96c6fd1e0000000000000000000000000000000000000000000000000000000081526004016117a891906120fb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611821575f6040517fec442f0500000000000000000000000000000000000000000000000000000000815260040161181891906120fb565b60405180910390fd5b61182c838383611bbd565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036118a1575f6040517f96c6fd1e00000000000000000000000000000000000000000000000000000000815260040161189891906120fb565b60405180910390fd5b6118ac825f83611bbd565b5050565b6002600654036118f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118ec90612889565b60405180910390fd5b6002600681905550565b6001600681905550565b5f60055f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690508160055f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f806119d661160f565b90506119e3818585611741565b600191505092915050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603611a5e575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401611a5591906120fb565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611ace575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401611ac591906120fb565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015611bb7578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051611bae9190611ff9565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603611c0d578060025f828254611c0191906125a9565b92505081905550611cdb565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015611c96578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401611c8d9392919061280a565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603611d22578060025f8282540392505081905550611d6c565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051611dc99190611ff9565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b5f5b83811015611e0d578082015181840152602081019050611df2565b5f8484015250505050565b5f601f19601f8301169050919050565b5f611e3282611dd6565b611e3c8185611de0565b9350611e4c818560208601611df0565b611e5581611e18565b840191505092915050565b5f6020820190508181035f830152611e788184611e28565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f611ead82611e84565b9050919050565b611ebd81611ea3565b8114611ec7575f80fd5b50565b5f81359050611ed881611eb4565b92915050565b5f819050919050565b611ef081611ede565b8114611efa575f80fd5b50565b5f81359050611f0b81611ee7565b92915050565b5f8060408385031215611f2757611f26611e80565b5b5f611f3485828601611eca565b9250506020611f4585828601611efd565b9150509250929050565b5f8115159050919050565b611f6381611f4f565b82525050565b5f602082019050611f7c5f830184611f5a565b92915050565b611f8b81611f4f565b8114611f95575f80fd5b50565b5f81359050611fa681611f82565b92915050565b5f8060408385031215611fc257611fc1611e80565b5b5f611fcf85828601611eca565b9250506020611fe085828601611f98565b9150509250929050565b611ff381611ede565b82525050565b5f60208201905061200c5f830184611fea565b92915050565b5f805f6060848603121561202957612028611e80565b5b5f61203686828701611eca565b935050602061204786828701611eca565b925050604061205886828701611efd565b9150509250925092565b5f6020828403121561207757612076611e80565b5b5f61208484828501611eca565b91505092915050565b5f60ff82169050919050565b6120a28161208d565b82525050565b5f6020820190506120bb5f830184612099565b92915050565b5f602082840312156120d6576120d5611e80565b5b5f6120e384828501611efd565b91505092915050565b6120f581611ea3565b82525050565b5f60208201905061210e5f8301846120ec565b92915050565b5f806040838503121561212a57612129611e80565b5b5f61213785828601611eca565b925050602061214885828601611eca565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061219657607f821691505b6020821081036121a9576121a8612152565b5b50919050565b7f4e6f7420656e6f75676820706f696e74730000000000000000000000000000005f82015250565b5f6121e3601183611de0565b91506121ee826121af565b602082019050919050565b5f6020820190508181035f830152612210816121d7565b9050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61224e82611ede565b915061225983611ede565b925082820390508181111561227157612270612217565b5b92915050565b5f60408201905061228a5f8301856120ec565b6122976020830184611fea565b9392505050565b5f815190506122ac81611f82565b92915050565b5f602082840312156122c7576122c6611e80565b5b5f6122d48482850161229e565b91505092915050565b7f4164647265737320697320626c61636b6c6973746564000000000000000000005f82015250565b5f612311601683611de0565b915061231c826122dd565b602082019050919050565b5f6020820190508181035f83015261233e81612305565b9050919050565b7f54726164696e67206973206e6f7420656e61626c6564000000000000000000005f82015250565b5f612379601683611de0565b915061238482612345565b602082019050919050565b5f6020820190508181035f8301526123a68161236d565b9050919050565b7f436f6e74726163742069732070617573656400000000000000000000000000005f82015250565b5f6123e1601283611de0565b91506123ec826123ad565b602082019050919050565b5f6020820190508181035f83015261240e816123d5565b9050919050565b7f43616e6e6f74207472616e7366657220746f2074686520636f6e7472616374205f8201527f697473656c660000000000000000000000000000000000000000000000000000602082015250565b5f61246f602683611de0565b915061247a82612415565b604082019050919050565b5f6020820190508181035f83015261249c81612463565b9050919050565b7f45786365656473206d6178696d756d207472616e7366657220616d6f756e74005f82015250565b5f6124d7601f83611de0565b91506124e2826124a3565b602082019050919050565b5f6020820190508181035f830152612504816124cb565b9050919050565b5f61251582611ede565b915061252083611ede565b925082820261252e81611ede565b9150828204841483151761254557612544612217565b5b5092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b5f61258382611ede565b915061258e83611ede565b92508261259e5761259d61254c565b5b828204905092915050565b5f6125b382611ede565b91506125be83611ede565b92508282019050808211156125d6576125d5612217565b5b92915050565b7f45786365656473206d6178696d756d20656e676167656d656e7420706f696e745f8201527f7300000000000000000000000000000000000000000000000000000000000000602082015250565b5f612636602183611de0565b9150612641826125dc565b604082019050919050565b5f6020820190508181035f8301526126638161262a565b9050919050565b7f436c61696d20636f6f6c646f776e2061637469766500000000000000000000005f82015250565b5f61269e601583611de0565b91506126a98261266a565b602082019050919050565b5f6020820190508181035f8301526126cb81612692565b9050919050565b7f4e6f207265776172647320617661696c61626c650000000000000000000000005f82015250565b5f612706601483611de0565b9150612711826126d2565b602082019050919050565b5f6020820190508181035f830152612733816126fa565b9050919050565b7f496e73756666696369656e742072657761726420737570706c790000000000005f82015250565b5f61276e601a83611de0565b91506127798261273a565b602082019050919050565b5f6020820190508181035f83015261279b81612762565b9050919050565b7f54617820726174652065786365656473206d6178696d756d206c696d697400005f82015250565b5f6127d6601e83611de0565b91506127e1826127a2565b602082019050919050565b5f6020820190508181035f830152612803816127ca565b9050919050565b5f60608201905061281d5f8301866120ec565b61282a6020830185611fea565b6128376040830184611fea565b949350505050565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c005f82015250565b5f612873601f83611de0565b915061287e8261283f565b602082019050919050565b5f6020820190508181035f8301526128a081612867565b905091905056fea2646970667358221220938069a2928d47eee461df4dc4df4f5377f8f98d66ffe2e94382aeee082891ad64736f6c63430008180033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x21A JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0x123 JUMPI DUP1 PUSH4 0xB88A802F GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xDD62ED3E GT PUSH2 0x7A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x592 JUMPI DUP1 PUSH4 0xE3D670D7 EQ PUSH2 0x5C2 JUMPI DUP1 PUSH4 0xE43252D7 EQ PUSH2 0x5F2 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x60E JUMPI DUP1 PUSH4 0xFC1B3113 EQ PUSH2 0x62A JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0xB88A802F EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xC6D69A30 EQ PUSH2 0x53C JUMPI DUP1 PUSH4 0xD595C331 EQ PUSH2 0x558 JUMPI DUP1 PUSH4 0xD798CBD2 EQ PUSH2 0x574 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x8FA81732 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x8FA81732 EQ PUSH2 0x48C JUMPI DUP1 PUSH4 0x902D55A5 EQ PUSH2 0x4AA JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x4C8 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x4E6 JUMPI DUP1 PUSH4 0xAABD801D EQ PUSH2 0x516 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x43E JUMPI DUP1 PUSH4 0x8A8C523C EQ PUSH2 0x448 JUMPI DUP1 PUSH4 0x8AB1D681 EQ PUSH2 0x452 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x46E JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x42966C68 GT PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x5FD8C710 GT PUSH2 0x175 JUMPI DUP1 PUSH4 0x5FD8C710 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x3C8 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x771A3A1D EQ PUSH2 0x402 JUMPI DUP1 PUSH4 0x819EDFBC EQ PUSH2 0x420 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x42966C68 EQ PUSH2 0x34A JUMPI DUP1 PUSH4 0x4ADA218B EQ PUSH2 0x366 JUMPI DUP1 PUSH4 0x57376198 EQ PUSH2 0x384 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3A0 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x18160DDD GT PUSH2 0x1ED JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x2A4 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x2C2 JUMPI DUP1 PUSH4 0x2576F999 EQ PUSH2 0x2F2 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x340 JUMPI PUSH2 0x21A JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x21E JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x23C JUMPI DUP1 PUSH4 0x153B0D1E EQ PUSH2 0x26C JUMPI DUP1 PUSH4 0x17386E2C EQ PUSH2 0x288 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x226 PUSH2 0x648 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x256 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x251 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x6D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x263 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x286 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x281 SWAP2 SWAP1 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x6FA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29D SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x75A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2AC PUSH2 0x8C4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D7 SWAP2 SWAP1 PUSH2 0x2012 JUMP JUMPDEST PUSH2 0x8CD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2E9 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x30C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x307 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x8FB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x319 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x32A PUSH2 0x910 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x337 SWAP2 SWAP1 PUSH2 0x20A8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x348 PUSH2 0x918 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x364 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x35F SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x93C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x36E PUSH2 0x997 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x37B SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x39E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x399 SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0x9A9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3A8 PUSH2 0xA38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3B5 SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x3C6 PUSH2 0xA4B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x3E2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x3DD SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x3EF SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x400 PUSH2 0xAF5 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x40A PUSH2 0xB08 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x417 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x428 PUSH2 0xB0E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x435 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x446 PUSH2 0xB14 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x450 PUSH2 0xB39 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x46C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x467 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0xB64 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x476 PUSH2 0xBC3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x483 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x494 PUSH2 0xBEB JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4A1 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4B2 PUSH2 0xBF0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x4D0 PUSH2 0xC01 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4DD SWAP2 SWAP1 PUSH2 0x1E60 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x500 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4FB SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0xC91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50D SWAP2 SWAP1 PUSH2 0x1F69 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x530 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x52B SWAP2 SWAP1 PUSH2 0x1F11 JUMP JUMPDEST PUSH2 0xF1E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x53A PUSH2 0x1095 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x556 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x551 SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x13BD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x572 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x56D SWAP2 SWAP1 PUSH2 0x20C1 JUMP JUMPDEST PUSH2 0x1413 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x57C PUSH2 0x1484 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x589 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5AC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5A7 SWAP2 SWAP1 PUSH2 0x2114 JUMP JUMPDEST PUSH2 0x148A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5B9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x5D7 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x150C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5E9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x60C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x607 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x151D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x628 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x623 SWAP2 SWAP1 PUSH2 0x2062 JUMP JUMPDEST PUSH2 0x157D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x632 PUSH2 0x1601 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x63F SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x657 SWAP1 PUSH2 0x217F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x683 SWAP1 PUSH2 0x217F JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6CE JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6A5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6CE JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6B1 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x6E2 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP PUSH2 0x6EF DUP2 DUP6 DUP6 PUSH2 0x1616 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x702 PUSH2 0x1628 JUMP JUMPDEST DUP1 PUSH1 0x8 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH2 0x762 PUSH2 0x1628 JUMP JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD LT ISZERO PUSH2 0x7E2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7D9 SWAP1 PUSH2 0x21F9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x82E SWAP2 SWAP1 PUSH2 0x2244 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40547F371CF37574D1A01EEEB1593F8DB1A3E44286BBA3B92CF2867707C9E473 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x8B8 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x8D7 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP PUSH2 0x8E4 DUP6 DUP3 DUP6 PUSH2 0x16AF JUMP JUMPDEST PUSH2 0x8EF DUP6 DUP6 DUP6 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0xA PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x920 PUSH2 0x1628 JUMP JUMPDEST PUSH0 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x946 CALLER DUP3 PUSH2 0x1831 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x98C SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0x9B1 PUSH2 0x1628 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB PUSH2 0x9D5 PUSH2 0xBC3 JUMP JUMPDEST DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F3 SWAP3 SWAP2 SWAP1 PUSH2 0x2277 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA0F JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA33 SWAP2 SWAP1 PUSH2 0x22B2 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH2 0xA53 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0xA5B PUSH2 0x18B0 JUMP JUMPDEST PUSH2 0xA63 PUSH2 0xBC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xAA5 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH2 0xAAE PUSH2 0x18FF JUMP JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xAFD PUSH2 0x1628 JUMP JUMPDEST PUSH2 0xB06 PUSH0 PUSH2 0x1909 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x2710 DUP2 JUMP JUMPDEST PUSH2 0xB1C PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH1 0x1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB41 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x1 PUSH1 0xD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP NUMBER PUSH1 0xC DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0xB6C PUSH2 0x1628 JUMP JUMPDEST PUSH0 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 JUMP JUMPDEST PUSH13 0x54F529CA52576BC6892000000 DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0xC10 SWAP1 PUSH2 0x217F JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xC3C SWAP1 PUSH2 0x217F JUMP JUMPDEST DUP1 ISZERO PUSH2 0xC87 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xC5E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xC87 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xC6A JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xD1D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD14 SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0xD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 PUSH2 0xD7E JUMPI POP PUSH1 0x9 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xDBD JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDB4 SWAP1 PUSH2 0x238F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xE0D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE04 SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xE7C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE73 SWAP1 PUSH2 0x2485 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP6 GT ISZERO PUSH2 0xEC9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xEC0 SWAP1 PUSH2 0x24ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x64 PUSH1 0x7 SLOAD DUP8 PUSH2 0xEDA SWAP2 SWAP1 PUSH2 0x250B JUMP JUMPDEST PUSH2 0xEE4 SWAP2 SWAP1 PUSH2 0x2579 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP8 PUSH2 0xEF3 SWAP2 SWAP1 PUSH2 0x2244 JUMP JUMPDEST SWAP1 POP PUSH2 0xF07 CALLER PUSH2 0xF01 PUSH2 0xBC3 JUMP JUMPDEST DUP5 PUSH2 0x1741 JUMP JUMPDEST PUSH2 0xF11 DUP9 DUP3 PUSH2 0x19CC JUMP JUMPDEST SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xF26 PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x2710 DUP2 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0xF72 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST GT ISZERO PUSH2 0xFB3 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAA SWAP1 PUSH2 0x264C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0xA PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xFFF SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x40547F371CF37574D1A01EEEB1593F8DB1A3E44286BBA3B92CF2867707C9E473 PUSH1 0xA PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH1 0x40 MLOAD PUSH2 0x1089 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH1 0xD PUSH1 0x1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x10E5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x10DC SWAP1 PUSH2 0x23F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x8 PUSH0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1170 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1167 SWAP1 PUSH2 0x2327 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH3 0x15180 PUSH1 0xB PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD PUSH2 0x11BD SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST TIMESTAMP LT ISZERO PUSH2 0x11FF JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x11F6 SWAP1 PUSH2 0x26B4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP PUSH0 DUP2 GT PUSH2 0x1282 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1279 SWAP1 PUSH2 0x271C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x1293 PUSH2 0x128E PUSH2 0xBC3 JUMP JUMPDEST PUSH2 0xAB0 JUMP JUMPDEST LT ISZERO PUSH2 0x12D4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12CB SWAP1 PUSH2 0x2784 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0xA PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP TIMESTAMP PUSH1 0xB PUSH0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP PUSH2 0x136A PUSH2 0x1363 PUSH2 0xBC3 JUMP JUMPDEST CALLER DUP4 PUSH2 0x1741 JUMP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241 DUP3 PUSH1 0x40 MLOAD PUSH2 0x13B0 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST PUSH2 0x13C5 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0xA DUP2 GT ISZERO PUSH2 0x1409 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1400 SWAP1 PUSH2 0x27EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x141B PUSH2 0x1628 JUMP JUMPDEST PUSH2 0x142C PUSH2 0x1426 PUSH2 0xBC3 JUMP JUMPDEST DUP3 PUSH2 0x1831 JUMP JUMPDEST PUSH2 0x1434 PUSH2 0xBC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xFD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1479 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP JUMP JUMPDEST PUSH1 0xC SLOAD DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1516 DUP3 PUSH2 0xAB0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1525 PUSH2 0x1628 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x9 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x1585 PUSH2 0x1628 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x15F5 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x15EC SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x15FE DUP2 PUSH2 0x1909 JUMP JUMPDEST POP JUMP JUMPDEST PUSH10 0xD3C21BCECCEDA1000000 DUP2 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1623 DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0x19EE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x1630 PUSH2 0x160F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x164E PUSH2 0xBC3 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x16AD JUMPI PUSH2 0x1671 PUSH2 0x160F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16A4 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x16BA DUP5 DUP5 PUSH2 0x148A JUMP JUMPDEST SWAP1 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP2 EQ PUSH2 0x173B JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x172C JUMPI DUP3 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xFB8F41B200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1723 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x173A DUP5 DUP5 DUP5 DUP5 SUB PUSH0 PUSH2 0x19EE JUMP JUMPDEST JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x17B1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x17A8 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1821 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1818 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x182C DUP4 DUP4 DUP4 PUSH2 0x1BBD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x18A1 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1898 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x18AC DUP3 PUSH0 DUP4 PUSH2 0x1BBD JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x6 SLOAD SUB PUSH2 0x18F5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x18EC SWAP1 PUSH2 0x2889 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x6 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH0 PUSH1 0x5 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x5 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x19D6 PUSH2 0x160F JUMP JUMPDEST SWAP1 POP PUSH2 0x19E3 DUP2 DUP6 DUP6 PUSH2 0x1741 JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1A5E JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A55 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1ACE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1AC5 SWAP2 SWAP1 PUSH2 0x20FB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0x1BB7 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0x1BAE SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1C0D JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1C01 SWAP2 SWAP1 PUSH2 0x25A9 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1CDB JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1C96 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1C8D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x280A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1D22 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x1D6C JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x1DC9 SWAP2 SWAP1 PUSH2 0x1FF9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x1E0D JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x1DF2 JUMP JUMPDEST PUSH0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E32 DUP3 PUSH2 0x1DD6 JUMP JUMPDEST PUSH2 0x1E3C DUP2 DUP6 PUSH2 0x1DE0 JUMP JUMPDEST SWAP4 POP PUSH2 0x1E4C DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x1DF0 JUMP JUMPDEST PUSH2 0x1E55 DUP2 PUSH2 0x1E18 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x1E78 DUP2 DUP5 PUSH2 0x1E28 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1EAD DUP3 PUSH2 0x1E84 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EBD DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP2 EQ PUSH2 0x1EC7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1ED8 DUP2 PUSH2 0x1EB4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1EF0 DUP2 PUSH2 0x1EDE JUMP JUMPDEST DUP2 EQ PUSH2 0x1EFA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F0B DUP2 PUSH2 0x1EE7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1F27 JUMPI PUSH2 0x1F26 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1F34 DUP6 DUP3 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1F45 DUP6 DUP3 DUP7 ADD PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1F63 DUP2 PUSH2 0x1F4F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1F7C PUSH0 DUP4 ADD DUP5 PUSH2 0x1F5A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1F8B DUP2 PUSH2 0x1F4F JUMP JUMPDEST DUP2 EQ PUSH2 0x1F95 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FA6 DUP2 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1FC2 JUMPI PUSH2 0x1FC1 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1FCF DUP6 DUP3 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1FE0 DUP6 DUP3 DUP7 ADD PUSH2 0x1F98 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FF3 DUP2 PUSH2 0x1EDE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x200C PUSH0 DUP4 ADD DUP5 PUSH2 0x1FEA JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2029 JUMPI PUSH2 0x2028 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2036 DUP7 DUP3 DUP8 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x2047 DUP7 DUP3 DUP8 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x2058 DUP7 DUP3 DUP8 ADD PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2077 JUMPI PUSH2 0x2076 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2084 DUP5 DUP3 DUP6 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x20A2 DUP2 PUSH2 0x208D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x20BB PUSH0 DUP4 ADD DUP5 PUSH2 0x2099 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x20D6 JUMPI PUSH2 0x20D5 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x20E3 DUP5 DUP3 DUP6 ADD PUSH2 0x1EFD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x20F5 DUP2 PUSH2 0x1EA3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x210E PUSH0 DUP4 ADD DUP5 PUSH2 0x20EC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x212A JUMPI PUSH2 0x2129 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2137 DUP6 DUP3 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2148 DUP6 DUP3 DUP7 ADD PUSH2 0x1ECA JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x2196 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x21A9 JUMPI PUSH2 0x21A8 PUSH2 0x2152 JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420656E6F75676820706F696E7473000000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x21E3 PUSH1 0x11 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x21EE DUP3 PUSH2 0x21AF JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2210 DUP2 PUSH2 0x21D7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x224E DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x2259 DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x2271 JUMPI PUSH2 0x2270 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x228A PUSH0 DUP4 ADD DUP6 PUSH2 0x20EC JUMP JUMPDEST PUSH2 0x2297 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1FEA JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x22AC DUP2 PUSH2 0x1F82 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x22C7 JUMPI PUSH2 0x22C6 PUSH2 0x1E80 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x22D4 DUP5 DUP3 DUP6 ADD PUSH2 0x229E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4164647265737320697320626C61636B6C697374656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2311 PUSH1 0x16 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x231C DUP3 PUSH2 0x22DD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x233E DUP2 PUSH2 0x2305 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54726164696E67206973206E6F7420656E61626C656400000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2379 PUSH1 0x16 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2384 DUP3 PUSH2 0x2345 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x23A6 DUP2 PUSH2 0x236D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436F6E7472616374206973207061757365640000000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x23E1 PUSH1 0x12 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x23EC DUP3 PUSH2 0x23AD JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x240E DUP2 PUSH2 0x23D5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x43616E6E6F74207472616E7366657220746F2074686520636F6E747261637420 PUSH0 DUP3 ADD MSTORE PUSH32 0x697473656C660000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x246F PUSH1 0x26 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x247A DUP3 PUSH2 0x2415 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x249C DUP2 PUSH2 0x2463 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D207472616E7366657220616D6F756E7400 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x24D7 PUSH1 0x1F DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x24E2 DUP3 PUSH2 0x24A3 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2504 DUP2 PUSH2 0x24CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2515 DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x2520 DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 MUL PUSH2 0x252E DUP2 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP DUP3 DUP3 DIV DUP5 EQ DUP4 ISZERO OR PUSH2 0x2545 JUMPI PUSH2 0x2544 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x2583 DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x258E DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x259E JUMPI PUSH2 0x259D PUSH2 0x254C JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x25B3 DUP3 PUSH2 0x1EDE JUMP JUMPDEST SWAP2 POP PUSH2 0x25BE DUP4 PUSH2 0x1EDE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x25D6 JUMPI PUSH2 0x25D5 PUSH2 0x2217 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x45786365656473206D6178696D756D20656E676167656D656E7420706F696E74 PUSH0 DUP3 ADD MSTORE PUSH32 0x7300000000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2636 PUSH1 0x21 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2641 DUP3 PUSH2 0x25DC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2663 DUP2 PUSH2 0x262A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x436C61696D20636F6F6C646F776E206163746976650000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x269E PUSH1 0x15 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x26A9 DUP3 PUSH2 0x266A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x26CB DUP2 PUSH2 0x2692 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F207265776172647320617661696C61626C65000000000000000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2706 PUSH1 0x14 DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2711 DUP3 PUSH2 0x26D2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2733 DUP2 PUSH2 0x26FA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E73756666696369656E742072657761726420737570706C79000000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x276E PUSH1 0x1A DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x2779 DUP3 PUSH2 0x273A JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x279B DUP2 PUSH2 0x2762 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x54617820726174652065786365656473206D6178696D756D206C696D69740000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x27D6 PUSH1 0x1E DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x27E1 DUP3 PUSH2 0x27A2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x2803 DUP2 PUSH2 0x27CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x281D PUSH0 DUP4 ADD DUP7 PUSH2 0x20EC JUMP JUMPDEST PUSH2 0x282A PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1FEA JUMP JUMPDEST PUSH2 0x2837 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1FEA JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x2873 PUSH1 0x1F DUP4 PUSH2 0x1DE0 JUMP JUMPDEST SWAP2 POP PUSH2 0x287E DUP3 PUSH2 0x283F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x28A0 DUP2 PUSH2 0x2867 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 DUP1 PUSH10 0xA2928D47EEE461DF4DC4 0xDF 0x4F MSTORE8 PUSH24 0xF8F98D66FFE2E94382AEEE082891AD64736F6C6343000818 STOP CALLER ",
							"sourceMap": "362:6586:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3998:186;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1838:144:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5038:270;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2849:97:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4776:244;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1002:51:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2707:82:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6644:69:9;;;:::i;:::-;;4299:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1150:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6401:128;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1190:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6229:124;;;:::i;:::-;;3004:116:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;557:26:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;788:53;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6572:66;;;:::i;:::-;;3000:124;;;:::i;:::-;;3332:119;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;599:41:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;485:65;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1981:93:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3724:504:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4678:310;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5374:594;;;:::i;:::-;;3484:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4490:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1112:32;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3551:140:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6029:108:9;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3169:113;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;680:66:9;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1779:89:4;1824:13;1856:5;1849:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1779:89;:::o;3998:186::-;4071:4;4087:13;4103:12;:10;:12::i;:::-;4087:28;;4125:31;4134:5;4141:7;4150:5;4125:8;:31::i;:::-;4173:4;4166:11;;;3998:186;;;;:::o;1838:144:9:-;1531:13:0;:11;:13::i;:::-;1961:14:9::1;1928:20;:30;1949:8;1928:30;;;;;;;;;;;;;;;;:47;;;;;;;;;;;;;;;;;;1838:144:::0;;:::o;5038:270::-;1531:13:0;:11;:13::i;:::-;5163:6:9::1;5137:16;:22;5154:4;5137:22;;;;;;;;;;;;;;;;:32;;5129:62;;;;;;;;;;;;:::i;:::-;;;;;;;;;5227:6;5201:16;:22;5218:4;5201:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;5272:4;5248:53;;;5278:16;:22;5295:4;5278:22;;;;;;;;;;;;;;;;5248:53;;;;;;:::i;:::-;;;;;;;;5038:270:::0;;:::o;2849:97:4:-;2901:7;2927:12;;2920:19;;2849:97;:::o;4776:244::-;4863:4;4879:15;4897:12;:10;:12::i;:::-;4879:30;;4919:37;4935:4;4941:7;4950:5;4919:15;:37::i;:::-;4966:26;4976:4;4982:2;4986:5;4966:9;:26::i;:::-;5009:4;5002:11;;;4776:244;;;;;:::o;1002:51:9:-;;;;;;;;;;;;;;;;;:::o;2707:82:4:-;2756:5;2780:2;2773:9;;2707:82;:::o;6644:69:9:-;1531:13:0;:11;:13::i;:::-;6701:5:9::1;6692:6;;:14;;;;;;;;;;;;;;;;;;6644:69::o:0;4299:128::-;4348:25;4354:10;4366:6;4348:5;:25::i;:::-;4401:10;4388:32;;;4413:6;4388:32;;;;;;:::i;:::-;;;;;;;;4299:128;:::o;1150:34::-;;;;;;;;;;;;;:::o;6401:128::-;1531:13:0;:11;:13::i;:::-;6490:5:9::1;6483:22;;;6506:7;:5;:7::i;:::-;6515:6;6483:39;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;6401:128:::0;;:::o;1190:26::-;;;;;;;;;;;;;:::o;6229:124::-;1531:13:0;:11;:13::i;:::-;2261:21:3::1;:19;:21::i;:::-;6306:7:9::2;:5;:7::i;:::-;6298:25;;:48;6324:21;6298:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;2303:20:3::1;:18;:20::i;:::-;6229:124:9:o:0;3004:116:4:-;3069:7;3095:9;:18;3105:7;3095:18;;;;;;;;;;;;;;;;3088:25;;3004:116;;;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;557:26:9:-;;;;:::o;788:53::-;836:5;788:53;:::o;6572:66::-;1531:13:0;:11;:13::i;:::-;6627:4:9::1;6618:6;;:13;;;;;;;;;;;;;;;;;;6572:66::o:0;3000:124::-;1531:13:0;:11;:13::i;:::-;3071:4:9::1;3054:14;;:21;;;;;;;;;;;;;;;;;;3105:12;3085:17;:32;;;;3000:124::o:0;3332:119::-;1531:13:0;:11;:13::i;:::-;3439:5:9::1;3408:18;:28;3427:8;3408:28;;;;;;;;;;;;;;;;:36;;;;;;;;;;;;;;;;;;3332:119:::0;:::o;1638:85:0:-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;599:41:9:-;638:2;599:41;:::o;485:65::-;524:26;485:65;:::o;1981:93:4:-;2028:13;2060:7;2053:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1981:93;:::o;3724:504:9:-;3894:4;3808:10;2103:20;:30;2124:8;2103:30;;;;;;;;;;;;;;;;;;;;;;;;;2102:31;2094:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;3833:10:::1;2312:14;;;;;;;;;;;:44;;;;2330:18;:26;2349:6;2330:26;;;;;;;;;;;;;;;;;;;;;;;;;2312:44;2304:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;2502:6:::2;;;;;;;;;;;2501:7;2493:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;3874:9:::3;2882:4;2861:26;;:9;:26;;::::0;2853:77:::3;;;;;;;;;;;;:::i;:::-;;;;;;;;;726:20:::4;3918:6;:29;;3910:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;3994:11;4029:3;4018:7;;4009:6;:16;;;;:::i;:::-;4008:24;;;;:::i;:::-;3994:38;;4042:22;4076:3;4067:6;:12;;;;:::i;:::-;4042:37;;4128:35;4138:10;4150:7;:5;:7::i;:::-;4159:3;4128:9;:35::i;:::-;4180:41;4195:9;4206:14;4180;:41::i;:::-;4173:48;;;;2541:1:::3;2170::::1;3724:504:::0;;;;;:::o;4678:310::-;1531:13:0;:11;:13::i;:::-;836:5:9::1;4802:6;4777:16;:22;4794:4;4777:22;;;;;;;;;;;;;;;;:31;;;;:::i;:::-;:56;;4769:102;;;;;;;;;;;;:::i;:::-;;;;;;;;;4907:6;4881:16;:22;4898:4;4881:22;;;;;;;;;;;;;;;;:32;;;;;;;:::i;:::-;;;;;;;;4952:4;4928:53;;;4958:16;:22;4975:4;4958:22;;;;;;;;;;;;;;;;4928:53;;;;;;:::i;:::-;;;;;;;;4678:310:::0;;:::o;5374:594::-;2502:6;;;;;;;;;;;2501:7;2493:38;;;;;;;;;;;;:::i;:::-;;;;;;;;;5435:10:::1;2103:20;:30;2124:8;2103:30;;;;;;;;;;;;;;;;;;;;;;;;;2102:31;2094:66;;;;;;;;;;;;:::i;:::-;;;;;;;;;5462:10:::2;2703:6;2683:11;:17;2695:4;2683:17;;;;;;;;;;;;;;;;:26;;;;:::i;:::-;2664:15;:45;;2656:79;;;;;;;;;;;;:::i;:::-;;;;;;;;;5484:14:::3;5501:16;:28;5518:10;5501:28;;;;;;;;;;;;;;;;5484:45;;5556:1;5547:6;:10;5539:43;;;;;;;;;;;;:::i;:::-;;;;;;;;;5622:6;5600:18;5610:7;:5;:7::i;:::-;5600:9;:18::i;:::-;:28;;5592:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;5736:1;5705:16;:28;5722:10;5705:28;;;;;;;;;;;;;;;:32;;;;5815:15;5789:11;:23;5801:10;5789:23;;;;;;;;;;;;;;;:41;;;;5875:38;5885:7;:5;:7::i;:::-;5894:10;5906:6;5875:9;:38::i;:::-;5942:10;5928:33;;;5954:6;5928:33;;;;;;:::i;:::-;;;;;;;;5474:494;2170:1:::2;2541::::1;5374:594::o:0;3484:175::-;1531:13:0;:11;:13::i;:::-;638:2:9::1;3561:10;:26;;3553:69;;;;;;;;;;;;:::i;:::-;;;;;;;;;3642:10;3632:7;:20;;;;3484:175:::0;:::o;4490:138::-;1531:13:0;:11;:13::i;:::-;4555:22:9::1;4561:7;:5;:7::i;:::-;4570:6;4555:5;:22::i;:::-;4605:7;:5;:7::i;:::-;4592:29;;;4614:6;4592:29;;;;;;:::i;:::-;;;;;;;;4490:138:::0;:::o;1112:32::-;;;;:::o;3551:140:4:-;3631:7;3657:11;:18;3669:5;3657:18;;;;;;;;;;;;;;;:27;3676:7;3657:27;;;;;;;;;;;;;;;;3650:34;;3551:140;;;;:::o;6029:108:9:-;6086:7;6112:18;6122:7;6112:9;:18::i;:::-;6105:25;;6029:108;;;:::o;3169:113::-;1531:13:0;:11;:13::i;:::-;3271:4:9::1;3240:18;:28;3259:8;3240:28;;;;;;;;;;;;;;;;:35;;;;;;;;;;;;;;;;;;3169:113:::0;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;680:66:9:-;726:20;680:66;:::o;656:96:8:-;709:7;735:10;728:17;;656:96;:::o;8726:128:4:-;8810:37;8819:5;8826:7;8835:5;8842:4;8810:8;:37::i;:::-;8726:128;;;:::o;1796:162:0:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;10415:477:4:-;10514:24;10541:25;10551:5;10558:7;10541:9;:25::i;:::-;10514:52;;10600:17;10580:16;:37;10576:310;;10656:5;10637:16;:24;10633:130;;;10715:7;10724:16;10742:5;10688:60;;;;;;;;;;;;;:::i;:::-;;;;;;;;10633:130;10804:57;10813:5;10820:7;10848:5;10829:16;:24;10855:5;10804:8;:57::i;:::-;10576:310;10504:388;10415:477;;;:::o;5393:300::-;5492:1;5476:18;;:4;:18;;;5472:86;;5544:1;5517:30;;;;;;;;;;;:::i;:::-;;;;;;;;5472:86;5585:1;5571:16;;:2;:16;;;5567:86;;5639:1;5610:32;;;;;;;;;;;:::i;:::-;;;;;;;;5567:86;5662:24;5670:4;5676:2;5680:5;5662:7;:24::i;:::-;5393:300;;;:::o;7984:206::-;8073:1;8054:21;;:7;:21;;;8050:89;;8125:1;8098:30;;;;;;;;;;;:::i;:::-;;;;;;;;8050:89;8148:35;8156:7;8173:1;8177:5;8148:7;:35::i;:::-;7984:206;;:::o;2336:287:3:-;1759:1;2468:7;;:19;2460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1759:1;2598:7;:18;;;;2336:287::o;2629:209::-;1716:1;2809:7;:22;;;;2629:209::o;2912:187:0:-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;3315:178:4:-;3384:4;3400:13;3416:12;:10;:12::i;:::-;3400:28;;3438:27;3448:5;3455:2;3459:5;3438:9;:27::i;:::-;3482:4;3475:11;;;3315:178;;;;:::o;9701:432::-;9830:1;9813:19;;:5;:19;;;9809:89;;9884:1;9855:32;;;;;;;;;;;:::i;:::-;;;;;;;;9809:89;9930:1;9911:21;;:7;:21;;;9907:90;;9983:1;9955:31;;;;;;;;;;;:::i;:::-;;;;;;;;9907:90;10036:5;10006:11;:18;10018:5;10006:18;;;;;;;;;;;;;;;:27;10025:7;10006:27;;;;;;;;;;;;;;;:35;;;;10055:9;10051:76;;;10101:7;10085:31;;10094:5;10085:31;;;10110:5;10085:31;;;;;;:::i;:::-;;;;;;;;10051:76;9701:432;;;;:::o;6008:1107::-;6113:1;6097:18;;:4;:18;;;6093:540;;6249:5;6233:12;;:21;;;;;;;:::i;:::-;;;;;;;;6093:540;;;6285:19;6307:9;:15;6317:4;6307:15;;;;;;;;;;;;;;;;6285:37;;6354:5;6340:11;:19;6336:115;;;6411:4;6417:11;6430:5;6386:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6336:115;6603:5;6589:11;:19;6571:9;:15;6581:4;6571:15;;;;;;;;;;;;;;;:37;;;;6271:362;6093:540;6661:1;6647:16;;:2;:16;;;6643:425;;6826:5;6810:12;;:21;;;;;;;;;;;6643:425;;;7038:5;7021:9;:13;7031:2;7021:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6643:425;7098:2;7083:25;;7092:4;7083:25;;;7102:5;7083:25;;;;;;:::i;:::-;;;;;;;;6008:1107;;;:::o;7:99:10:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:246::-;368:1;378:113;392:6;389:1;386:13;378:113;;;477:1;472:3;468:11;462:18;458:1;453:3;449:11;442:39;414:2;411:1;407:10;402:15;;378:113;;;525:1;516:6;511:3;507:16;500:27;349:184;287:246;;;:::o;539:102::-;580:6;631:2;627:7;622:2;615:5;611:14;607:28;597:38;;539:102;;;:::o;647:377::-;735:3;763:39;796:5;763:39;:::i;:::-;818:71;882:6;877:3;818:71;:::i;:::-;811:78;;898:65;956:6;951:3;944:4;937:5;933:16;898:65;:::i;:::-;988:29;1010:6;988:29;:::i;:::-;983:3;979:39;972:46;;739:285;647:377;;;;:::o;1030:313::-;1143:4;1181:2;1170:9;1166:18;1158:26;;1230:9;1224:4;1220:20;1216:1;1205:9;1201:17;1194:47;1258:78;1331:4;1322:6;1258:78;:::i;:::-;1250:86;;1030:313;;;;:::o;1430:117::-;1539:1;1536;1529:12;1676:126;1713:7;1753:42;1746:5;1742:54;1731:65;;1676:126;;;:::o;1808:96::-;1845:7;1874:24;1892:5;1874:24;:::i;:::-;1863:35;;1808:96;;;:::o;1910:122::-;1983:24;2001:5;1983:24;:::i;:::-;1976:5;1973:35;1963:63;;2022:1;2019;2012:12;1963:63;1910:122;:::o;2038:139::-;2084:5;2122:6;2109:20;2100:29;;2138:33;2165:5;2138:33;:::i;:::-;2038:139;;;;:::o;2183:77::-;2220:7;2249:5;2238:16;;2183:77;;;:::o;2266:122::-;2339:24;2357:5;2339:24;:::i;:::-;2332:5;2329:35;2319:63;;2378:1;2375;2368:12;2319:63;2266:122;:::o;2394:139::-;2440:5;2478:6;2465:20;2456:29;;2494:33;2521:5;2494:33;:::i;:::-;2394:139;;;;:::o;2539:474::-;2607:6;2615;2664:2;2652:9;2643:7;2639:23;2635:32;2632:119;;;2670:79;;:::i;:::-;2632:119;2790:1;2815:53;2860:7;2851:6;2840:9;2836:22;2815:53;:::i;:::-;2805:63;;2761:117;2917:2;2943:53;2988:7;2979:6;2968:9;2964:22;2943:53;:::i;:::-;2933:63;;2888:118;2539:474;;;;;:::o;3019:90::-;3053:7;3096:5;3089:13;3082:21;3071:32;;3019:90;;;:::o;3115:109::-;3196:21;3211:5;3196:21;:::i;:::-;3191:3;3184:34;3115:109;;:::o;3230:210::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:65;3430:1;3419:9;3415:17;3406:6;3368:65;:::i;:::-;3230:210;;;;:::o;3446:116::-;3516:21;3531:5;3516:21;:::i;:::-;3509:5;3506:32;3496:60;;3552:1;3549;3542:12;3496:60;3446:116;:::o;3568:133::-;3611:5;3649:6;3636:20;3627:29;;3665:30;3689:5;3665:30;:::i;:::-;3568:133;;;;:::o;3707:468::-;3772:6;3780;3829:2;3817:9;3808:7;3804:23;3800:32;3797:119;;;3835:79;;:::i;:::-;3797:119;3955:1;3980:53;4025:7;4016:6;4005:9;4001:22;3980:53;:::i;:::-;3970:63;;3926:117;4082:2;4108:50;4150:7;4141:6;4130:9;4126:22;4108:50;:::i;:::-;4098:60;;4053:115;3707:468;;;;;:::o;4181:118::-;4268:24;4286:5;4268:24;:::i;:::-;4263:3;4256:37;4181:118;;:::o;4305:222::-;4398:4;4436:2;4425:9;4421:18;4413:26;;4449:71;4517:1;4506:9;4502:17;4493:6;4449:71;:::i;:::-;4305:222;;;;:::o;4533:619::-;4610:6;4618;4626;4675:2;4663:9;4654:7;4650:23;4646:32;4643:119;;;4681:79;;:::i;:::-;4643:119;4801:1;4826:53;4871:7;4862:6;4851:9;4847:22;4826:53;:::i;:::-;4816:63;;4772:117;4928:2;4954:53;4999:7;4990:6;4979:9;4975:22;4954:53;:::i;:::-;4944:63;;4899:118;5056:2;5082:53;5127:7;5118:6;5107:9;5103:22;5082:53;:::i;:::-;5072:63;;5027:118;4533:619;;;;;:::o;5158:329::-;5217:6;5266:2;5254:9;5245:7;5241:23;5237:32;5234:119;;;5272:79;;:::i;:::-;5234:119;5392:1;5417:53;5462:7;5453:6;5442:9;5438:22;5417:53;:::i;:::-;5407:63;;5363:117;5158:329;;;;:::o;5493:86::-;5528:7;5568:4;5561:5;5557:16;5546:27;;5493:86;;;:::o;5585:112::-;5668:22;5684:5;5668:22;:::i;:::-;5663:3;5656:35;5585:112;;:::o;5703:214::-;5792:4;5830:2;5819:9;5815:18;5807:26;;5843:67;5907:1;5896:9;5892:17;5883:6;5843:67;:::i;:::-;5703:214;;;;:::o;5923:329::-;5982:6;6031:2;6019:9;6010:7;6006:23;6002:32;5999:119;;;6037:79;;:::i;:::-;5999:119;6157:1;6182:53;6227:7;6218:6;6207:9;6203:22;6182:53;:::i;:::-;6172:63;;6128:117;5923:329;;;;:::o;6258:118::-;6345:24;6363:5;6345:24;:::i;:::-;6340:3;6333:37;6258:118;;:::o;6382:222::-;6475:4;6513:2;6502:9;6498:18;6490:26;;6526:71;6594:1;6583:9;6579:17;6570:6;6526:71;:::i;:::-;6382:222;;;;:::o;6610:474::-;6678:6;6686;6735:2;6723:9;6714:7;6710:23;6706:32;6703:119;;;6741:79;;:::i;:::-;6703:119;6861:1;6886:53;6931:7;6922:6;6911:9;6907:22;6886:53;:::i;:::-;6876:63;;6832:117;6988:2;7014:53;7059:7;7050:6;7039:9;7035:22;7014:53;:::i;:::-;7004:63;;6959:118;6610:474;;;;;:::o;7090:180::-;7138:77;7135:1;7128:88;7235:4;7232:1;7225:15;7259:4;7256:1;7249:15;7276:320;7320:6;7357:1;7351:4;7347:12;7337:22;;7404:1;7398:4;7394:12;7425:18;7415:81;;7481:4;7473:6;7469:17;7459:27;;7415:81;7543:2;7535:6;7532:14;7512:18;7509:38;7506:84;;7562:18;;:::i;:::-;7506:84;7327:269;7276:320;;;:::o;7602:167::-;7742:19;7738:1;7730:6;7726:14;7719:43;7602:167;:::o;7775:366::-;7917:3;7938:67;8002:2;7997:3;7938:67;:::i;:::-;7931:74;;8014:93;8103:3;8014:93;:::i;:::-;8132:2;8127:3;8123:12;8116:19;;7775:366;;;:::o;8147:419::-;8313:4;8351:2;8340:9;8336:18;8328:26;;8400:9;8394:4;8390:20;8386:1;8375:9;8371:17;8364:47;8428:131;8554:4;8428:131;:::i;:::-;8420:139;;8147:419;;;:::o;8572:180::-;8620:77;8617:1;8610:88;8717:4;8714:1;8707:15;8741:4;8738:1;8731:15;8758:194;8798:4;8818:20;8836:1;8818:20;:::i;:::-;8813:25;;8852:20;8870:1;8852:20;:::i;:::-;8847:25;;8896:1;8893;8889:9;8881:17;;8920:1;8914:4;8911:11;8908:37;;;8925:18;;:::i;:::-;8908:37;8758:194;;;;:::o;8958:332::-;9079:4;9117:2;9106:9;9102:18;9094:26;;9130:71;9198:1;9187:9;9183:17;9174:6;9130:71;:::i;:::-;9211:72;9279:2;9268:9;9264:18;9255:6;9211:72;:::i;:::-;8958:332;;;;;:::o;9296:137::-;9350:5;9381:6;9375:13;9366:22;;9397:30;9421:5;9397:30;:::i;:::-;9296:137;;;;:::o;9439:345::-;9506:6;9555:2;9543:9;9534:7;9530:23;9526:32;9523:119;;;9561:79;;:::i;:::-;9523:119;9681:1;9706:61;9759:7;9750:6;9739:9;9735:22;9706:61;:::i;:::-;9696:71;;9652:125;9439:345;;;;:::o;9790:172::-;9930:24;9926:1;9918:6;9914:14;9907:48;9790:172;:::o;9968:366::-;10110:3;10131:67;10195:2;10190:3;10131:67;:::i;:::-;10124:74;;10207:93;10296:3;10207:93;:::i;:::-;10325:2;10320:3;10316:12;10309:19;;9968:366;;;:::o;10340:419::-;10506:4;10544:2;10533:9;10529:18;10521:26;;10593:9;10587:4;10583:20;10579:1;10568:9;10564:17;10557:47;10621:131;10747:4;10621:131;:::i;:::-;10613:139;;10340:419;;;:::o;10765:172::-;10905:24;10901:1;10893:6;10889:14;10882:48;10765:172;:::o;10943:366::-;11085:3;11106:67;11170:2;11165:3;11106:67;:::i;:::-;11099:74;;11182:93;11271:3;11182:93;:::i;:::-;11300:2;11295:3;11291:12;11284:19;;10943:366;;;:::o;11315:419::-;11481:4;11519:2;11508:9;11504:18;11496:26;;11568:9;11562:4;11558:20;11554:1;11543:9;11539:17;11532:47;11596:131;11722:4;11596:131;:::i;:::-;11588:139;;11315:419;;;:::o;11740:168::-;11880:20;11876:1;11868:6;11864:14;11857:44;11740:168;:::o;11914:366::-;12056:3;12077:67;12141:2;12136:3;12077:67;:::i;:::-;12070:74;;12153:93;12242:3;12153:93;:::i;:::-;12271:2;12266:3;12262:12;12255:19;;11914:366;;;:::o;12286:419::-;12452:4;12490:2;12479:9;12475:18;12467:26;;12539:9;12533:4;12529:20;12525:1;12514:9;12510:17;12503:47;12567:131;12693:4;12567:131;:::i;:::-;12559:139;;12286:419;;;:::o;12711:225::-;12851:34;12847:1;12839:6;12835:14;12828:58;12920:8;12915:2;12907:6;12903:15;12896:33;12711:225;:::o;12942:366::-;13084:3;13105:67;13169:2;13164:3;13105:67;:::i;:::-;13098:74;;13181:93;13270:3;13181:93;:::i;:::-;13299:2;13294:3;13290:12;13283:19;;12942:366;;;:::o;13314:419::-;13480:4;13518:2;13507:9;13503:18;13495:26;;13567:9;13561:4;13557:20;13553:1;13542:9;13538:17;13531:47;13595:131;13721:4;13595:131;:::i;:::-;13587:139;;13314:419;;;:::o;13739:181::-;13879:33;13875:1;13867:6;13863:14;13856:57;13739:181;:::o;13926:366::-;14068:3;14089:67;14153:2;14148:3;14089:67;:::i;:::-;14082:74;;14165:93;14254:3;14165:93;:::i;:::-;14283:2;14278:3;14274:12;14267:19;;13926:366;;;:::o;14298:419::-;14464:4;14502:2;14491:9;14487:18;14479:26;;14551:9;14545:4;14541:20;14537:1;14526:9;14522:17;14515:47;14579:131;14705:4;14579:131;:::i;:::-;14571:139;;14298:419;;;:::o;14723:410::-;14763:7;14786:20;14804:1;14786:20;:::i;:::-;14781:25;;14820:20;14838:1;14820:20;:::i;:::-;14815:25;;14875:1;14872;14868:9;14897:30;14915:11;14897:30;:::i;:::-;14886:41;;15076:1;15067:7;15063:15;15060:1;15057:22;15037:1;15030:9;15010:83;14987:139;;15106:18;;:::i;:::-;14987:139;14771:362;14723:410;;;;:::o;15139:180::-;15187:77;15184:1;15177:88;15284:4;15281:1;15274:15;15308:4;15305:1;15298:15;15325:185;15365:1;15382:20;15400:1;15382:20;:::i;:::-;15377:25;;15416:20;15434:1;15416:20;:::i;:::-;15411:25;;15455:1;15445:35;;15460:18;;:::i;:::-;15445:35;15502:1;15499;15495:9;15490:14;;15325:185;;;;:::o;15516:191::-;15556:3;15575:20;15593:1;15575:20;:::i;:::-;15570:25;;15609:20;15627:1;15609:20;:::i;:::-;15604:25;;15652:1;15649;15645:9;15638:16;;15673:3;15670:1;15667:10;15664:36;;;15680:18;;:::i;:::-;15664:36;15516:191;;;;:::o;15713:220::-;15853:34;15849:1;15841:6;15837:14;15830:58;15922:3;15917:2;15909:6;15905:15;15898:28;15713:220;:::o;15939:366::-;16081:3;16102:67;16166:2;16161:3;16102:67;:::i;:::-;16095:74;;16178:93;16267:3;16178:93;:::i;:::-;16296:2;16291:3;16287:12;16280:19;;15939:366;;;:::o;16311:419::-;16477:4;16515:2;16504:9;16500:18;16492:26;;16564:9;16558:4;16554:20;16550:1;16539:9;16535:17;16528:47;16592:131;16718:4;16592:131;:::i;:::-;16584:139;;16311:419;;;:::o;16736:171::-;16876:23;16872:1;16864:6;16860:14;16853:47;16736:171;:::o;16913:366::-;17055:3;17076:67;17140:2;17135:3;17076:67;:::i;:::-;17069:74;;17152:93;17241:3;17152:93;:::i;:::-;17270:2;17265:3;17261:12;17254:19;;16913:366;;;:::o;17285:419::-;17451:4;17489:2;17478:9;17474:18;17466:26;;17538:9;17532:4;17528:20;17524:1;17513:9;17509:17;17502:47;17566:131;17692:4;17566:131;:::i;:::-;17558:139;;17285:419;;;:::o;17710:170::-;17850:22;17846:1;17838:6;17834:14;17827:46;17710:170;:::o;17886:366::-;18028:3;18049:67;18113:2;18108:3;18049:67;:::i;:::-;18042:74;;18125:93;18214:3;18125:93;:::i;:::-;18243:2;18238:3;18234:12;18227:19;;17886:366;;;:::o;18258:419::-;18424:4;18462:2;18451:9;18447:18;18439:26;;18511:9;18505:4;18501:20;18497:1;18486:9;18482:17;18475:47;18539:131;18665:4;18539:131;:::i;:::-;18531:139;;18258:419;;;:::o;18683:176::-;18823:28;18819:1;18811:6;18807:14;18800:52;18683:176;:::o;18865:366::-;19007:3;19028:67;19092:2;19087:3;19028:67;:::i;:::-;19021:74;;19104:93;19193:3;19104:93;:::i;:::-;19222:2;19217:3;19213:12;19206:19;;18865:366;;;:::o;19237:419::-;19403:4;19441:2;19430:9;19426:18;19418:26;;19490:9;19484:4;19480:20;19476:1;19465:9;19461:17;19454:47;19518:131;19644:4;19518:131;:::i;:::-;19510:139;;19237:419;;;:::o;19662:180::-;19802:32;19798:1;19790:6;19786:14;19779:56;19662:180;:::o;19848:366::-;19990:3;20011:67;20075:2;20070:3;20011:67;:::i;:::-;20004:74;;20087:93;20176:3;20087:93;:::i;:::-;20205:2;20200:3;20196:12;20189:19;;19848:366;;;:::o;20220:419::-;20386:4;20424:2;20413:9;20409:18;20401:26;;20473:9;20467:4;20463:20;20459:1;20448:9;20444:17;20437:47;20501:131;20627:4;20501:131;:::i;:::-;20493:139;;20220:419;;;:::o;20645:442::-;20794:4;20832:2;20821:9;20817:18;20809:26;;20845:71;20913:1;20902:9;20898:17;20889:6;20845:71;:::i;:::-;20926:72;20994:2;20983:9;20979:18;20970:6;20926:72;:::i;:::-;21008;21076:2;21065:9;21061:18;21052:6;21008:72;:::i;:::-;20645:442;;;;;;:::o;21093:181::-;21233:33;21229:1;21221:6;21217:14;21210:57;21093:181;:::o;21280:366::-;21422:3;21443:67;21507:2;21502:3;21443:67;:::i;:::-;21436:74;;21519:93;21608:3;21519:93;:::i;:::-;21637:2;21632:3;21628:12;21621:19;;21280:366;;;:::o;21652:419::-;21818:4;21856:2;21845:9;21841:18;21833:26;;21905:9;21899:4;21895:20;21891:1;21880:9;21876:17;21869:47;21933:131;22059:4;21933:131;:::i;:::-;21925:139;;21652:419;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2092200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_ENGAGEMENT_POINTS()": "458",
								"MAX_TAX_RATE()": "370",
								"MAX_TRANSFER_AMOUNT()": "457",
								"TOTAL_SUPPLY()": "392",
								"addToWhitelist(address)": "infinite",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balance(address)": "2937",
								"balanceOf(address)": "2896",
								"burn(uint256)": "infinite",
								"burnSupply(uint256)": "infinite",
								"claimReward()": "infinite",
								"decimals()": "450",
								"deductEngagementPoints(address,uint256)": "infinite",
								"enableTrading()": "infinite",
								"engagementPoints(address)": "2892",
								"name()": "infinite",
								"owner()": "2627",
								"pause()": "infinite",
								"paused()": "2629",
								"removeFromWhitelist(address)": "infinite",
								"renounceOwnership()": "infinite",
								"rescueTokens(address,uint256)": "infinite",
								"setBlacklist(address,bool)": "infinite",
								"setTaxRate(uint256)": "infinite",
								"symbol()": "infinite",
								"taxRate()": "2536",
								"totalSupply()": "2478",
								"tradingEnabled()": "2534",
								"tradingStartBlock()": "2536",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"updateEngagementPoints(address,uint256)": "infinite",
								"withdrawBalance()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 362,
									"end": 6948,
									"name": "PUSH",
									"source": 9,
									"value": "80"
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "PUSH",
									"source": 9,
									"value": "40"
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 582,
									"end": 583,
									"name": "PUSH",
									"source": 9,
									"value": "2"
								},
								{
									"begin": 557,
									"end": 583,
									"name": "PUSH",
									"source": 9,
									"value": "7"
								},
								{
									"begin": 557,
									"end": 583,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1179,
									"end": 1184,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1150,
									"end": 1184,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1211,
									"end": 1216,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 9,
									"value": "D"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 9,
									"value": "100"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "EXP",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SLOAD",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "PUSH",
									"source": 9,
									"value": "FF"
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "NOT",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "AND",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "DUP4",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "MUL",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "OR",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "SSTORE",
									"source": 9
								},
								{
									"begin": 1190,
									"end": 1216,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "CALLVALUE",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "ISZERO",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1223,
									"end": 1783,
									"name": "POP",
									"source": 9
								},
								{
									"begin": 1273,
									"end": 1283,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "4765636B6F476F6C640000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "PUSH",
									"source": 4,
									"value": "4745434B4F000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1675,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1672,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1667,
									"end": 1680,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "tag",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1667,
									"end": 1680,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1700,
									"end": 1707,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1697,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 1690,
									"end": 1707,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "tag",
									"source": 4,
									"value": "9"
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1690,
									"end": 1707,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1601,
									"end": 1714,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 1716,
									"end": 1717,
									"name": "PUSH",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 1821,
									"end": 1828,
									"name": "PUSH",
									"source": 3,
									"value": "6"
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "DUP2",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SWAP1",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "SSTORE",
									"source": 3
								},
								{
									"begin": 1821,
									"end": 1843,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 1360,
									"end": 1404,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1366,
									"end": 1376,
									"modifierDepth": 2,
									"name": "CALLER",
									"source": 9
								},
								{
									"begin": 1400,
									"end": 1403,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1394,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 524,
									"end": 550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "54F529CA52576BC6892000000"
								},
								{
									"begin": 1379,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1379,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1379,
									"end": 1396,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1379,
									"end": 1396,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1379,
									"end": 1396,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1379,
									"end": 1396,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 1379,
									"end": 1396,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 1403,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1378,
									"end": 1403,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 1403,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 1403,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1378,
									"end": 1403,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1378,
									"end": 1403,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "21"
								},
								{
									"begin": 1378,
									"end": 1403,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1365,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1360,
									"end": 1365,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1360,
									"end": 1365,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1404,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1360,
									"end": 1404,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1404,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1360,
									"end": 1404,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "18"
								},
								{
									"begin": 1360,
									"end": 1404,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1468,
									"end": 1510,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "2BFF1B7B4E9F2483B429AFBA11DDB474F552678"
								},
								{
									"begin": 1534,
									"end": 1537,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1528,
									"end": 1530,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "19"
								},
								{
									"begin": 524,
									"end": 550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "54F529CA52576BC6892000000"
								},
								{
									"begin": 1513,
									"end": 1530,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1513,
									"end": 1530,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1513,
									"end": 1530,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1513,
									"end": 1530,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1513,
									"end": 1530,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1513,
									"end": 1530,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "25"
								},
								{
									"begin": 1513,
									"end": 1530,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 1537,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1512,
									"end": 1537,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 1537,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 1537,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1512,
									"end": 1537,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1512,
									"end": 1537,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "26"
								},
								{
									"begin": 1512,
									"end": 1537,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1462,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1462,
									"end": 1467,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1462,
									"end": 1467,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1462,
									"end": 1538,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 1462,
									"end": 1538,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1735,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1665,
									"end": 1707,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "78F48F0A33277AC7FF8672F9A71596759CF489D2"
								},
								{
									"begin": 1731,
									"end": 1734,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "64"
								},
								{
									"begin": 1725,
									"end": 1727,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "32"
								},
								{
									"begin": 524,
									"end": 550,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "54F529CA52576BC6892000000"
								},
								{
									"begin": 1710,
									"end": 1727,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1710,
									"end": 1727,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1727,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1727,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1710,
									"end": 1727,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1710,
									"end": 1727,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "28"
								},
								{
									"begin": 1710,
									"end": 1727,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1709,
									"end": 1734,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1709,
									"end": 1734,
									"modifierDepth": 2,
									"name": "SWAP2",
									"source": 9
								},
								{
									"begin": 1709,
									"end": 1734,
									"modifierDepth": 2,
									"name": "SWAP1",
									"source": 9
								},
								{
									"begin": 1709,
									"end": 1734,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "22"
								},
								{
									"begin": 1709,
									"end": 1734,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1709,
									"end": 1734,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "29"
								},
								{
									"begin": 1709,
									"end": 1734,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1664,
									"modifierDepth": 2,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "23"
								},
								{
									"begin": 1659,
									"end": 1664,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1659,
									"end": 1664,
									"modifierDepth": 2,
									"name": "SHL",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1735,
									"modifierDepth": 2,
									"name": "PUSH",
									"source": 9,
									"value": "20"
								},
								{
									"begin": 1659,
									"end": 1735,
									"modifierDepth": 2,
									"name": "SHR",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1735,
									"jumpType": "[in]",
									"modifierDepth": 2,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 1659,
									"end": 1735,
									"modifierDepth": 2,
									"name": "tag",
									"source": 9,
									"value": "27"
								},
								{
									"begin": 1659,
									"end": 1735,
									"modifierDepth": 2,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "JUMP",
									"source": 9
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7547,
									"end": 7548,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7535,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7528,
									"end": 7549,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 7601,
									"end": 7602,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "13"
								},
								{
									"begin": 7572,
									"end": 7604,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "tag",
									"source": 4,
									"value": "34"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7572,
									"end": 7604,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "tag",
									"source": 4,
									"value": "33"
								},
								{
									"begin": 7524,
									"end": 7615,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7640,
									"end": 7641,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7644,
									"end": 7651,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7653,
									"end": 7658,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7631,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "tag",
									"source": 4,
									"value": "35"
								},
								{
									"begin": 7624,
									"end": 7659,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7458,
									"end": 7666,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "tag",
									"source": 4,
									"value": "36"
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6113,
									"end": 6114,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6101,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6097,
									"end": 6115,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6249,
									"end": 6254,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6233,
									"end": 6245,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6233,
									"end": 6254,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "tag",
									"source": 4,
									"value": "39"
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6233,
									"end": 6254,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "38"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6304,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6316,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6317,
									"end": 6321,
									"name": "DUP6",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6307,
									"end": 6322,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6285,
									"end": 6322,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6354,
									"end": 6359,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6351,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6340,
									"end": 6359,
									"name": "LT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6411,
									"end": 6415,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6417,
									"end": 6428,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6430,
									"end": 6435,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP4",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "44"
								},
								{
									"begin": 6386,
									"end": 6436,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "tag",
									"source": 4,
									"value": "43"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6386,
									"end": 6436,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "tag",
									"source": 4,
									"value": "42"
								},
								{
									"begin": 6336,
									"end": 6451,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6603,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6600,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6589,
									"end": 6608,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6580,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6581,
									"end": 6585,
									"name": "DUP7",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6571,
									"end": 6586,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6571,
									"end": 6608,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6271,
									"end": 6633,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "tag",
									"source": 4,
									"value": "41"
								},
								{
									"begin": 6093,
									"end": 6633,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 6661,
									"end": 6662,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6649,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 6647,
									"end": 6663,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 6826,
									"end": 6831,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 6810,
									"end": 6822,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 6810,
									"end": 6831,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "45"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7038,
									"end": 7043,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7030,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7031,
									"end": 7033,
									"name": "DUP5",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "KECCAK256",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7034,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP3",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 7021,
									"end": 7043,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "tag",
									"source": 4,
									"value": "46"
								},
								{
									"begin": 6643,
									"end": 7068,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7098,
									"end": 7100,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7092,
									"end": 7096,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7102,
									"end": 7107,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "48"
								},
								{
									"begin": 7083,
									"end": 7108,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "tag",
									"source": 4,
									"value": "47"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 7083,
									"end": 7108,
									"name": "LOG3",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 6008,
									"end": 7115,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 106,
									"name": "tag",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 7,
									"end": 106,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 59,
									"end": 65,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 93,
									"end": 98,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 87,
									"end": 99,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 77,
									"end": 99,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7,
									"end": 106,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 112,
									"end": 292,
									"name": "tag",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 112,
									"end": 292,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 160,
									"end": 237,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 157,
									"end": 158,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 150,
									"end": 238,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 257,
									"end": 261,
									"name": "PUSH",
									"source": 10,
									"value": "41"
								},
								{
									"begin": 254,
									"end": 255,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 247,
									"end": 262,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 281,
									"end": 285,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 278,
									"end": 279,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 271,
									"end": 286,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 298,
									"end": 478,
									"name": "tag",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 298,
									"end": 478,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 346,
									"end": 423,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 343,
									"end": 344,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 336,
									"end": 424,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 443,
									"end": 447,
									"name": "PUSH",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 440,
									"end": 441,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 433,
									"end": 448,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 467,
									"end": 471,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 464,
									"end": 465,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 457,
									"end": 472,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "tag",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 484,
									"end": 804,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 565,
									"end": 566,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 559,
									"end": 563,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 555,
									"end": 567,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 545,
									"end": 567,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 612,
									"end": 613,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 606,
									"end": 610,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 602,
									"end": 614,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 633,
									"end": 651,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 689,
									"end": 693,
									"name": "PUSH",
									"source": 10,
									"value": "7F"
								},
								{
									"begin": 681,
									"end": 687,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 677,
									"end": 694,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 667,
									"end": 694,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 623,
									"end": 704,
									"name": "tag",
									"source": 10,
									"value": "80"
								},
								{
									"begin": 623,
									"end": 704,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 751,
									"end": 753,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 743,
									"end": 749,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 740,
									"end": 754,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 720,
									"end": 738,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 717,
									"end": 755,
									"name": "SUB",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "51"
								},
								{
									"begin": 770,
									"end": 788,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 770,
									"end": 788,
									"name": "tag",
									"source": 10,
									"value": "82"
								},
								{
									"begin": 770,
									"end": 788,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 714,
									"end": 798,
									"name": "tag",
									"source": 10,
									"value": "81"
								},
								{
									"begin": 714,
									"end": 798,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 535,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 484,
									"end": 804,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "tag",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 810,
									"end": 951,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 859,
									"end": 863,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 882,
									"end": 885,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 874,
									"end": 885,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 905,
									"end": 908,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 902,
									"end": 903,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 895,
									"end": 909,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 939,
									"end": 943,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 937,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 926,
									"end": 944,
									"name": "KECCAK256",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 810,
									"end": 951,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "tag",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 994,
									"end": 1000,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1041,
									"end": 1043,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 1036,
									"end": 1038,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1025,
									"end": 1039,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 1021,
									"end": 1044,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1011,
									"end": 1044,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 957,
									"end": 1050,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "tag",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1100,
									"end": 1108,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1150,
									"end": 1155,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1140,
									"end": 1156,
									"name": "SHL",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1119,
									"end": 1156,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1056,
									"end": 1163,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "tag",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1238,
									"end": 1244,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1288,
									"end": 1289,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 1276,
									"end": 1286,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1272,
									"end": 1290,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1341,
									"end": 1407,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1330,
									"end": 1339,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1311,
									"end": 1408,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "tag",
									"source": 10,
									"value": "87"
								},
								{
									"begin": 1311,
									"end": 1408,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 1459,
									"end": 1467,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1448,
									"end": 1457,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "55"
								},
								{
									"begin": 1429,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "tag",
									"source": 10,
									"value": "88"
								},
								{
									"begin": 1429,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "SWAP6",
									"source": 10
								},
								{
									"begin": 1417,
									"end": 1468,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1501,
									"end": 1505,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1497,
									"end": 1506,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 1490,
									"end": 1495,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1486,
									"end": 1507,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1477,
									"end": 1507,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1550,
									"end": 1554,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 1540,
									"end": 1548,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 1536,
									"end": 1555,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 1529,
									"end": 1534,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1526,
									"end": 1556,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1516,
									"end": 1556,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1245,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1169,
									"end": 1562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "tag",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1605,
									"end": 1612,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1634,
									"end": 1639,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1623,
									"end": 1639,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1568,
									"end": 1645,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "tag",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1679,
									"end": 1682,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1700,
									"end": 1705,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1693,
									"end": 1705,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1651,
									"end": 1711,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "tag",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1767,
									"end": 1776,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 1845,
									"end": 1850,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1827,
									"end": 1851,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "tag",
									"source": 10,
									"value": "94"
								},
								{
									"begin": 1827,
									"end": 1851,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "58"
								},
								{
									"begin": 1818,
									"end": 1852,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "tag",
									"source": 10,
									"value": "93"
								},
								{
									"begin": 1818,
									"end": 1852,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 1800,
									"end": 1853,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "tag",
									"source": 10,
									"value": "92"
								},
								{
									"begin": 1800,
									"end": 1853,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1787,
									"end": 1853,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1717,
									"end": 1859,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "tag",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 1908,
									"end": 1911,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 1929,
									"end": 1934,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1922,
									"end": 1934,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1865,
									"end": 1940,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "tag",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2087,
									"end": 2094,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "59"
								},
								{
									"begin": 2056,
									"end": 2095,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "tag",
									"source": 10,
									"value": "97"
								},
								{
									"begin": 2056,
									"end": 2095,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 2190,
									"end": 2206,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 2166,
									"end": 2207,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "tag",
									"source": 10,
									"value": "99"
								},
								{
									"begin": 2166,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2158,
									"end": 2164,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2151,
									"end": 2155,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2145,
									"end": 2156,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "56"
								},
								{
									"begin": 2117,
									"end": 2208,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "tag",
									"source": 10,
									"value": "98"
								},
								{
									"begin": 2117,
									"end": 2208,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2111,
									"end": 2115,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2104,
									"end": 2209,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 2022,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 1946,
									"end": 2215,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "tag",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2266,
									"end": 2269,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2221,
									"end": 2294,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2221,
									"end": 2294,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "tag",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "62"
								},
								{
									"begin": 2377,
									"end": 2409,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "tag",
									"source": 10,
									"value": "102"
								},
								{
									"begin": 2377,
									"end": 2409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 2476,
									"end": 2482,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2468,
									"end": 2474,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2462,
									"end": 2466,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "61"
								},
								{
									"begin": 2418,
									"end": 2483,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "tag",
									"source": 10,
									"value": "103"
								},
								{
									"begin": 2418,
									"end": 2483,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2353,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2300,
									"end": 2489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "tag",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2572,
									"end": 2575,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2565,
									"end": 2570,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2562,
									"end": 2576,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 2663,
									"end": 2664,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 2656,
									"end": 2661,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "63"
								},
								{
									"begin": 2626,
									"end": 2665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "tag",
									"source": 10,
									"value": "108"
								},
								{
									"begin": 2626,
									"end": 2665,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2599,
									"end": 2600,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 2592,
									"end": 2597,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2588,
									"end": 2601,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 2579,
									"end": 2601,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "105"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "tag",
									"source": 10,
									"value": "107"
								},
								{
									"begin": 2555,
									"end": 2675,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2495,
									"end": 2681,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "tag",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2788,
									"end": 2790,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 2783,
									"end": 2786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 2780,
									"end": 2791,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 2854,
									"end": 2859,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 2822,
									"end": 2860,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "tag",
									"source": 10,
									"value": "111"
								},
								{
									"begin": 2822,
									"end": 2860,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 2924,
									"end": 2934,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 2906,
									"end": 2935,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "tag",
									"source": 10,
									"value": "112"
								},
								{
									"begin": 2906,
									"end": 2935,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2896,
									"end": 2904,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 2892,
									"end": 2936,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3089,
									"end": 3091,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 3077,
									"end": 3087,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3074,
									"end": 3092,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 3110,
									"end": 3118,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3095,
									"end": 3118,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "tag",
									"source": 10,
									"value": "113"
								},
								{
									"begin": 3071,
									"end": 3120,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 3207,
									"end": 3210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "54"
								},
								{
									"begin": 3189,
									"end": 3211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "tag",
									"source": 10,
									"value": "115"
								},
								{
									"begin": 3189,
									"end": 3211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3179,
									"end": 3187,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3175,
									"end": 3212,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 3162,
									"end": 3173,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "64"
								},
								{
									"begin": 3133,
									"end": 3213,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "tag",
									"source": 10,
									"value": "114"
								},
								{
									"begin": 3133,
									"end": 3213,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2792,
									"end": 3223,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "tag",
									"source": 10,
									"value": "110"
								},
								{
									"begin": 2777,
									"end": 3223,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 2687,
									"end": 3230,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "tag",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3290,
									"end": 3298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3340,
									"end": 3345,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3334,
									"end": 3338,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3330,
									"end": 3346,
									"name": "SHR",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3309,
									"end": 3346,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3236,
									"end": 3353,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "tag",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3403,
									"end": 3409,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 3484,
									"end": 3485,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3480,
									"end": 3486,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3472,
									"end": 3477,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 3469,
									"end": 3470,
									"name": "PUSH",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3465,
									"end": 3478,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "66"
								},
								{
									"begin": 3436,
									"end": 3487,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "tag",
									"source": 10,
									"value": "118"
								},
								{
									"begin": 3436,
									"end": 3487,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3432,
									"end": 3488,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 3517,
									"end": 3521,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 3511,
									"end": 3515,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3507,
									"end": 3522,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3497,
									"end": 3522,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3410,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3359,
									"end": 3528,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "tag",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3609,
									"end": 3613,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 3780,
									"end": 3783,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3774,
									"end": 3778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 3755,
									"end": 3784,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "tag",
									"source": 10,
									"value": "120"
								},
								{
									"begin": 3755,
									"end": 3784,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3747,
									"end": 3784,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3817,
									"end": 3820,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3814,
									"end": 3815,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 3810,
									"end": 3821,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 3804,
									"end": 3808,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3801,
									"end": 3822,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 3793,
									"end": 3822,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3533,
									"end": 3828,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "tag",
									"source": 10,
									"value": "8"
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 3983,
									"end": 3986,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "49"
								},
								{
									"begin": 3950,
									"end": 3987,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "tag",
									"source": 10,
									"value": "122"
								},
								{
									"begin": 3950,
									"end": 3987,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4052,
									"end": 4070,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 4044,
									"end": 4050,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4041,
									"end": 4071,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "50"
								},
								{
									"begin": 4074,
									"end": 4092,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "tag",
									"source": 10,
									"value": "124"
								},
								{
									"begin": 4074,
									"end": 4092,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "tag",
									"source": 10,
									"value": "123"
								},
								{
									"begin": 4038,
									"end": 4094,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 4150,
									"end": 4154,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4144,
									"end": 4155,
									"name": "SLOAD",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "52"
								},
								{
									"begin": 4118,
									"end": 4156,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "tag",
									"source": 10,
									"value": "125"
								},
								{
									"begin": 4118,
									"end": 4156,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 4263,
									"end": 4269,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4255,
									"end": 4261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4249,
									"end": 4253,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "65"
								},
								{
									"begin": 4203,
									"end": 4270,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "tag",
									"source": 10,
									"value": "126"
								},
								{
									"begin": 4203,
									"end": 4270,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4297,
									"end": 4298,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4321,
									"end": 4325,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4308,
									"end": 4325,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4353,
									"end": 4355,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4345,
									"end": 4351,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4342,
									"end": 4356,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 4370,
									"end": 4371,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5027,
									"end": 5028,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5044,
									"end": 5050,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 5093,
									"end": 5102,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5088,
									"end": 5091,
									"name": "DUP8",
									"source": 10
								},
								{
									"begin": 5084,
									"end": 5103,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5078,
									"end": 5104,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5069,
									"end": 5104,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "tag",
									"source": 10,
									"value": "129"
								},
								{
									"begin": 5041,
									"end": 5118,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 5204,
									"end": 5210,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 5197,
									"end": 5202,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "68"
								},
								{
									"begin": 5144,
									"end": 5211,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "tag",
									"source": 10,
									"value": "130"
								},
								{
									"begin": 5144,
									"end": 5211,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5138,
									"end": 5142,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 5131,
									"end": 5212,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 5000,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "tag",
									"source": 10,
									"value": "128"
								},
								{
									"begin": 4365,
									"end": 4983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4417,
									"end": 4421,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4413,
									"end": 4422,
									"name": "NOT",
									"source": 10
								},
								{
									"begin": 4405,
									"end": 4411,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4401,
									"end": 4423,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 4483,
									"end": 4487,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "53"
								},
								{
									"begin": 4451,
									"end": 4488,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "tag",
									"source": 10,
									"value": "131"
								},
								{
									"begin": 4451,
									"end": 4488,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4510,
									"end": 4511,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4538,
									"end": 4545,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4535,
									"end": 4536,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4532,
									"end": 4546,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4617,
									"end": 4626,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4612,
									"end": 4615,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4608,
									"end": 4627,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4602,
									"end": 4628,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4594,
									"end": 4600,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4587,
									"end": 4629,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4668,
									"end": 4669,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4660,
									"end": 4666,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4656,
									"end": 4670,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 4646,
									"end": 4670,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4715,
									"end": 4717,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4704,
									"end": 4713,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 4700,
									"end": 4718,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 4687,
									"end": 4718,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4561,
									"end": 4565,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 4558,
									"end": 4559,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 4554,
									"end": 4566,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 4549,
									"end": 4566,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "132"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "tag",
									"source": 10,
									"value": "134"
								},
								{
									"begin": 4524,
									"end": 4732,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4760,
									"end": 4766,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 4751,
									"end": 4758,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4748,
									"end": 4767,
									"name": "LT",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 4818,
									"end": 4827,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 4813,
									"end": 4816,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4809,
									"end": 4828,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4803,
									"end": 4829,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 4903,
									"end": 4907,
									"name": "PUSH",
									"source": 10,
									"value": "1F"
								},
								{
									"begin": 4895,
									"end": 4901,
									"name": "DUP10",
									"source": 10
								},
								{
									"begin": 4891,
									"end": 4908,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 4880,
									"end": 4889,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "67"
								},
								{
									"begin": 4861,
									"end": 4909,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "tag",
									"source": 10,
									"value": "136"
								},
								{
									"begin": 4861,
									"end": 4909,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4853,
									"end": 4859,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 4846,
									"end": 4910,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4768,
									"end": 4924,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "tag",
									"source": 10,
									"value": "135"
								},
								{
									"begin": 4745,
									"end": 4924,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4970,
									"end": 4971,
									"name": "PUSH",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 4966,
									"end": 4967,
									"name": "PUSH",
									"source": 10,
									"value": "2"
								},
								{
									"begin": 4958,
									"end": 4964,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4954,
									"end": 4968,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 4950,
									"end": 4972,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 4944,
									"end": 4948,
									"name": "DUP9",
									"source": 10
								},
								{
									"begin": 4937,
									"end": 4973,
									"name": "SSTORE",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4372,
									"end": 4983,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "tag",
									"source": 10,
									"value": "127"
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 4335,
									"end": 5222,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3925,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 3833,
									"end": 5228,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "tag",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5271,
									"end": 5278,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5311,
									"end": 5353,
									"name": "PUSH",
									"source": 10,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5304,
									"end": 5309,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5300,
									"end": 5354,
									"name": "AND",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5289,
									"end": 5354,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5234,
									"end": 5360,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "tag",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5403,
									"end": 5410,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 5450,
									"end": 5455,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "69"
								},
								{
									"begin": 5432,
									"end": 5456,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "tag",
									"source": 10,
									"value": "139"
								},
								{
									"begin": 5432,
									"end": 5456,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5421,
									"end": 5456,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5366,
									"end": 5462,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "tag",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 5573,
									"end": 5578,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "70"
								},
								{
									"begin": 5555,
									"end": 5579,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "tag",
									"source": 10,
									"value": "141"
								},
								{
									"begin": 5555,
									"end": 5579,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5550,
									"end": 5553,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5543,
									"end": 5580,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5468,
									"end": 5586,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "tag",
									"source": 10,
									"value": "13"
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5685,
									"end": 5689,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5723,
									"end": 5725,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 5712,
									"end": 5721,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 5708,
									"end": 5726,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 5700,
									"end": 5726,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 5804,
									"end": 5805,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5793,
									"end": 5802,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 5789,
									"end": 5806,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 5780,
									"end": 5786,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 5736,
									"end": 5807,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "tag",
									"source": 10,
									"value": "143"
								},
								{
									"begin": 5736,
									"end": 5807,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 5592,
									"end": 5814,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "tag",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 5820,
									"end": 6000,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 5868,
									"end": 5945,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 5865,
									"end": 5866,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5858,
									"end": 5946,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5965,
									"end": 5969,
									"name": "PUSH",
									"source": 10,
									"value": "11"
								},
								{
									"begin": 5962,
									"end": 5963,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 5955,
									"end": 5970,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 5989,
									"end": 5993,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 5986,
									"end": 5987,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 5979,
									"end": 5994,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6416,
									"name": "tag",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 6006,
									"end": 6416,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6046,
									"end": 6053,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6069,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 6087,
									"end": 6088,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6069,
									"end": 6089,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 6069,
									"end": 6089,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6069,
									"end": 6089,
									"name": "tag",
									"source": 10,
									"value": "146"
								},
								{
									"begin": 6069,
									"end": 6089,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6064,
									"end": 6089,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6064,
									"end": 6089,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6103,
									"end": 6123,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 6121,
									"end": 6122,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6103,
									"end": 6123,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 6103,
									"end": 6123,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6103,
									"end": 6123,
									"name": "tag",
									"source": 10,
									"value": "147"
								},
								{
									"begin": 6103,
									"end": 6123,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6098,
									"end": 6123,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6098,
									"end": 6123,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6158,
									"end": 6159,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6155,
									"end": 6156,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6151,
									"end": 6160,
									"name": "MUL",
									"source": 10
								},
								{
									"begin": 6180,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 6198,
									"end": 6209,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 6180,
									"end": 6210,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 6180,
									"end": 6210,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6180,
									"end": 6210,
									"name": "tag",
									"source": 10,
									"value": "148"
								},
								{
									"begin": 6180,
									"end": 6210,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6169,
									"end": 6210,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6169,
									"end": 6210,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6359,
									"end": 6360,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6350,
									"end": 6357,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6346,
									"end": 6361,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 6343,
									"end": 6344,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 6340,
									"end": 6362,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 6320,
									"end": 6321,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6313,
									"end": 6322,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6293,
									"end": 6376,
									"name": "OR",
									"source": 10
								},
								{
									"begin": 6270,
									"end": 6409,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 6270,
									"end": 6409,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6389,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6389,
									"end": 6407,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 6389,
									"end": 6407,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6389,
									"end": 6407,
									"name": "tag",
									"source": 10,
									"value": "150"
								},
								{
									"begin": 6389,
									"end": 6407,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6270,
									"end": 6409,
									"name": "tag",
									"source": 10,
									"value": "149"
								},
								{
									"begin": 6270,
									"end": 6409,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6054,
									"end": 6416,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6416,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6416,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6416,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6416,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6006,
									"end": 6416,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6422,
									"end": 6602,
									"name": "tag",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 6422,
									"end": 6602,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6470,
									"end": 6547,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6467,
									"end": 6468,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6460,
									"end": 6548,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6567,
									"end": 6571,
									"name": "PUSH",
									"source": 10,
									"value": "12"
								},
								{
									"begin": 6564,
									"end": 6565,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 6557,
									"end": 6572,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6591,
									"end": 6595,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 6588,
									"end": 6589,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6581,
									"end": 6596,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6793,
									"name": "tag",
									"source": 10,
									"value": "22"
								},
								{
									"begin": 6608,
									"end": 6793,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6648,
									"end": 6649,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6665,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 6683,
									"end": 6684,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6665,
									"end": 6685,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 6665,
									"end": 6685,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6665,
									"end": 6685,
									"name": "tag",
									"source": 10,
									"value": "153"
								},
								{
									"begin": 6665,
									"end": 6685,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6660,
									"end": 6685,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6660,
									"end": 6685,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6699,
									"end": 6719,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 6717,
									"end": 6718,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6699,
									"end": 6719,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 6699,
									"end": 6719,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6699,
									"end": 6719,
									"name": "tag",
									"source": 10,
									"value": "154"
								},
								{
									"begin": 6699,
									"end": 6719,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6694,
									"end": 6719,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6694,
									"end": 6719,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6738,
									"end": 6739,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6728,
									"end": 6763,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 6728,
									"end": 6763,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 6743,
									"end": 6761,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "tag",
									"source": 10,
									"value": "156"
								},
								{
									"begin": 6743,
									"end": 6761,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6728,
									"end": 6763,
									"name": "tag",
									"source": 10,
									"value": "155"
								},
								{
									"begin": 6728,
									"end": 6763,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6785,
									"end": 6786,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6782,
									"end": 6783,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6778,
									"end": 6787,
									"name": "DIV",
									"source": 10
								},
								{
									"begin": 6773,
									"end": 6787,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6773,
									"end": 6787,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6793,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6793,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6793,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6793,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6608,
									"end": 6793,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6799,
									"end": 6990,
									"name": "tag",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 6799,
									"end": 6990,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6839,
									"end": 6842,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 6858,
									"end": 6878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 6876,
									"end": 6877,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6858,
									"end": 6878,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 6858,
									"end": 6878,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6858,
									"end": 6878,
									"name": "tag",
									"source": 10,
									"value": "158"
								},
								{
									"begin": 6858,
									"end": 6878,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 6878,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6853,
									"end": 6878,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6892,
									"end": 6912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 6910,
									"end": 6911,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 6892,
									"end": 6912,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 6892,
									"end": 6912,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6892,
									"end": 6912,
									"name": "tag",
									"source": 10,
									"value": "159"
								},
								{
									"begin": 6892,
									"end": 6912,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6887,
									"end": 6912,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6887,
									"end": 6912,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6935,
									"end": 6936,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6932,
									"end": 6933,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6928,
									"end": 6937,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 6921,
									"end": 6937,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 6921,
									"end": 6937,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6956,
									"end": 6959,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 6953,
									"end": 6954,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 6950,
									"end": 6960,
									"name": "GT",
									"source": 10
								},
								{
									"begin": 6947,
									"end": 6983,
									"name": "ISZERO",
									"source": 10
								},
								{
									"begin": 6947,
									"end": 6983,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 6947,
									"end": 6983,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 6963,
									"end": 6981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 6963,
									"end": 6981,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "72"
								},
								{
									"begin": 6963,
									"end": 6981,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6963,
									"end": 6981,
									"name": "tag",
									"source": 10,
									"value": "161"
								},
								{
									"begin": 6963,
									"end": 6981,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6947,
									"end": 6983,
									"name": "tag",
									"source": 10,
									"value": "160"
								},
								{
									"begin": 6947,
									"end": 6983,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 6799,
									"end": 6990,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 6799,
									"end": 6990,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 6799,
									"end": 6990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6799,
									"end": 6990,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6799,
									"end": 6990,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 6996,
									"end": 7114,
									"name": "tag",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 6996,
									"end": 7114,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7083,
									"end": 7107,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 7101,
									"end": 7106,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 7083,
									"end": 7107,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "57"
								},
								{
									"begin": 7083,
									"end": 7107,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7083,
									"end": 7107,
									"name": "tag",
									"source": 10,
									"value": "163"
								},
								{
									"begin": 7083,
									"end": 7107,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7078,
									"end": 7081,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7071,
									"end": 7108,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 6996,
									"end": 7114,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6996,
									"end": 7114,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 6996,
									"end": 7114,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7120,
									"end": 7562,
									"name": "tag",
									"source": 10,
									"value": "44"
								},
								{
									"begin": 7120,
									"end": 7562,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7269,
									"end": 7273,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7307,
									"end": 7309,
									"name": "PUSH",
									"source": 10,
									"value": "60"
								},
								{
									"begin": 7296,
									"end": 7305,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7292,
									"end": 7310,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7284,
									"end": 7310,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7284,
									"end": 7310,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7320,
									"end": 7391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 7388,
									"end": 7389,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7377,
									"end": 7386,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7373,
									"end": 7390,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7364,
									"end": 7370,
									"name": "DUP7",
									"source": 10
								},
								{
									"begin": 7320,
									"end": 7391,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "71"
								},
								{
									"begin": 7320,
									"end": 7391,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7320,
									"end": 7391,
									"name": "tag",
									"source": 10,
									"value": "165"
								},
								{
									"begin": 7320,
									"end": 7391,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7401,
									"end": 7473,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 7469,
									"end": 7471,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7458,
									"end": 7467,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7454,
									"end": 7472,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7445,
									"end": 7451,
									"name": "DUP6",
									"source": 10
								},
								{
									"begin": 7401,
									"end": 7473,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 7401,
									"end": 7473,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7401,
									"end": 7473,
									"name": "tag",
									"source": 10,
									"value": "166"
								},
								{
									"begin": 7401,
									"end": 7473,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7483,
									"end": 7555,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 7551,
									"end": 7553,
									"name": "PUSH",
									"source": 10,
									"value": "40"
								},
								{
									"begin": 7540,
									"end": 7549,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7536,
									"end": 7554,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7527,
									"end": 7533,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7483,
									"end": 7555,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 7483,
									"end": 7555,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7483,
									"end": 7555,
									"name": "tag",
									"source": 10,
									"value": "167"
								},
								{
									"begin": 7483,
									"end": 7555,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7120,
									"end": 7562,
									"name": "SWAP5",
									"source": 10
								},
								{
									"begin": 7120,
									"end": 7562,
									"name": "SWAP4",
									"source": 10
								},
								{
									"begin": 7120,
									"end": 7562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7120,
									"end": 7562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7120,
									"end": 7562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7120,
									"end": 7562,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7120,
									"end": 7562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7568,
									"end": 7790,
									"name": "tag",
									"source": 10,
									"value": "48"
								},
								{
									"begin": 7568,
									"end": 7790,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7661,
									"end": 7665,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7699,
									"end": 7701,
									"name": "PUSH",
									"source": 10,
									"value": "20"
								},
								{
									"begin": 7688,
									"end": 7697,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 7684,
									"end": 7702,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7676,
									"end": 7702,
									"name": "SWAP1",
									"source": 10
								},
								{
									"begin": 7676,
									"end": 7702,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7712,
									"end": 7783,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 7780,
									"end": 7781,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 7769,
									"end": 7778,
									"name": "DUP4",
									"source": 10
								},
								{
									"begin": 7765,
									"end": 7782,
									"name": "ADD",
									"source": 10
								},
								{
									"begin": 7756,
									"end": 7762,
									"name": "DUP5",
									"source": 10
								},
								{
									"begin": 7712,
									"end": 7783,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "74"
								},
								{
									"begin": 7712,
									"end": 7783,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 7712,
									"end": 7783,
									"name": "tag",
									"source": 10,
									"value": "169"
								},
								{
									"begin": 7712,
									"end": 7783,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 7568,
									"end": 7790,
									"name": "SWAP3",
									"source": 10
								},
								{
									"begin": 7568,
									"end": 7790,
									"name": "SWAP2",
									"source": 10
								},
								{
									"begin": 7568,
									"end": 7790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7568,
									"end": 7790,
									"name": "POP",
									"source": 10
								},
								{
									"begin": 7568,
									"end": 7790,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 10
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "tag",
									"source": 9,
									"value": "30"
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 362,
									"end": 6948,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220938069a2928d47eee461df4dc4df4f5377f8f98d66ffe2e94382aeee082891ad64736f6c63430008180033",
									".code": [
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "CALLVALUE",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "CALLDATALOAD",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "SHR",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "B88A802F"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "DD62ED3E"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "34"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "E3D670D7"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "E43252D7"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "F2FDE38B"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "37"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "FC1B3113"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "41"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "B88A802F"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "C6D69A30"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "D595C331"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "D798CBD2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "8FA81732"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "8FA81732"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "902D55A5"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "95D89B41"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "27"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "AABD801D"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "42"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "8456CB59"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "8A8C523C"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "8AB1D681"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "8DA5CB5B"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "24"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "39"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "5FD8C710"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "5FD8C710"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "70A08231"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "17"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "715018A6"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "18"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "771A3A1D"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "819EDFBC"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "44"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "42966C68"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "4ADA218B"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "57376198"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "5C975ABB"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "43"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "18160DDD"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "23B872DD"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "2576F999"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "313CE567"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "10"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "3F4BA83A"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "45"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "6FDDE03"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "95EA7B3"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "153B0D1E"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "17386E2C"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "tag",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 362,
											"end": 6948,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "54"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "tag",
											"source": 9,
											"value": "5"
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "58"
										},
										{
											"begin": 1838,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "tag",
											"source": 9,
											"value": "57"
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1838,
											"end": 1982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "tag",
											"source": 9,
											"value": "56"
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "tag",
											"source": 9,
											"value": "6"
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 5038,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "tag",
											"source": 9,
											"value": "61"
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5038,
											"end": 5308,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "tag",
											"source": 9,
											"value": "60"
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 1002,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "73"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1002,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "72"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1002,
											"end": 1053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "76"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "tag",
											"source": 9,
											"value": "11"
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6644,
											"end": 6713,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "tag",
											"source": 9,
											"value": "81"
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "tag",
											"source": 9,
											"value": "12"
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4299,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "tag",
											"source": 9,
											"value": "84"
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4299,
											"end": 4427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "tag",
											"source": 9,
											"value": "83"
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "tag",
											"source": 9,
											"value": "13"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1150,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "tag",
											"source": 9,
											"value": "87"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1150,
											"end": 1184,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "tag",
											"source": 9,
											"value": "89"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "tag",
											"source": 9,
											"value": "14"
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 6401,
											"end": 6529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "tag",
											"source": 9,
											"value": "91"
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6401,
											"end": 6529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "tag",
											"source": 9,
											"value": "90"
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "tag",
											"source": 9,
											"value": "15"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1190,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "tag",
											"source": 9,
											"value": "93"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 1190,
											"end": 1216,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "tag",
											"source": 9,
											"value": "95"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "tag",
											"source": 9,
											"value": "16"
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6229,
											"end": 6353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "tag",
											"source": 9,
											"value": "96"
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "99"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 583,
											"name": "tag",
											"source": 9,
											"value": "19"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 557,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "tag",
											"source": 9,
											"value": "104"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 557,
											"end": 583,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "tag",
											"source": 9,
											"value": "106"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 788,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "107"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 788,
											"end": 841,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "109"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "tag",
											"source": 9,
											"value": "21"
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 6572,
											"end": 6638,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "tag",
											"source": 9,
											"value": "110"
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "tag",
											"source": 9,
											"value": "22"
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3000,
											"end": 3124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "tag",
											"source": 9,
											"value": "112"
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "tag",
											"source": 9,
											"value": "23"
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3332,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "tag",
											"source": 9,
											"value": "115"
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3332,
											"end": 3451,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "tag",
											"source": 9,
											"value": "114"
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 599,
											"end": 640,
											"name": "tag",
											"source": 9,
											"value": "25"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 599,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "tag",
											"source": 9,
											"value": "121"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 599,
											"end": 640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "tag",
											"source": 9,
											"value": "123"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "tag",
											"source": 9,
											"value": "26"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 485,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "tag",
											"source": 9,
											"value": "124"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 485,
											"end": 550,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "tag",
											"source": 9,
											"value": "126"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "tag",
											"source": 9,
											"value": "28"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 3724,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "tag",
											"source": 9,
											"value": "131"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3724,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "tag",
											"source": 9,
											"value": "130"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "55"
										},
										{
											"begin": 3724,
											"end": 4228,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "tag",
											"source": 9,
											"value": "133"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "tag",
											"source": 9,
											"value": "29"
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "52"
										},
										{
											"begin": 4678,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "tag",
											"source": 9,
											"value": "135"
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4678,
											"end": 4988,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "tag",
											"source": 9,
											"value": "134"
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "tag",
											"source": 9,
											"value": "30"
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 5374,
											"end": 5968,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "tag",
											"source": 9,
											"value": "137"
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "tag",
											"source": 9,
											"value": "31"
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 3484,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "tag",
											"source": 9,
											"value": "140"
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3484,
											"end": 3659,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "tag",
											"source": 9,
											"value": "139"
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "32"
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "85"
										},
										{
											"begin": 4490,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "143"
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4490,
											"end": 4628,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "142"
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "33"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1112,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "145"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 1112,
											"end": 1144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "147"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "tag",
											"source": 9,
											"value": "35"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 6029,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "tag",
											"source": 9,
											"value": "154"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6029,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "tag",
											"source": 9,
											"value": "153"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 6029,
											"end": 6137,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "tag",
											"source": 9,
											"value": "156"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "tag",
											"source": 9,
											"value": "36"
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "CALLDATASIZE",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "74"
										},
										{
											"begin": 3169,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "tag",
											"source": 9,
											"value": "158"
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3169,
											"end": 3282,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "tag",
											"source": 9,
											"value": "157"
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "STOP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "161"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "160"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "38"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 680,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "163"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 680,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "165"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"name": "RETURN",
											"source": 9
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1856,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1849,
											"end": 1861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "171"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1849,
											"end": 1861,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1779,
											"end": 1868,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4071,
											"end": 4075,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4087,
											"end": 4100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4103,
											"end": 4113,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4103,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4103,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4087,
											"end": 4115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4134,
											"end": 4139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4141,
											"end": 4148,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4150,
											"end": 4155,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4133,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 4125,
											"end": 4156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 4125,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4173,
											"end": 4177,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4166,
											"end": 4177,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3998,
											"end": 4184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "tag",
											"source": 9,
											"value": "59"
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "179"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1961,
											"end": 1975,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1948,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1957,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1958,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 1928,
											"end": 1975,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1838,
											"end": 1982,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "tag",
											"source": 9,
											"value": "62"
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "183"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5163,
											"end": 5169,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5153,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5154,
											"end": 5158,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5159,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5169,
											"modifierDepth": 1,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5137,
											"end": 5169,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "187"
										},
										{
											"begin": 5129,
											"end": 5191,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "186"
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "185"
										},
										{
											"begin": 5129,
											"end": 5191,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5227,
											"end": 5233,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5217,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5218,
											"end": 5222,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5223,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 5201,
											"end": 5233,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "188"
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5201,
											"end": 5233,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5272,
											"end": 5276,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40547F371CF37574D1A01EEEB1593F8DB1A3E44286BBA3B92CF2867707C9E473"
										},
										{
											"begin": 5278,
											"end": 5294,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5295,
											"end": 5299,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5278,
											"end": 5300,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5248,
											"end": 5301,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "190"
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5248,
											"end": 5301,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5038,
											"end": 5308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2901,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2927,
											"end": 2939,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2920,
											"end": 2939,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2849,
											"end": 2946,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4863,
											"end": 4867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4879,
											"end": 4894,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4897,
											"end": 4907,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 4897,
											"end": 4909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 4897,
											"end": 4909,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4879,
											"end": 4909,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4935,
											"end": 4939,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4941,
											"end": 4948,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4950,
											"end": 4955,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 4919,
											"end": 4956,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 4919,
											"end": 4956,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 4976,
											"end": 4980,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4982,
											"end": 4984,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4986,
											"end": 4991,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4975,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 4966,
											"end": 4992,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 4966,
											"end": 4992,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5002,
											"end": 5013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4776,
											"end": 5020,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "tag",
											"source": 9,
											"value": "75"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1002,
											"end": 1053,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2756,
											"end": 2761,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2780,
											"end": 2782,
											"name": "PUSH",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2707,
											"end": 2789,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "tag",
											"source": 9,
											"value": "82"
										},
										{
											"begin": 6644,
											"end": 6713,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "200"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6701,
											"end": 6706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6692,
											"end": 6698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6692,
											"end": 6698,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6692,
											"end": 6706,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6644,
											"end": 6713,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "tag",
											"source": 9,
											"value": "86"
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4354,
											"end": 4364,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4366,
											"end": 4372,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4353,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4348,
											"end": 4373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4348,
											"end": 4373,
											"name": "tag",
											"source": 9,
											"value": "203"
										},
										{
											"begin": 4348,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4401,
											"end": 4411,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "PUSH",
											"source": 9,
											"value": "FD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6"
										},
										{
											"begin": 4413,
											"end": 4419,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4388,
											"end": 4420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "tag",
											"source": 9,
											"value": "205"
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4388,
											"end": 4420,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4299,
											"end": 4427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "tag",
											"source": 9,
											"value": "88"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1150,
											"end": 1184,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "tag",
											"source": 9,
											"value": "92"
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6490,
											"end": 6495,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6483,
											"end": 6505,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6505,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A9059CBB"
										},
										{
											"begin": 6506,
											"end": 6513,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 6506,
											"end": 6511,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6506,
											"end": 6513,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6506,
											"end": 6513,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "209"
										},
										{
											"begin": 6506,
											"end": 6513,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6515,
											"end": 6521,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "E0"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "SHL",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "211"
										},
										{
											"begin": 6483,
											"end": 6522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "210"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6522,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "213"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1F"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "215"
										},
										{
											"begin": 6483,
											"end": 6522,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "214"
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6483,
											"end": 6522,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6401,
											"end": 6529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "tag",
											"source": 9,
											"value": "94"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1190,
											"end": 1216,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "tag",
											"source": 9,
											"value": "97"
										},
										{
											"begin": 6229,
											"end": 6353,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2261,
											"end": 2280,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2261,
											"end": 2282,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2261,
											"end": 2282,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6306,
											"end": 6313,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 6306,
											"end": 6311,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 6306,
											"end": 6313,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6306,
											"end": 6313,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "222"
										},
										{
											"begin": 6306,
											"end": 6313,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6323,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6298,
											"end": 6323,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8FC"
										},
										{
											"begin": 6324,
											"end": 6345,
											"modifierDepth": 2,
											"name": "SELFBALANCE",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "CALL",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "RETURNDATACOPY",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "RETURNDATASIZE",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "224"
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6298,
											"end": 6346,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2303,
											"end": 2321,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2303,
											"end": 2323,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "225"
										},
										{
											"begin": 2303,
											"end": 2323,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6229,
											"end": 6353,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3069,
											"end": 3076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3104,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3105,
											"end": 3112,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3095,
											"end": 3113,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3088,
											"end": 3113,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3004,
											"end": 3120,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 557,
											"end": 583,
											"name": "tag",
											"source": 9,
											"value": "105"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 557,
											"end": 583,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 557,
											"end": 583,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"name": "tag",
											"source": 9,
											"value": "108"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 836,
											"end": 841,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 788,
											"end": 841,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 788,
											"end": 841,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "tag",
											"source": 9,
											"value": "111"
										},
										{
											"begin": 6572,
											"end": 6638,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "234"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6627,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6618,
											"end": 6624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 6618,
											"end": 6624,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 6618,
											"end": 6631,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6572,
											"end": 6638,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "tag",
											"source": 9,
											"value": "113"
										},
										{
											"begin": 3000,
											"end": 3124,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3071,
											"end": 3075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3054,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 3054,
											"end": 3068,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3054,
											"end": 3075,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3105,
											"end": 3117,
											"modifierDepth": 1,
											"name": "NUMBER",
											"source": 9
										},
										{
											"begin": 3085,
											"end": 3102,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 3085,
											"end": 3117,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3085,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3085,
											"end": 3117,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3085,
											"end": 3117,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3000,
											"end": 3124,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "tag",
											"source": 9,
											"value": "116"
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "240"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3439,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3426,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3427,
											"end": 3435,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3436,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3408,
											"end": 3444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3332,
											"end": 3451,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 599,
											"end": 640,
											"name": "tag",
											"source": 9,
											"value": "122"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 638,
											"end": 640,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 599,
											"end": 640,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 599,
											"end": 640,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"name": "tag",
											"source": 9,
											"value": "125"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 524,
											"end": 550,
											"name": "PUSH",
											"source": 9,
											"value": "54F529CA52576BC6892000000"
										},
										{
											"begin": 485,
											"end": 550,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 485,
											"end": 550,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2028,
											"end": 2041,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2060,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "244"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 2053,
											"end": 2067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "247"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2053,
											"end": 2067,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1981,
											"end": 2074,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "tag",
											"source": 9,
											"value": "132"
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3894,
											"end": 3898,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3808,
											"end": 3818,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2123,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2132,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2103,
											"end": 2133,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2133,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2094,
											"end": 2160,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "tag",
											"source": 9,
											"value": "251"
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "tag",
											"source": 9,
											"value": "250"
										},
										{
											"begin": 2094,
											"end": 2160,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3833,
											"end": 3843,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2312,
											"end": 2326,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 2312,
											"end": 2356,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2356,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2348,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2349,
											"end": 2355,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2330,
											"end": 2356,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2312,
											"end": 2356,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "254"
										},
										{
											"begin": 2312,
											"end": 2356,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "257"
										},
										{
											"begin": 2304,
											"end": 2383,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "256"
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "255"
										},
										{
											"begin": 2304,
											"end": 2383,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2502,
											"end": 2508,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2508,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2493,
											"end": 2531,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "260"
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "259"
										},
										{
											"begin": 2493,
											"end": 2531,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3874,
											"end": 3883,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 2882,
											"end": 2886,
											"modifierDepth": 3,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2887,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2870,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2887,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2861,
											"end": 2887,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2861,
											"end": 2887,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "265"
										},
										{
											"begin": 2853,
											"end": 2930,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "264"
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "263"
										},
										{
											"begin": 2853,
											"end": 2930,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 726,
											"end": 746,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 3918,
											"end": 3924,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3947,
											"modifierDepth": 4,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3918,
											"end": 3947,
											"modifierDepth": 4,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "269"
										},
										{
											"begin": 3910,
											"end": 3983,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "tag",
											"source": 9,
											"value": "268"
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "tag",
											"source": 9,
											"value": "267"
										},
										{
											"begin": 3910,
											"end": 3983,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3994,
											"end": 4005,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4029,
											"end": 4032,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "64"
										},
										{
											"begin": 4018,
											"end": 4025,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 4018,
											"end": 4025,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4015,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4025,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4009,
											"end": 4025,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4025,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4025,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "271"
										},
										{
											"begin": 4009,
											"end": 4025,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4009,
											"end": 4025,
											"modifierDepth": 4,
											"name": "tag",
											"source": 9,
											"value": "270"
										},
										{
											"begin": 4009,
											"end": 4025,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4032,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4008,
											"end": 4032,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4032,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4032,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "273"
										},
										{
											"begin": 4008,
											"end": 4032,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4008,
											"end": 4032,
											"modifierDepth": 4,
											"name": "tag",
											"source": 9,
											"value": "272"
										},
										{
											"begin": 4008,
											"end": 4032,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3994,
											"end": 4032,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3994,
											"end": 4032,
											"modifierDepth": 4,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4064,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4076,
											"end": 4079,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4073,
											"modifierDepth": 4,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4079,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4067,
											"end": 4079,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4079,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4079,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "189"
										},
										{
											"begin": 4067,
											"end": 4079,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4067,
											"end": 4079,
											"modifierDepth": 4,
											"name": "tag",
											"source": 9,
											"value": "274"
										},
										{
											"begin": 4067,
											"end": 4079,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4079,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4042,
											"end": 4079,
											"modifierDepth": 4,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4163,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4138,
											"end": 4148,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4157,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4150,
											"end": 4155,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4150,
											"end": 4157,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4150,
											"end": 4157,
											"modifierDepth": 4,
											"name": "tag",
											"source": 9,
											"value": "276"
										},
										{
											"begin": 4150,
											"end": 4157,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4159,
											"end": 4162,
											"modifierDepth": 4,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4137,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 4128,
											"end": 4163,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4128,
											"end": 4163,
											"modifierDepth": 4,
											"name": "tag",
											"source": 9,
											"value": "275"
										},
										{
											"begin": 4128,
											"end": 4163,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4180,
											"end": 4221,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4195,
											"end": 4204,
											"modifierDepth": 4,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 4206,
											"end": 4220,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4180,
											"end": 4194,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "278"
										},
										{
											"begin": 4180,
											"end": 4221,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4180,
											"end": 4221,
											"modifierDepth": 4,
											"name": "tag",
											"source": 9,
											"value": "277"
										},
										{
											"begin": 4180,
											"end": 4221,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4221,
											"modifierDepth": 4,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4221,
											"modifierDepth": 4,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4221,
											"modifierDepth": 4,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4173,
											"end": 4221,
											"modifierDepth": 4,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2542,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2171,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3724,
											"end": 4228,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "tag",
											"source": 9,
											"value": "136"
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "280"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 836,
											"end": 841,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "2710"
										},
										{
											"begin": 4802,
											"end": 4808,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4793,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4794,
											"end": 4798,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4799,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4777,
											"end": 4808,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4808,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4808,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4777,
											"end": 4808,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4808,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "282"
										},
										{
											"begin": 4777,
											"end": 4808,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4833,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 4777,
											"end": 4833,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "286"
										},
										{
											"begin": 4769,
											"end": 4871,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "285"
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "284"
										},
										{
											"begin": 4769,
											"end": 4871,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4907,
											"end": 4913,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4897,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4898,
											"end": 4902,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4903,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 4881,
											"end": 4913,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 4881,
											"end": 4913,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4952,
											"end": 4956,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40547F371CF37574D1A01EEEB1593F8DB1A3E44286BBA3B92CF2867707C9E473"
										},
										{
											"begin": 4958,
											"end": 4974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4975,
											"end": 4979,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 4958,
											"end": 4980,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4928,
											"end": 4981,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4928,
											"end": 4981,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4678,
											"end": 4988,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "tag",
											"source": 9,
											"value": "138"
										},
										{
											"begin": 5374,
											"end": 5968,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "PUSH",
											"source": 9,
											"value": "D"
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2502,
											"end": 2508,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2501,
											"end": 2508,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "261"
										},
										{
											"begin": 2493,
											"end": 2531,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "tag",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 2493,
											"end": 2531,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5435,
											"end": 5445,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2123,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2124,
											"end": 2132,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 2103,
											"end": 2133,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2102,
											"end": 2133,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "252"
										},
										{
											"begin": 2094,
											"end": 2160,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "294"
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "293"
										},
										{
											"begin": 2094,
											"end": 2160,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5462,
											"end": 5472,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 2703,
											"end": 2709,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "15180"
										},
										{
											"begin": 2683,
											"end": 2694,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2695,
											"end": 2699,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2700,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2683,
											"end": 2709,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2709,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2709,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "283"
										},
										{
											"begin": 2683,
											"end": 2709,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2683,
											"end": 2709,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "296"
										},
										{
											"begin": 2683,
											"end": 2709,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2679,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2709,
											"modifierDepth": 2,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 2664,
											"end": 2709,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "299"
										},
										{
											"begin": 2656,
											"end": 2735,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "298"
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "tag",
											"source": 9,
											"value": "297"
										},
										{
											"begin": 2656,
											"end": 2735,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5498,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5517,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5518,
											"end": 5528,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5501,
											"end": 5529,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5529,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5484,
											"end": 5529,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5556,
											"end": 5557,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5547,
											"end": 5553,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5547,
											"end": 5557,
											"modifierDepth": 3,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "303"
										},
										{
											"begin": 5539,
											"end": 5582,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "302"
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "301"
										},
										{
											"begin": 5539,
											"end": 5582,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5622,
											"end": 5628,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5618,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5610,
											"end": 5617,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5610,
											"end": 5615,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 5610,
											"end": 5617,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5610,
											"end": 5617,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "305"
										},
										{
											"begin": 5610,
											"end": 5617,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5609,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 5600,
											"end": 5618,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5618,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "304"
										},
										{
											"begin": 5600,
											"end": 5618,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5628,
											"modifierDepth": 3,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 5600,
											"end": 5628,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "308"
										},
										{
											"begin": 5592,
											"end": 5659,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "307"
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "306"
										},
										{
											"begin": 5592,
											"end": 5659,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5736,
											"end": 5737,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5721,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5722,
											"end": 5732,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5733,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5737,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5737,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5737,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5705,
											"end": 5737,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5815,
											"end": 5830,
											"modifierDepth": 3,
											"name": "TIMESTAMP",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5800,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "B"
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5801,
											"end": 5811,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5812,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5830,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5830,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5830,
											"modifierDepth": 3,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 5789,
											"end": 5830,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5913,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5885,
											"end": 5892,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5885,
											"end": 5890,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 5885,
											"end": 5892,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5885,
											"end": 5892,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "310"
										},
										{
											"begin": 5885,
											"end": 5892,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5894,
											"end": 5904,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5906,
											"end": 5912,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5884,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "197"
										},
										{
											"begin": 5875,
											"end": 5913,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5875,
											"end": 5913,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "309"
										},
										{
											"begin": 5875,
											"end": 5913,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5942,
											"end": 5952,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "106F923F993C2149D49B4255FF723ACAFA1F2D94393F561D3EDA32AE348F7241"
										},
										{
											"begin": 5954,
											"end": 5960,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 5928,
											"end": 5961,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "tag",
											"source": 9,
											"value": "311"
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5928,
											"end": 5961,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 5474,
											"end": 5968,
											"modifierDepth": 3,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2170,
											"end": 2171,
											"modifierDepth": 2,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 2541,
											"end": 2542,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5374,
											"end": 5968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "tag",
											"source": 9,
											"value": "141"
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "313"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 640,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "A"
										},
										{
											"begin": 3561,
											"end": 3571,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3561,
											"end": 3587,
											"modifierDepth": 1,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 3561,
											"end": 3587,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "317"
										},
										{
											"begin": 3553,
											"end": 3622,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "316"
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "315"
										},
										{
											"begin": 3553,
											"end": 3622,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3642,
											"end": 3652,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3639,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "7"
										},
										{
											"begin": 3632,
											"end": 3652,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3652,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3632,
											"end": 3652,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3484,
											"end": 3659,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "tag",
											"source": 9,
											"value": "144"
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "319"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4555,
											"end": 4577,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4561,
											"end": 4568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 4561,
											"end": 4566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4561,
											"end": 4568,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4561,
											"end": 4568,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "322"
										},
										{
											"begin": 4561,
											"end": 4568,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4570,
											"end": 4576,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4560,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "204"
										},
										{
											"begin": 4555,
											"end": 4577,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4555,
											"end": 4577,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "321"
										},
										{
											"begin": 4555,
											"end": 4577,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4605,
											"end": 4612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4605,
											"end": 4610,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "118"
										},
										{
											"begin": 4605,
											"end": 4612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4605,
											"end": 4612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "323"
										},
										{
											"begin": 4605,
											"end": 4612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FD38818F5291BF0BB3A2A48AADC06BA8757865D1DABD804585338AAB3009DCB6"
										},
										{
											"begin": 4614,
											"end": 4620,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "66"
										},
										{
											"begin": 4592,
											"end": 4621,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 9,
											"value": "324"
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4592,
											"end": 4621,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4490,
											"end": 4628,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "tag",
											"source": 9,
											"value": "146"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "PUSH",
											"source": 9,
											"value": "C"
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 1112,
											"end": 1144,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3631,
											"end": 3638,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3668,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3669,
											"end": 3674,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3675,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3676,
											"end": 3683,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3657,
											"end": 3684,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3650,
											"end": 3684,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3551,
											"end": 3691,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "tag",
											"source": 9,
											"value": "155"
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6086,
											"end": 6093,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6112,
											"end": 6130,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 6122,
											"end": 6129,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 6112,
											"end": 6130,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 6112,
											"end": 6130,
											"name": "tag",
											"source": 9,
											"value": "327"
										},
										{
											"begin": 6112,
											"end": 6130,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 6105,
											"end": 6130,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6105,
											"end": 6130,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6029,
											"end": 6137,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "tag",
											"source": 9,
											"value": "159"
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "329"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3271,
											"end": 3275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 3240,
											"end": 3258,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "9"
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3259,
											"end": 3267,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "20"
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "100"
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 9,
											"value": "FF"
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 9
										},
										{
											"begin": 3240,
											"end": 3275,
											"modifierDepth": 1,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3169,
											"end": 3282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "332"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "334"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 680,
											"end": 746,
											"name": "tag",
											"source": 9,
											"value": "164"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 726,
											"end": 746,
											"name": "PUSH",
											"source": 9,
											"value": "D3C21BCECCEDA1000000"
										},
										{
											"begin": 680,
											"end": 746,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 680,
											"end": 746,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 8,
											"value": "175"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 8819,
											"end": 8824,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8826,
											"end": 8833,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8835,
											"end": 8840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 8810,
											"end": 8818,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 8810,
											"end": 8847,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "tag",
											"source": 4,
											"value": "339"
										},
										{
											"begin": 8810,
											"end": 8847,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8726,
											"end": 8854,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "180"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "342"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "118"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "343"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "175"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "345"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "346"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "344"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "tag",
											"source": 4,
											"value": "195"
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10538,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 10551,
											"end": 10556,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10558,
											"end": 10565,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10550,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 10541,
											"end": 10566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "tag",
											"source": 4,
											"value": "348"
										},
										{
											"begin": 10541,
											"end": 10566,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10514,
											"end": 10566,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10600,
											"end": 10617,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10580,
											"end": 10596,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10580,
											"end": 10617,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10656,
											"end": 10661,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10653,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10637,
											"end": 10661,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10715,
											"end": 10722,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10724,
											"end": 10740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10742,
											"end": 10747,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "FB8F41B200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 10688,
											"end": 10748,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "tag",
											"source": 4,
											"value": "351"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10688,
											"end": 10748,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "tag",
											"source": 4,
											"value": "350"
										},
										{
											"begin": 10633,
											"end": 10763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 10813,
											"end": 10818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10820,
											"end": 10827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10848,
											"end": 10853,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10845,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10829,
											"end": 10853,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10855,
											"end": 10860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10804,
											"end": 10812,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 10804,
											"end": 10861,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "tag",
											"source": 4,
											"value": "353"
										},
										{
											"begin": 10804,
											"end": 10861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "tag",
											"source": 4,
											"value": "349"
										},
										{
											"begin": 10576,
											"end": 10886,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10504,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10415,
											"end": 10892,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5492,
											"end": 5493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5480,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5476,
											"end": 5494,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5544,
											"end": 5545,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5517,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "tag",
											"source": 4,
											"value": "356"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5517,
											"end": 5547,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "tag",
											"source": 4,
											"value": "355"
										},
										{
											"begin": 5472,
											"end": 5558,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5585,
											"end": 5586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5573,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 5571,
											"end": 5587,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 5639,
											"end": 5640,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5610,
											"end": 5642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "tag",
											"source": 4,
											"value": "358"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5610,
											"end": 5642,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "tag",
											"source": 4,
											"value": "357"
										},
										{
											"begin": 5567,
											"end": 5653,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 5670,
											"end": 5674,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5676,
											"end": 5678,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5680,
											"end": 5685,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 5662,
											"end": 5686,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "tag",
											"source": 4,
											"value": "359"
										},
										{
											"begin": 5662,
											"end": 5686,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5393,
											"end": 5693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8073,
											"end": 8074,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8061,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 8054,
											"end": 8075,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8125,
											"end": 8126,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 8098,
											"end": 8128,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "tag",
											"source": 4,
											"value": "363"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 8098,
											"end": 8128,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "tag",
											"source": 4,
											"value": "362"
										},
										{
											"begin": 8050,
											"end": 8139,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 8156,
											"end": 8163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8173,
											"end": 8174,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8177,
											"end": 8182,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8155,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 8148,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "tag",
											"source": 4,
											"value": "364"
										},
										{
											"begin": 8148,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7984,
											"end": 8190,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "tag",
											"source": 3,
											"value": "220"
										},
										{
											"begin": 2336,
											"end": 2623,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2468,
											"end": 2475,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 2468,
											"end": 2487,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "368"
										},
										{
											"begin": 2460,
											"end": 2523,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "367"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "tag",
											"source": 3,
											"value": "366"
										},
										{
											"begin": 2460,
											"end": 2523,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1759,
											"end": 1760,
											"name": "PUSH",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 2598,
											"end": 2605,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2598,
											"end": 2616,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2336,
											"end": 2623,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "tag",
											"source": 3,
											"value": "226"
										},
										{
											"begin": 2629,
											"end": 2838,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1716,
											"end": 1717,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2809,
											"end": 2816,
											"name": "PUSH",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2809,
											"end": 2831,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 2629,
											"end": 2838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "232"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3384,
											"end": 3388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3400,
											"end": 3413,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 3416,
											"end": 3426,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "175"
										},
										{
											"begin": 3416,
											"end": 3428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "tag",
											"source": 4,
											"value": "372"
										},
										{
											"begin": 3416,
											"end": 3428,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3400,
											"end": 3428,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 3448,
											"end": 3453,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3455,
											"end": 3457,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3459,
											"end": 3464,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3447,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3438,
											"end": 3465,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "tag",
											"source": 4,
											"value": "373"
										},
										{
											"begin": 3438,
											"end": 3465,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3482,
											"end": 3486,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3475,
											"end": 3486,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3315,
											"end": 3493,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "tag",
											"source": 4,
											"value": "340"
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9830,
											"end": 9831,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9818,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9813,
											"end": 9832,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9884,
											"end": 9885,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 9855,
											"end": 9887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "tag",
											"source": 4,
											"value": "376"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9855,
											"end": 9887,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "tag",
											"source": 4,
											"value": "375"
										},
										{
											"begin": 9809,
											"end": 9898,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9930,
											"end": 9931,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9918,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 9911,
											"end": 9932,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9983,
											"end": 9984,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 9955,
											"end": 9986,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "tag",
											"source": 4,
											"value": "378"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 9955,
											"end": 9986,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "tag",
											"source": 4,
											"value": "377"
										},
										{
											"begin": 9907,
											"end": 9997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10017,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10023,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10024,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10025,
											"end": 10032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 10006,
											"end": 10033,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 10006,
											"end": 10041,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 10055,
											"end": 10064,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 10101,
											"end": 10108,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10094,
											"end": 10099,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10110,
											"end": 10115,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 10085,
											"end": 10116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "tag",
											"source": 4,
											"value": "380"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 10085,
											"end": 10116,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "tag",
											"source": 4,
											"value": "379"
										},
										{
											"begin": 10051,
											"end": 10127,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9701,
											"end": 10133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "tag",
											"source": 4,
											"value": "360"
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6101,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6097,
											"end": 6115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6249,
											"end": 6254,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6233,
											"end": 6245,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "283"
										},
										{
											"begin": 6233,
											"end": 6254,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "tag",
											"source": 4,
											"value": "383"
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6233,
											"end": 6254,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "382"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6304,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6316,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6317,
											"end": 6321,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6307,
											"end": 6322,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6285,
											"end": 6322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6354,
											"end": 6359,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6340,
											"end": 6359,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6411,
											"end": 6415,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6417,
											"end": 6428,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6430,
											"end": 6435,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "352"
										},
										{
											"begin": 6386,
											"end": 6436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "tag",
											"source": 4,
											"value": "386"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6386,
											"end": 6436,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "tag",
											"source": 4,
											"value": "385"
										},
										{
											"begin": 6336,
											"end": 6451,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6603,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6600,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6589,
											"end": 6608,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6580,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6581,
											"end": 6585,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6571,
											"end": 6586,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6571,
											"end": 6608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6271,
											"end": 6633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "tag",
											"source": 4,
											"value": "384"
										},
										{
											"begin": 6093,
											"end": 6633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6661,
											"end": 6662,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6649,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6647,
											"end": 6663,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6826,
											"end": 6831,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 6810,
											"end": 6822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 6810,
											"end": 6831,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "387"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7038,
											"end": 7043,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7030,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7031,
											"end": 7033,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7034,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 7021,
											"end": 7043,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "tag",
											"source": 4,
											"value": "388"
										},
										{
											"begin": 6643,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7098,
											"end": 7100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7092,
											"end": 7096,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7102,
											"end": 7107,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 7083,
											"end": 7108,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "tag",
											"source": 4,
											"value": "389"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7083,
											"end": 7108,
											"name": "LOG3",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6008,
											"end": 7115,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "tag",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 287,
											"end": 533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 368,
											"end": 369,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 392,
											"end": 398,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 389,
											"end": 390,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 386,
											"end": 399,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 477,
											"end": 478,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 472,
											"end": 475,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 468,
											"end": 479,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 462,
											"end": 480,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 458,
											"end": 459,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 453,
											"end": 456,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 449,
											"end": 460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 442,
											"end": 481,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 414,
											"end": 416,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 412,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 407,
											"end": 417,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 402,
											"end": 417,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "445"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 378,
											"end": 491,
											"name": "tag",
											"source": 10,
											"value": "447"
										},
										{
											"begin": 378,
											"end": 491,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 525,
											"end": 526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 516,
											"end": 522,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 511,
											"end": 514,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 507,
											"end": 523,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 500,
											"end": 527,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 349,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 287,
											"end": 533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "tag",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 539,
											"end": 641,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 580,
											"end": 586,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 631,
											"end": 633,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 627,
											"end": 634,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 622,
											"end": 624,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 615,
											"end": 620,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 611,
											"end": 625,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 607,
											"end": 635,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 597,
											"end": 635,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 539,
											"end": 641,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "tag",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 735,
											"end": 738,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 796,
											"end": 801,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "390"
										},
										{
											"begin": 763,
											"end": 802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 763,
											"end": 802,
											"name": "tag",
											"source": 10,
											"value": "450"
										},
										{
											"begin": 763,
											"end": 802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 882,
											"end": 888,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 877,
											"end": 880,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 818,
											"end": 889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 818,
											"end": 889,
											"name": "tag",
											"source": 10,
											"value": "451"
										},
										{
											"begin": 818,
											"end": 889,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 811,
											"end": 889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 956,
											"end": 962,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 951,
											"end": 954,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 944,
											"end": 948,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 942,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 933,
											"end": 949,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "392"
										},
										{
											"begin": 898,
											"end": 963,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 898,
											"end": 963,
											"name": "tag",
											"source": 10,
											"value": "452"
										},
										{
											"begin": 898,
											"end": 963,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 1010,
											"end": 1016,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "393"
										},
										{
											"begin": 988,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "tag",
											"source": 10,
											"value": "453"
										},
										{
											"begin": 988,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 983,
											"end": 986,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 979,
											"end": 1018,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 972,
											"end": 1018,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 739,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 647,
											"end": 1024,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "tag",
											"source": 10,
											"value": "49"
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1143,
											"end": 1147,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1181,
											"end": 1183,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 1170,
											"end": 1179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1166,
											"end": 1184,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1158,
											"end": 1184,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1230,
											"end": 1239,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1220,
											"end": 1240,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 1216,
											"end": 1217,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1205,
											"end": 1214,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 1201,
											"end": 1218,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 1194,
											"end": 1241,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 1331,
											"end": 1335,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1322,
											"end": 1328,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "394"
										},
										{
											"begin": 1258,
											"end": 1336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "tag",
											"source": 10,
											"value": "455"
										},
										{
											"begin": 1258,
											"end": 1336,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1250,
											"end": 1336,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1030,
											"end": 1343,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "tag",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 1430,
											"end": 1547,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1539,
											"end": 1540,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1536,
											"end": 1537,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 1529,
											"end": 1541,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "tag",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1795,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1746,
											"end": 1751,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1742,
											"end": 1796,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1731,
											"end": 1796,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1676,
											"end": 1802,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "tag",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1845,
											"end": 1852,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "398"
										},
										{
											"begin": 1874,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "tag",
											"source": 10,
											"value": "461"
										},
										{
											"begin": 1874,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1863,
											"end": 1898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1808,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "tag",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 2001,
											"end": 2006,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 1983,
											"end": 2007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "tag",
											"source": 10,
											"value": "463"
										},
										{
											"begin": 1983,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1976,
											"end": 1981,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 1973,
											"end": 2008,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2022,
											"end": 2023,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2012,
											"end": 2024,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "tag",
											"source": 10,
											"value": "464"
										},
										{
											"begin": 1963,
											"end": 2026,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 1910,
											"end": 2032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "tag",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2084,
											"end": 2089,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2122,
											"end": 2128,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2109,
											"end": 2129,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2100,
											"end": 2129,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 2165,
											"end": 2170,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "400"
										},
										{
											"begin": 2138,
											"end": 2171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "tag",
											"source": 10,
											"value": "466"
										},
										{
											"begin": 2138,
											"end": 2171,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2038,
											"end": 2177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "tag",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2220,
											"end": 2227,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2249,
											"end": 2254,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2238,
											"end": 2254,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2183,
											"end": 2260,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "tag",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 2357,
											"end": 2362,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 2339,
											"end": 2363,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "tag",
											"source": 10,
											"value": "469"
										},
										{
											"begin": 2339,
											"end": 2363,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2332,
											"end": 2337,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2329,
											"end": 2364,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2378,
											"end": 2379,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2375,
											"end": 2376,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2368,
											"end": 2380,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "tag",
											"source": 10,
											"value": "470"
										},
										{
											"begin": 2319,
											"end": 2382,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2266,
											"end": 2388,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "tag",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2440,
											"end": 2445,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2478,
											"end": 2484,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2465,
											"end": 2485,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2456,
											"end": 2485,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 2521,
											"end": 2526,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "403"
										},
										{
											"begin": 2494,
											"end": 2527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "tag",
											"source": 10,
											"value": "472"
										},
										{
											"begin": 2494,
											"end": 2527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2394,
											"end": 2533,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "tag",
											"source": 10,
											"value": "52"
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2607,
											"end": 2613,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2615,
											"end": 2621,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 2652,
											"end": 2661,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 2643,
											"end": 2650,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2639,
											"end": 2662,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 2635,
											"end": 2667,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 2670,
											"end": 2749,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "tag",
											"source": 10,
											"value": "475"
										},
										{
											"begin": 2670,
											"end": 2749,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "tag",
											"source": 10,
											"value": "474"
										},
										{
											"begin": 2632,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2790,
											"end": 2791,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 2860,
											"end": 2867,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2851,
											"end": 2857,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2840,
											"end": 2849,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2836,
											"end": 2858,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 2815,
											"end": 2868,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "tag",
											"source": 10,
											"value": "476"
										},
										{
											"begin": 2815,
											"end": 2868,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2805,
											"end": 2868,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2761,
											"end": 2878,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2917,
											"end": 2919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 2988,
											"end": 2995,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 2979,
											"end": 2985,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 2968,
											"end": 2977,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 2964,
											"end": 2986,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 2943,
											"end": 2996,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "tag",
											"source": 10,
											"value": "477"
										},
										{
											"begin": 2943,
											"end": 2996,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 2933,
											"end": 2996,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2888,
											"end": 3006,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 2539,
											"end": 3013,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "tag",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3053,
											"end": 3060,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3096,
											"end": 3101,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3089,
											"end": 3102,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3082,
											"end": 3103,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3071,
											"end": 3103,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3019,
											"end": 3109,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "tag",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 3211,
											"end": 3216,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 3196,
											"end": 3217,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "tag",
											"source": 10,
											"value": "480"
										},
										{
											"begin": 3196,
											"end": 3217,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3191,
											"end": 3194,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3184,
											"end": 3218,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3115,
											"end": 3224,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "tag",
											"source": 10,
											"value": "55"
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 3430,
											"end": 3431,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3419,
											"end": 3428,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3415,
											"end": 3432,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3406,
											"end": 3412,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "406"
										},
										{
											"begin": 3368,
											"end": 3433,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "tag",
											"source": 10,
											"value": "482"
										},
										{
											"begin": 3368,
											"end": 3433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3230,
											"end": 3440,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3562,
											"name": "tag",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 3446,
											"end": 3562,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 3531,
											"end": 3536,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3537,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "405"
										},
										{
											"begin": 3516,
											"end": 3537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3516,
											"end": 3537,
											"name": "tag",
											"source": 10,
											"value": "484"
										},
										{
											"begin": 3516,
											"end": 3537,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3509,
											"end": 3514,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3506,
											"end": 3538,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3556,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 3496,
											"end": 3556,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3552,
											"end": 3553,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3549,
											"end": 3550,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3542,
											"end": 3554,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 3496,
											"end": 3556,
											"name": "tag",
											"source": 10,
											"value": "485"
										},
										{
											"begin": 3496,
											"end": 3556,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3562,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3446,
											"end": 3562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3701,
											"name": "tag",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 3568,
											"end": 3701,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3611,
											"end": 3616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3649,
											"end": 3655,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3636,
											"end": 3656,
											"name": "CALLDATALOAD",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3627,
											"end": 3656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 3689,
											"end": 3694,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 3665,
											"end": 3695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "tag",
											"source": 10,
											"value": "487"
										},
										{
											"begin": 3665,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3701,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3701,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3701,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3568,
											"end": 3701,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 4175,
											"name": "tag",
											"source": 10,
											"value": "58"
										},
										{
											"begin": 3707,
											"end": 4175,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3772,
											"end": 3778,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3780,
											"end": 3786,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 3829,
											"end": 3831,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3826,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 3808,
											"end": 3815,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 3804,
											"end": 3827,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 3800,
											"end": 3832,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3916,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 3797,
											"end": 3916,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 3835,
											"end": 3914,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 3835,
											"end": 3914,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3835,
											"end": 3914,
											"name": "tag",
											"source": 10,
											"value": "490"
										},
										{
											"begin": 3835,
											"end": 3914,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3797,
											"end": 3916,
											"name": "tag",
											"source": 10,
											"value": "489"
										},
										{
											"begin": 3797,
											"end": 3916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3955,
											"end": 3956,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 3980,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 4025,
											"end": 4032,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4016,
											"end": 4022,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4005,
											"end": 4014,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4001,
											"end": 4023,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4033,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 3980,
											"end": 4033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 3980,
											"end": 4033,
											"name": "tag",
											"source": 10,
											"value": "491"
										},
										{
											"begin": 3980,
											"end": 4033,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 3970,
											"end": 4033,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3970,
											"end": 4033,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3926,
											"end": 4043,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4082,
											"end": 4084,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4108,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 4150,
											"end": 4157,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4141,
											"end": 4147,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4130,
											"end": 4139,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4126,
											"end": 4148,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4158,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "408"
										},
										{
											"begin": 4108,
											"end": 4158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4108,
											"end": 4158,
											"name": "tag",
											"source": 10,
											"value": "492"
										},
										{
											"begin": 4108,
											"end": 4158,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4158,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4098,
											"end": 4158,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4053,
											"end": 4168,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 4175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 4175,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 4175,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 4175,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 3707,
											"end": 4175,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4299,
											"name": "tag",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 4181,
											"end": 4299,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 4286,
											"end": 4291,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 4268,
											"end": 4292,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "tag",
											"source": 10,
											"value": "494"
										},
										{
											"begin": 4268,
											"end": 4292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4263,
											"end": 4266,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4256,
											"end": 4293,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4181,
											"end": 4299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4527,
											"name": "tag",
											"source": 10,
											"value": "66"
										},
										{
											"begin": 4305,
											"end": 4527,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4398,
											"end": 4402,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4436,
											"end": 4438,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4425,
											"end": 4434,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4421,
											"end": 4439,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4413,
											"end": 4439,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4449,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 4517,
											"end": 4518,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4506,
											"end": 4515,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4502,
											"end": 4519,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4493,
											"end": 4499,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4449,
											"end": 4520,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 4449,
											"end": 4520,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4449,
											"end": 4520,
											"name": "tag",
											"source": 10,
											"value": "496"
										},
										{
											"begin": 4449,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4527,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4527,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4527,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4305,
											"end": 4527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 5152,
											"name": "tag",
											"source": 10,
											"value": "69"
										},
										{
											"begin": 4533,
											"end": 5152,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4610,
											"end": 4616,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4624,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4626,
											"end": 4632,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4663,
											"end": 4672,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4654,
											"end": 4661,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4650,
											"end": 4673,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4646,
											"end": 4678,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 4643,
											"end": 4762,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 4643,
											"end": 4762,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 4643,
											"end": 4762,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4681,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 4681,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 4681,
											"end": 4760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4681,
											"end": 4760,
											"name": "tag",
											"source": 10,
											"value": "499"
										},
										{
											"begin": 4681,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4643,
											"end": 4762,
											"name": "tag",
											"source": 10,
											"value": "498"
										},
										{
											"begin": 4643,
											"end": 4762,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4801,
											"end": 4802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4826,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 4871,
											"end": 4878,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4862,
											"end": 4868,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4851,
											"end": 4860,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4847,
											"end": 4869,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4826,
											"end": 4879,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4826,
											"end": 4879,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4826,
											"end": 4879,
											"name": "tag",
											"source": 10,
											"value": "500"
										},
										{
											"begin": 4826,
											"end": 4879,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4879,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4816,
											"end": 4879,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4772,
											"end": 4889,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4928,
											"end": 4930,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4954,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 4999,
											"end": 5006,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 4990,
											"end": 4996,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4979,
											"end": 4988,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 4975,
											"end": 4997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4954,
											"end": 5007,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 4954,
											"end": 5007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4954,
											"end": 5007,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 4954,
											"end": 5007,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5007,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4944,
											"end": 5007,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4899,
											"end": 5017,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5056,
											"end": 5058,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 5127,
											"end": 5134,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 5118,
											"end": 5124,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5107,
											"end": 5116,
											"name": "DUP8",
											"source": 10
										},
										{
											"begin": 5103,
											"end": 5125,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 5082,
											"end": 5135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "tag",
											"source": 10,
											"value": "502"
										},
										{
											"begin": 5082,
											"end": 5135,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5135,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5072,
											"end": 5135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5027,
											"end": 5145,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 5152,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 5152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 5152,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 5152,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 5152,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4533,
											"end": 5152,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5487,
											"name": "tag",
											"source": 10,
											"value": "74"
										},
										{
											"begin": 5158,
											"end": 5487,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5217,
											"end": 5223,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5266,
											"end": 5268,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5254,
											"end": 5263,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5245,
											"end": 5252,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5241,
											"end": 5264,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 5237,
											"end": 5269,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5353,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5353,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 5234,
											"end": 5353,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 5272,
											"end": 5351,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 5272,
											"end": 5351,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5272,
											"end": 5351,
											"name": "tag",
											"source": 10,
											"value": "505"
										},
										{
											"begin": 5272,
											"end": 5351,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5234,
											"end": 5353,
											"name": "tag",
											"source": 10,
											"value": "504"
										},
										{
											"begin": 5234,
											"end": 5353,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5392,
											"end": 5393,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5417,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 5462,
											"end": 5469,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5453,
											"end": 5459,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 5438,
											"end": 5460,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5417,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 5417,
											"end": 5470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5417,
											"end": 5470,
											"name": "tag",
											"source": 10,
											"value": "506"
										},
										{
											"begin": 5417,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5470,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5407,
											"end": 5470,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5363,
											"end": 5480,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5487,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5487,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5487,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5158,
											"end": 5487,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5493,
											"end": 5579,
											"name": "tag",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5493,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5528,
											"end": 5535,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5568,
											"end": 5572,
											"name": "PUSH",
											"source": 10,
											"value": "FF"
										},
										{
											"begin": 5561,
											"end": 5566,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5557,
											"end": 5573,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5573,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5546,
											"end": 5573,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5493,
											"end": 5579,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5493,
											"end": 5579,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5493,
											"end": 5579,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5493,
											"end": 5579,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5697,
											"name": "tag",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5585,
											"end": 5697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 5684,
											"end": 5689,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5690,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "410"
										},
										{
											"begin": 5668,
											"end": 5690,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5668,
											"end": 5690,
											"name": "tag",
											"source": 10,
											"value": "509"
										},
										{
											"begin": 5668,
											"end": 5690,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5663,
											"end": 5666,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5656,
											"end": 5691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5585,
											"end": 5697,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5917,
											"name": "tag",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 5703,
											"end": 5917,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5792,
											"end": 5796,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5830,
											"end": 5832,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 5819,
											"end": 5828,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5815,
											"end": 5833,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5833,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 5807,
											"end": 5833,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 5907,
											"end": 5908,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 5896,
											"end": 5905,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 5892,
											"end": 5909,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5910,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "411"
										},
										{
											"begin": 5843,
											"end": 5910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5843,
											"end": 5910,
											"name": "tag",
											"source": 10,
											"value": "511"
										},
										{
											"begin": 5843,
											"end": 5910,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5917,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5917,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5917,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5703,
											"end": 5917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "tag",
											"source": 10,
											"value": "85"
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6031,
											"end": 6033,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6019,
											"end": 6028,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6010,
											"end": 6017,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6006,
											"end": 6029,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6002,
											"end": 6034,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 6037,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6037,
											"end": 6116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6037,
											"end": 6116,
											"name": "tag",
											"source": 10,
											"value": "514"
										},
										{
											"begin": 6037,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "tag",
											"source": 10,
											"value": "513"
										},
										{
											"begin": 5999,
											"end": 6118,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6157,
											"end": 6158,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6182,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 6227,
											"end": 6234,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6218,
											"end": 6224,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6207,
											"end": 6216,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6203,
											"end": 6225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6235,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "404"
										},
										{
											"begin": 6182,
											"end": 6235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6182,
											"end": 6235,
											"name": "tag",
											"source": 10,
											"value": "515"
										},
										{
											"begin": 6182,
											"end": 6235,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6235,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6172,
											"end": 6235,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6128,
											"end": 6245,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 6252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 5923,
											"end": 6252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6376,
											"name": "tag",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 6258,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 6363,
											"end": 6368,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6369,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "399"
										},
										{
											"begin": 6345,
											"end": 6369,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6345,
											"end": 6369,
											"name": "tag",
											"source": 10,
											"value": "517"
										},
										{
											"begin": 6345,
											"end": 6369,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6340,
											"end": 6343,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6333,
											"end": 6370,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6376,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6258,
											"end": 6376,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "tag",
											"source": 10,
											"value": "120"
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6475,
											"end": 6479,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6513,
											"end": 6515,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6502,
											"end": 6511,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6498,
											"end": 6516,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6516,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6490,
											"end": 6516,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 6594,
											"end": 6595,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6583,
											"end": 6592,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6579,
											"end": 6596,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6570,
											"end": 6576,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6597,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 6526,
											"end": 6597,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6526,
											"end": 6597,
											"name": "tag",
											"source": 10,
											"value": "519"
										},
										{
											"begin": 6526,
											"end": 6597,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6604,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6382,
											"end": 6604,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "tag",
											"source": 10,
											"value": "150"
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6678,
											"end": 6684,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6686,
											"end": 6692,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6735,
											"end": 6737,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6723,
											"end": 6732,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 6714,
											"end": 6721,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6710,
											"end": 6733,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6706,
											"end": 6738,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 6741,
											"end": 6820,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 6741,
											"end": 6820,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6741,
											"end": 6820,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 6741,
											"end": 6820,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "tag",
											"source": 10,
											"value": "521"
										},
										{
											"begin": 6703,
											"end": 6822,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6861,
											"end": 6862,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 6886,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 6931,
											"end": 6938,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 6922,
											"end": 6928,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6911,
											"end": 6920,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 6907,
											"end": 6929,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6886,
											"end": 6939,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 6886,
											"end": 6939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6886,
											"end": 6939,
											"name": "tag",
											"source": 10,
											"value": "523"
										},
										{
											"begin": 6886,
											"end": 6939,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6939,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6876,
											"end": 6939,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6832,
											"end": 6949,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6988,
											"end": 6990,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7014,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 7059,
											"end": 7066,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 7050,
											"end": 7056,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7039,
											"end": 7048,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 7035,
											"end": 7057,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7014,
											"end": 7067,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "401"
										},
										{
											"begin": 7014,
											"end": 7067,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7014,
											"end": 7067,
											"name": "tag",
											"source": 10,
											"value": "524"
										},
										{
											"begin": 7014,
											"end": 7067,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7067,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7004,
											"end": 7067,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6959,
											"end": 7077,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 7084,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 6610,
											"end": 7084,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7090,
											"end": 7270,
											"name": "tag",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7090,
											"end": 7270,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7138,
											"end": 7215,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7135,
											"end": 7136,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7128,
											"end": 7216,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7235,
											"end": 7239,
											"name": "PUSH",
											"source": 10,
											"value": "22"
										},
										{
											"begin": 7232,
											"end": 7233,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 7225,
											"end": 7240,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7259,
											"end": 7263,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 7256,
											"end": 7257,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7249,
											"end": 7264,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7596,
											"name": "tag",
											"source": 10,
											"value": "168"
										},
										{
											"begin": 7276,
											"end": 7596,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7320,
											"end": 7326,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7357,
											"end": 7358,
											"name": "PUSH",
											"source": 10,
											"value": "2"
										},
										{
											"begin": 7351,
											"end": 7355,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7347,
											"end": 7359,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7359,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7337,
											"end": 7359,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7404,
											"end": 7405,
											"name": "PUSH",
											"source": 10,
											"value": "1"
										},
										{
											"begin": 7398,
											"end": 7402,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7394,
											"end": 7406,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7425,
											"end": 7443,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7496,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 7415,
											"end": 7496,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7481,
											"end": 7485,
											"name": "PUSH",
											"source": 10,
											"value": "7F"
										},
										{
											"begin": 7473,
											"end": 7479,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7469,
											"end": 7486,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7486,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7459,
											"end": 7486,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7415,
											"end": 7496,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 7415,
											"end": 7496,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7543,
											"end": 7545,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 7535,
											"end": 7541,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7532,
											"end": 7546,
											"name": "LT",
											"source": 10
										},
										{
											"begin": 7512,
											"end": 7530,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 7509,
											"end": 7547,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7590,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 7506,
											"end": 7590,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "413"
										},
										{
											"begin": 7562,
											"end": 7580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "tag",
											"source": 10,
											"value": "529"
										},
										{
											"begin": 7562,
											"end": 7580,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7506,
											"end": 7590,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 7506,
											"end": 7590,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7327,
											"end": 7596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7596,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7596,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7596,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7276,
											"end": 7596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7769,
											"name": "tag",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 7602,
											"end": 7769,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7742,
											"end": 7761,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F7420656E6F75676820706F696E7473000000000000000000000000000000"
										},
										{
											"begin": 7738,
											"end": 7739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7730,
											"end": 7736,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 7726,
											"end": 7740,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 7719,
											"end": 7762,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7769,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7602,
											"end": 7769,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "tag",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7917,
											"end": 7920,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 7938,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 8002,
											"end": 8004,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 7997,
											"end": 8000,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 8005,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 7938,
											"end": 8005,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 7938,
											"end": 8005,
											"name": "tag",
											"source": 10,
											"value": "532"
										},
										{
											"begin": 7938,
											"end": 8005,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 8005,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7931,
											"end": 8005,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 8103,
											"end": 8106,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8107,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "414"
										},
										{
											"begin": 8014,
											"end": 8107,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8014,
											"end": 8107,
											"name": "tag",
											"source": 10,
											"value": "533"
										},
										{
											"begin": 8014,
											"end": 8107,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8132,
											"end": 8134,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8127,
											"end": 8130,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8123,
											"end": 8135,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8116,
											"end": 8135,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8141,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 7775,
											"end": 8141,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "tag",
											"source": 10,
											"value": "187"
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8313,
											"end": 8317,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8351,
											"end": 8353,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 8340,
											"end": 8349,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8336,
											"end": 8354,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8328,
											"end": 8354,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8400,
											"end": 8409,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8394,
											"end": 8398,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8390,
											"end": 8410,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8386,
											"end": 8387,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8375,
											"end": 8384,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8371,
											"end": 8388,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 8364,
											"end": 8411,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 8554,
											"end": 8558,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8559,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "415"
										},
										{
											"begin": 8428,
											"end": 8559,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8428,
											"end": 8559,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 8428,
											"end": 8559,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8559,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8420,
											"end": 8559,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8566,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8147,
											"end": 8566,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8572,
											"end": 8752,
											"name": "tag",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8572,
											"end": 8752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8620,
											"end": 8697,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8617,
											"end": 8618,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8610,
											"end": 8698,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8717,
											"end": 8721,
											"name": "PUSH",
											"source": 10,
											"value": "11"
										},
										{
											"begin": 8714,
											"end": 8715,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 8707,
											"end": 8722,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 8741,
											"end": 8745,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 8738,
											"end": 8739,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8731,
											"end": 8746,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8952,
											"name": "tag",
											"source": 10,
											"value": "189"
										},
										{
											"begin": 8758,
											"end": 8952,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8798,
											"end": 8802,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 8836,
											"end": 8837,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8838,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8818,
											"end": 8838,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8818,
											"end": 8838,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 8818,
											"end": 8838,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8813,
											"end": 8838,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 8870,
											"end": 8871,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 8852,
											"end": 8872,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 8852,
											"end": 8872,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8872,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8847,
											"end": 8872,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8896,
											"end": 8897,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8893,
											"end": 8894,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 8889,
											"end": 8898,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 8898,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 8881,
											"end": 8898,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8920,
											"end": 8921,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8914,
											"end": 8918,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 8911,
											"end": 8922,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 8945,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 8945,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 8908,
											"end": 8945,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 8925,
											"end": 8943,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "tag",
											"source": 10,
											"value": "541"
										},
										{
											"begin": 8925,
											"end": 8943,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8908,
											"end": 8945,
											"name": "tag",
											"source": 10,
											"value": "540"
										},
										{
											"begin": 8908,
											"end": 8945,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8952,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8952,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8952,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8758,
											"end": 8952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "tag",
											"source": 10,
											"value": "211"
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9079,
											"end": 9083,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9117,
											"end": 9119,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 9106,
											"end": 9115,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9102,
											"end": 9120,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9094,
											"end": 9120,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9094,
											"end": 9120,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 9198,
											"end": 9199,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9187,
											"end": 9196,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9183,
											"end": 9200,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9174,
											"end": 9180,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 9130,
											"end": 9201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "tag",
											"source": 10,
											"value": "543"
										},
										{
											"begin": 9130,
											"end": 9201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 9279,
											"end": 9281,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9268,
											"end": 9277,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 9264,
											"end": 9282,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9255,
											"end": 9261,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9283,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 9211,
											"end": 9283,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9211,
											"end": 9283,
											"name": "tag",
											"source": 10,
											"value": "544"
										},
										{
											"begin": 9211,
											"end": 9283,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 9290,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 8958,
											"end": 9290,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9433,
											"name": "tag",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 9296,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9350,
											"end": 9355,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9381,
											"end": 9387,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9375,
											"end": 9388,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 9366,
											"end": 9388,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9366,
											"end": 9388,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9397,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 9421,
											"end": 9426,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 9397,
											"end": 9427,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "407"
										},
										{
											"begin": 9397,
											"end": 9427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9397,
											"end": 9427,
											"name": "tag",
											"source": 10,
											"value": "546"
										},
										{
											"begin": 9397,
											"end": 9427,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9433,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9433,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9433,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9296,
											"end": 9433,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9784,
											"name": "tag",
											"source": 10,
											"value": "215"
										},
										{
											"begin": 9439,
											"end": 9784,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9506,
											"end": 9512,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9555,
											"end": 9557,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 9543,
											"end": 9552,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9534,
											"end": 9541,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9530,
											"end": 9553,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 9526,
											"end": 9558,
											"name": "SLT",
											"source": 10
										},
										{
											"begin": 9523,
											"end": 9642,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 9523,
											"end": 9642,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 9523,
											"end": 9642,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 9561,
											"end": 9640,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "396"
										},
										{
											"begin": 9561,
											"end": 9640,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9561,
											"end": 9640,
											"name": "tag",
											"source": 10,
											"value": "549"
										},
										{
											"begin": 9561,
											"end": 9640,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9523,
											"end": 9642,
											"name": "tag",
											"source": 10,
											"value": "548"
										},
										{
											"begin": 9523,
											"end": 9642,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9681,
											"end": 9682,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9706,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 9759,
											"end": 9766,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 9750,
											"end": 9756,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9739,
											"end": 9748,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 9735,
											"end": 9757,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9767,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "417"
										},
										{
											"begin": 9706,
											"end": 9767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9706,
											"end": 9767,
											"name": "tag",
											"source": 10,
											"value": "550"
										},
										{
											"begin": 9706,
											"end": 9767,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9696,
											"end": 9767,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9696,
											"end": 9767,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9652,
											"end": 9777,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9784,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9784,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9784,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9439,
											"end": 9784,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9790,
											"end": 9962,
											"name": "tag",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 9790,
											"end": 9962,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 9930,
											"end": 9954,
											"name": "PUSH",
											"source": 10,
											"value": "4164647265737320697320626C61636B6C697374656400000000000000000000"
										},
										{
											"begin": 9926,
											"end": 9927,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 9918,
											"end": 9924,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 9914,
											"end": 9928,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 9907,
											"end": 9955,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 9790,
											"end": 9962,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9790,
											"end": 9962,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 9968,
											"end": 10334,
											"name": "tag",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 9968,
											"end": 10334,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10110,
											"end": 10113,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10131,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 10195,
											"end": 10197,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 10190,
											"end": 10193,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10131,
											"end": 10198,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 10131,
											"end": 10198,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10131,
											"end": 10198,
											"name": "tag",
											"source": 10,
											"value": "553"
										},
										{
											"begin": 10131,
											"end": 10198,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10198,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10124,
											"end": 10198,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10207,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 10296,
											"end": 10299,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10207,
											"end": 10300,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "418"
										},
										{
											"begin": 10207,
											"end": 10300,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10207,
											"end": 10300,
											"name": "tag",
											"source": 10,
											"value": "554"
										},
										{
											"begin": 10207,
											"end": 10300,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10325,
											"end": 10327,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10320,
											"end": 10323,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10316,
											"end": 10328,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10309,
											"end": 10328,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10309,
											"end": 10328,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9968,
											"end": 10334,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 9968,
											"end": 10334,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 9968,
											"end": 10334,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 9968,
											"end": 10334,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10759,
											"name": "tag",
											"source": 10,
											"value": "252"
										},
										{
											"begin": 10340,
											"end": 10759,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10506,
											"end": 10510,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10544,
											"end": 10546,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 10533,
											"end": 10542,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10529,
											"end": 10547,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10521,
											"end": 10547,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10521,
											"end": 10547,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10593,
											"end": 10602,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10587,
											"end": 10591,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10583,
											"end": 10603,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 10579,
											"end": 10580,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10568,
											"end": 10577,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 10564,
											"end": 10581,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10557,
											"end": 10604,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10621,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 10747,
											"end": 10751,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 10621,
											"end": 10752,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "419"
										},
										{
											"begin": 10621,
											"end": 10752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10621,
											"end": 10752,
											"name": "tag",
											"source": 10,
											"value": "556"
										},
										{
											"begin": 10621,
											"end": 10752,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10613,
											"end": 10752,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10613,
											"end": 10752,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10759,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10759,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10759,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10340,
											"end": 10759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10937,
											"name": "tag",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 10765,
											"end": 10937,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 10905,
											"end": 10929,
											"name": "PUSH",
											"source": 10,
											"value": "54726164696E67206973206E6F7420656E61626C656400000000000000000000"
										},
										{
											"begin": 10901,
											"end": 10902,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 10893,
											"end": 10899,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 10889,
											"end": 10903,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 10882,
											"end": 10930,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10937,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10765,
											"end": 10937,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 11309,
											"name": "tag",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 10943,
											"end": 11309,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11085,
											"end": 11088,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 11170,
											"end": 11172,
											"name": "PUSH",
											"source": 10,
											"value": "16"
										},
										{
											"begin": 11165,
											"end": 11168,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 11106,
											"end": 11173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "tag",
											"source": 10,
											"value": "559"
										},
										{
											"begin": 11106,
											"end": 11173,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11173,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11099,
											"end": 11173,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 11271,
											"end": 11274,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "420"
										},
										{
											"begin": 11182,
											"end": 11275,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "tag",
											"source": 10,
											"value": "560"
										},
										{
											"begin": 11182,
											"end": 11275,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11300,
											"end": 11302,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11295,
											"end": 11298,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11303,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11303,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11284,
											"end": 11303,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 11309,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 11309,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 11309,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 10943,
											"end": 11309,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11315,
											"end": 11734,
											"name": "tag",
											"source": 10,
											"value": "257"
										},
										{
											"begin": 11315,
											"end": 11734,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11481,
											"end": 11485,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11519,
											"end": 11521,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 11508,
											"end": 11517,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11504,
											"end": 11522,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11496,
											"end": 11522,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11496,
											"end": 11522,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11568,
											"end": 11577,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11562,
											"end": 11566,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11558,
											"end": 11578,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11554,
											"end": 11555,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11543,
											"end": 11552,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 11539,
											"end": 11556,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11532,
											"end": 11579,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11596,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 11722,
											"end": 11726,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11596,
											"end": 11727,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "421"
										},
										{
											"begin": 11596,
											"end": 11727,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11596,
											"end": 11727,
											"name": "tag",
											"source": 10,
											"value": "562"
										},
										{
											"begin": 11596,
											"end": 11727,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11727,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11588,
											"end": 11727,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11315,
											"end": 11734,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11315,
											"end": 11734,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11315,
											"end": 11734,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11315,
											"end": 11734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11908,
											"name": "tag",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 11740,
											"end": 11908,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11880,
											"end": 11900,
											"name": "PUSH",
											"source": 10,
											"value": "436F6E7472616374206973207061757365640000000000000000000000000000"
										},
										{
											"begin": 11876,
											"end": 11877,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11868,
											"end": 11874,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11864,
											"end": 11878,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11857,
											"end": 11901,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11908,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11740,
											"end": 11908,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 12280,
											"name": "tag",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 11914,
											"end": 12280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12056,
											"end": 12059,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12077,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 12141,
											"end": 12143,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 12136,
											"end": 12139,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12077,
											"end": 12144,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 12077,
											"end": 12144,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12077,
											"end": 12144,
											"name": "tag",
											"source": 10,
											"value": "565"
										},
										{
											"begin": 12077,
											"end": 12144,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12070,
											"end": 12144,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12070,
											"end": 12144,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12153,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 12242,
											"end": 12245,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12153,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "422"
										},
										{
											"begin": 12153,
											"end": 12246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12153,
											"end": 12246,
											"name": "tag",
											"source": 10,
											"value": "566"
										},
										{
											"begin": 12153,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12271,
											"end": 12273,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12266,
											"end": 12269,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12262,
											"end": 12274,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12255,
											"end": 12274,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12255,
											"end": 12274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 12280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 12280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 12280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11914,
											"end": 12280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12705,
											"name": "tag",
											"source": 10,
											"value": "261"
										},
										{
											"begin": 12286,
											"end": 12705,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12452,
											"end": 12456,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12490,
											"end": 12492,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12479,
											"end": 12488,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12475,
											"end": 12493,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12467,
											"end": 12493,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12467,
											"end": 12493,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12539,
											"end": 12548,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12533,
											"end": 12537,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12529,
											"end": 12549,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 12525,
											"end": 12526,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12514,
											"end": 12523,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 12510,
											"end": 12527,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12503,
											"end": 12550,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12567,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 12693,
											"end": 12697,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 12567,
											"end": 12698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "423"
										},
										{
											"begin": 12567,
											"end": 12698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12567,
											"end": 12698,
											"name": "tag",
											"source": 10,
											"value": "568"
										},
										{
											"begin": 12567,
											"end": 12698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12559,
											"end": 12698,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12559,
											"end": 12698,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12705,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12705,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12705,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12286,
											"end": 12705,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12936,
											"name": "tag",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 12711,
											"end": 12936,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 12851,
											"end": 12885,
											"name": "PUSH",
											"source": 10,
											"value": "43616E6E6F74207472616E7366657220746F2074686520636F6E747261637420"
										},
										{
											"begin": 12847,
											"end": 12848,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 12839,
											"end": 12845,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12835,
											"end": 12849,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12828,
											"end": 12886,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12920,
											"end": 12928,
											"name": "PUSH",
											"source": 10,
											"value": "697473656C660000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12915,
											"end": 12917,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 12907,
											"end": 12913,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 12903,
											"end": 12918,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 12896,
											"end": 12929,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12936,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12711,
											"end": 12936,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 12942,
											"end": 13308,
											"name": "tag",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 12942,
											"end": 13308,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13084,
											"end": 13087,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 13169,
											"end": 13171,
											"name": "PUSH",
											"source": 10,
											"value": "26"
										},
										{
											"begin": 13164,
											"end": 13167,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 13105,
											"end": 13172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "tag",
											"source": 10,
											"value": "571"
										},
										{
											"begin": 13105,
											"end": 13172,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13098,
											"end": 13172,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13098,
											"end": 13172,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13181,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 13270,
											"end": 13273,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13181,
											"end": 13274,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "424"
										},
										{
											"begin": 13181,
											"end": 13274,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13181,
											"end": 13274,
											"name": "tag",
											"source": 10,
											"value": "572"
										},
										{
											"begin": 13181,
											"end": 13274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13299,
											"end": 13301,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 13294,
											"end": 13297,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13290,
											"end": 13302,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13283,
											"end": 13302,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13283,
											"end": 13302,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12942,
											"end": 13308,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 12942,
											"end": 13308,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 12942,
											"end": 13308,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 12942,
											"end": 13308,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13733,
											"name": "tag",
											"source": 10,
											"value": "265"
										},
										{
											"begin": 13314,
											"end": 13733,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13480,
											"end": 13484,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13518,
											"end": 13520,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 13507,
											"end": 13516,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13503,
											"end": 13521,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13495,
											"end": 13521,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13495,
											"end": 13521,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13567,
											"end": 13576,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13561,
											"end": 13565,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13557,
											"end": 13577,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 13553,
											"end": 13554,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13542,
											"end": 13551,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 13538,
											"end": 13555,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13531,
											"end": 13578,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 13721,
											"end": 13725,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13726,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "425"
										},
										{
											"begin": 13595,
											"end": 13726,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13595,
											"end": 13726,
											"name": "tag",
											"source": 10,
											"value": "574"
										},
										{
											"begin": 13595,
											"end": 13726,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13587,
											"end": 13726,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13587,
											"end": 13726,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13733,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13733,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13733,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13314,
											"end": 13733,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13920,
											"name": "tag",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 13739,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 13879,
											"end": 13912,
											"name": "PUSH",
											"source": 10,
											"value": "45786365656473206D6178696D756D207472616E7366657220616D6F756E7400"
										},
										{
											"begin": 13875,
											"end": 13876,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 13867,
											"end": 13873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 13863,
											"end": 13877,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 13856,
											"end": 13913,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13920,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13739,
											"end": 13920,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "tag",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14068,
											"end": 14071,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14089,
											"end": 14156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 14153,
											"end": 14155,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 14148,
											"end": 14151,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14089,
											"end": 14156,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 14089,
											"end": 14156,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14089,
											"end": 14156,
											"name": "tag",
											"source": 10,
											"value": "577"
										},
										{
											"begin": 14089,
											"end": 14156,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14082,
											"end": 14156,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14082,
											"end": 14156,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14165,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 14254,
											"end": 14257,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14165,
											"end": 14258,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "426"
										},
										{
											"begin": 14165,
											"end": 14258,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14165,
											"end": 14258,
											"name": "tag",
											"source": 10,
											"value": "578"
										},
										{
											"begin": 14165,
											"end": 14258,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14283,
											"end": 14285,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14278,
											"end": 14281,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14274,
											"end": 14286,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14286,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14267,
											"end": 14286,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 13926,
											"end": 14292,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 13926,
											"end": 14292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "tag",
											"source": 10,
											"value": "269"
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14464,
											"end": 14468,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14502,
											"end": 14504,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 14491,
											"end": 14500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14487,
											"end": 14505,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14479,
											"end": 14505,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14479,
											"end": 14505,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14551,
											"end": 14560,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14545,
											"end": 14549,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14541,
											"end": 14561,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 14537,
											"end": 14538,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14526,
											"end": 14535,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14522,
											"end": 14539,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 14515,
											"end": 14562,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 14579,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 14705,
											"end": 14709,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14579,
											"end": 14710,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "427"
										},
										{
											"begin": 14579,
											"end": 14710,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14579,
											"end": 14710,
											"name": "tag",
											"source": 10,
											"value": "580"
										},
										{
											"begin": 14579,
											"end": 14710,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14571,
											"end": 14710,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14571,
											"end": 14710,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14717,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14298,
											"end": 14717,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 15133,
											"name": "tag",
											"source": 10,
											"value": "271"
										},
										{
											"begin": 14723,
											"end": 15133,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14763,
											"end": 14770,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 14786,
											"end": 14806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 14804,
											"end": 14805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14786,
											"end": 14806,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14786,
											"end": 14806,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14786,
											"end": 14806,
											"name": "tag",
											"source": 10,
											"value": "582"
										},
										{
											"begin": 14786,
											"end": 14806,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14781,
											"end": 14806,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14781,
											"end": 14806,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14820,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 14838,
											"end": 14839,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 14820,
											"end": 14840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14820,
											"end": 14840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14820,
											"end": 14840,
											"name": "tag",
											"source": 10,
											"value": "583"
										},
										{
											"begin": 14820,
											"end": 14840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14840,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14815,
											"end": 14840,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14875,
											"end": 14876,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14872,
											"end": 14873,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 14868,
											"end": 14877,
											"name": "MUL",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 14915,
											"end": 14926,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14927,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 14897,
											"end": 14927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 14897,
											"end": 14927,
											"name": "tag",
											"source": 10,
											"value": "584"
										},
										{
											"begin": 14897,
											"end": 14927,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14886,
											"end": 14927,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14886,
											"end": 14927,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15076,
											"end": 15077,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15067,
											"end": 15074,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15063,
											"end": 15078,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15060,
											"end": 15061,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 15057,
											"end": 15079,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 15037,
											"end": 15038,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15030,
											"end": 15039,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15010,
											"end": 15093,
											"name": "OR",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 15126,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 14987,
											"end": 15126,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 15106,
											"end": 15124,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "tag",
											"source": 10,
											"value": "586"
										},
										{
											"begin": 15106,
											"end": 15124,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14987,
											"end": 15126,
											"name": "tag",
											"source": 10,
											"value": "585"
										},
										{
											"begin": 14987,
											"end": 15126,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 14771,
											"end": 15133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 15133,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 15133,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 15133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 15133,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 14723,
											"end": 15133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15139,
											"end": 15319,
											"name": "tag",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 15139,
											"end": 15319,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15187,
											"end": 15264,
											"name": "PUSH",
											"source": 10,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15184,
											"end": 15185,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15177,
											"end": 15265,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15284,
											"end": 15288,
											"name": "PUSH",
											"source": 10,
											"value": "12"
										},
										{
											"begin": 15281,
											"end": 15282,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 15274,
											"end": 15289,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15308,
											"end": 15312,
											"name": "PUSH",
											"source": 10,
											"value": "24"
										},
										{
											"begin": 15305,
											"end": 15306,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15298,
											"end": 15313,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15510,
											"name": "tag",
											"source": 10,
											"value": "273"
										},
										{
											"begin": 15325,
											"end": 15510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15365,
											"end": 15366,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15382,
											"end": 15402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 15400,
											"end": 15401,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15382,
											"end": 15402,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 15382,
											"end": 15402,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15382,
											"end": 15402,
											"name": "tag",
											"source": 10,
											"value": "589"
										},
										{
											"begin": 15382,
											"end": 15402,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15377,
											"end": 15402,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15377,
											"end": 15402,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15416,
											"end": 15436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 15434,
											"end": 15435,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15416,
											"end": 15436,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 15416,
											"end": 15436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15416,
											"end": 15436,
											"name": "tag",
											"source": 10,
											"value": "590"
										},
										{
											"begin": 15416,
											"end": 15436,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15411,
											"end": 15436,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15411,
											"end": 15436,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15455,
											"end": 15456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15445,
											"end": 15480,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 15445,
											"end": 15480,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 15460,
											"end": 15478,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "428"
										},
										{
											"begin": 15460,
											"end": 15478,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15460,
											"end": 15478,
											"name": "tag",
											"source": 10,
											"value": "592"
										},
										{
											"begin": 15460,
											"end": 15478,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15445,
											"end": 15480,
											"name": "tag",
											"source": 10,
											"value": "591"
										},
										{
											"begin": 15445,
											"end": 15480,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15502,
											"end": 15503,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15499,
											"end": 15500,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15495,
											"end": 15504,
											"name": "DIV",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15490,
											"end": 15504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15510,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15325,
											"end": 15510,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15707,
											"name": "tag",
											"source": 10,
											"value": "283"
										},
										{
											"begin": 15516,
											"end": 15707,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15556,
											"end": 15559,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15575,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 15593,
											"end": 15594,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15595,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 15575,
											"end": 15595,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15575,
											"end": 15595,
											"name": "tag",
											"source": 10,
											"value": "594"
										},
										{
											"begin": 15575,
											"end": 15595,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15570,
											"end": 15595,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15570,
											"end": 15595,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 15627,
											"end": 15628,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15629,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "402"
										},
										{
											"begin": 15609,
											"end": 15629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15609,
											"end": 15629,
											"name": "tag",
											"source": 10,
											"value": "595"
										},
										{
											"begin": 15609,
											"end": 15629,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15629,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15604,
											"end": 15629,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15652,
											"end": 15653,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15649,
											"end": 15650,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15645,
											"end": 15654,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15638,
											"end": 15654,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15638,
											"end": 15654,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15673,
											"end": 15676,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 15670,
											"end": 15671,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15667,
											"end": 15677,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "416"
										},
										{
											"begin": 15680,
											"end": 15698,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "tag",
											"source": 10,
											"value": "597"
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "tag",
											"source": 10,
											"value": "596"
										},
										{
											"begin": 15664,
											"end": 15700,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15707,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15707,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15707,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15516,
											"end": 15707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15713,
											"end": 15933,
											"name": "tag",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 15713,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 15853,
											"end": 15887,
											"name": "PUSH",
											"source": 10,
											"value": "45786365656473206D6178696D756D20656E676167656D656E7420706F696E74"
										},
										{
											"begin": 15849,
											"end": 15850,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 15841,
											"end": 15847,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15837,
											"end": 15851,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15830,
											"end": 15888,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15922,
											"end": 15925,
											"name": "PUSH",
											"source": 10,
											"value": "7300000000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15917,
											"end": 15919,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 15909,
											"end": 15915,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 15905,
											"end": 15920,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 15898,
											"end": 15926,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 15713,
											"end": 15933,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15713,
											"end": 15933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 16305,
											"name": "tag",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 15939,
											"end": 16305,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16081,
											"end": 16084,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16102,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 16166,
											"end": 16168,
											"name": "PUSH",
											"source": 10,
											"value": "21"
										},
										{
											"begin": 16161,
											"end": 16164,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16169,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 16102,
											"end": 16169,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16102,
											"end": 16169,
											"name": "tag",
											"source": 10,
											"value": "600"
										},
										{
											"begin": 16102,
											"end": 16169,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16095,
											"end": 16169,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16095,
											"end": 16169,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16178,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 16267,
											"end": 16270,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16178,
											"end": 16271,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "429"
										},
										{
											"begin": 16178,
											"end": 16271,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16178,
											"end": 16271,
											"name": "tag",
											"source": 10,
											"value": "601"
										},
										{
											"begin": 16178,
											"end": 16271,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16296,
											"end": 16298,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 16291,
											"end": 16294,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16287,
											"end": 16299,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16280,
											"end": 16299,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16280,
											"end": 16299,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 16305,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 16305,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 16305,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 15939,
											"end": 16305,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16311,
											"end": 16730,
											"name": "tag",
											"source": 10,
											"value": "286"
										},
										{
											"begin": 16311,
											"end": 16730,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16477,
											"end": 16481,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16515,
											"end": 16517,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 16504,
											"end": 16513,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16500,
											"end": 16518,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16492,
											"end": 16518,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16492,
											"end": 16518,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16564,
											"end": 16573,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16558,
											"end": 16562,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16554,
											"end": 16574,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 16550,
											"end": 16551,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16539,
											"end": 16548,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 16535,
											"end": 16552,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16528,
											"end": 16575,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16592,
											"end": 16723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 16718,
											"end": 16722,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 16592,
											"end": 16723,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "430"
										},
										{
											"begin": 16592,
											"end": 16723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16592,
											"end": 16723,
											"name": "tag",
											"source": 10,
											"value": "603"
										},
										{
											"begin": 16592,
											"end": 16723,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16584,
											"end": 16723,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16584,
											"end": 16723,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16311,
											"end": 16730,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16311,
											"end": 16730,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16311,
											"end": 16730,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16311,
											"end": 16730,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16736,
											"end": 16907,
											"name": "tag",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 16736,
											"end": 16907,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 16876,
											"end": 16899,
											"name": "PUSH",
											"source": 10,
											"value": "436C61696D20636F6F6C646F776E206163746976650000000000000000000000"
										},
										{
											"begin": 16872,
											"end": 16873,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 16864,
											"end": 16870,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 16860,
											"end": 16874,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 16853,
											"end": 16900,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 16736,
											"end": 16907,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16736,
											"end": 16907,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 16913,
											"end": 17279,
											"name": "tag",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 16913,
											"end": 17279,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17055,
											"end": 17058,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17076,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 17140,
											"end": 17142,
											"name": "PUSH",
											"source": 10,
											"value": "15"
										},
										{
											"begin": 17135,
											"end": 17138,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17076,
											"end": 17143,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 17076,
											"end": 17143,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17076,
											"end": 17143,
											"name": "tag",
											"source": 10,
											"value": "606"
										},
										{
											"begin": 17076,
											"end": 17143,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17069,
											"end": 17143,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17069,
											"end": 17143,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17152,
											"end": 17245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 17241,
											"end": 17244,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17152,
											"end": 17245,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "431"
										},
										{
											"begin": 17152,
											"end": 17245,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17152,
											"end": 17245,
											"name": "tag",
											"source": 10,
											"value": "607"
										},
										{
											"begin": 17152,
											"end": 17245,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17270,
											"end": 17272,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17265,
											"end": 17268,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17261,
											"end": 17273,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17254,
											"end": 17273,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17254,
											"end": 17273,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16913,
											"end": 17279,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 16913,
											"end": 17279,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 16913,
											"end": 17279,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 16913,
											"end": 17279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17704,
											"name": "tag",
											"source": 10,
											"value": "299"
										},
										{
											"begin": 17285,
											"end": 17704,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17451,
											"end": 17455,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17489,
											"end": 17491,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 17478,
											"end": 17487,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17474,
											"end": 17492,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17466,
											"end": 17492,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17466,
											"end": 17492,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17538,
											"end": 17547,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17532,
											"end": 17536,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17528,
											"end": 17548,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 17524,
											"end": 17525,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17513,
											"end": 17522,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 17509,
											"end": 17526,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17502,
											"end": 17549,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17566,
											"end": 17697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 17692,
											"end": 17696,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 17566,
											"end": 17697,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "432"
										},
										{
											"begin": 17566,
											"end": 17697,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17566,
											"end": 17697,
											"name": "tag",
											"source": 10,
											"value": "609"
										},
										{
											"begin": 17566,
											"end": 17697,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17558,
											"end": 17697,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17558,
											"end": 17697,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17704,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17704,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17704,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17285,
											"end": 17704,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17710,
											"end": 17880,
											"name": "tag",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 17710,
											"end": 17880,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 17850,
											"end": 17872,
											"name": "PUSH",
											"source": 10,
											"value": "4E6F207265776172647320617661696C61626C65000000000000000000000000"
										},
										{
											"begin": 17846,
											"end": 17847,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 17838,
											"end": 17844,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 17834,
											"end": 17848,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17827,
											"end": 17873,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 17710,
											"end": 17880,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17710,
											"end": 17880,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 17886,
											"end": 18252,
											"name": "tag",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 17886,
											"end": 18252,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18028,
											"end": 18031,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18049,
											"end": 18116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 18113,
											"end": 18115,
											"name": "PUSH",
											"source": 10,
											"value": "14"
										},
										{
											"begin": 18108,
											"end": 18111,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18049,
											"end": 18116,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 18049,
											"end": 18116,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18049,
											"end": 18116,
											"name": "tag",
											"source": 10,
											"value": "612"
										},
										{
											"begin": 18049,
											"end": 18116,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18116,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18042,
											"end": 18116,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18125,
											"end": 18218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 18214,
											"end": 18217,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18125,
											"end": 18218,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "433"
										},
										{
											"begin": 18125,
											"end": 18218,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18125,
											"end": 18218,
											"name": "tag",
											"source": 10,
											"value": "613"
										},
										{
											"begin": 18125,
											"end": 18218,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18243,
											"end": 18245,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18238,
											"end": 18241,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18234,
											"end": 18246,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18227,
											"end": 18246,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18227,
											"end": 18246,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17886,
											"end": 18252,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 17886,
											"end": 18252,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 17886,
											"end": 18252,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 17886,
											"end": 18252,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18258,
											"end": 18677,
											"name": "tag",
											"source": 10,
											"value": "303"
										},
										{
											"begin": 18258,
											"end": 18677,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18424,
											"end": 18428,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18462,
											"end": 18464,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 18451,
											"end": 18460,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18447,
											"end": 18465,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18439,
											"end": 18465,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18439,
											"end": 18465,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18511,
											"end": 18520,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18505,
											"end": 18509,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18501,
											"end": 18521,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 18497,
											"end": 18498,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18486,
											"end": 18495,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 18482,
											"end": 18499,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18475,
											"end": 18522,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18539,
											"end": 18670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 18665,
											"end": 18669,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 18539,
											"end": 18670,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "434"
										},
										{
											"begin": 18539,
											"end": 18670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18539,
											"end": 18670,
											"name": "tag",
											"source": 10,
											"value": "615"
										},
										{
											"begin": 18539,
											"end": 18670,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18531,
											"end": 18670,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18531,
											"end": 18670,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18258,
											"end": 18677,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18258,
											"end": 18677,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18258,
											"end": 18677,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18258,
											"end": 18677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18683,
											"end": 18859,
											"name": "tag",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 18683,
											"end": 18859,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 18823,
											"end": 18851,
											"name": "PUSH",
											"source": 10,
											"value": "496E73756666696369656E742072657761726420737570706C79000000000000"
										},
										{
											"begin": 18819,
											"end": 18820,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 18811,
											"end": 18817,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 18807,
											"end": 18821,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 18800,
											"end": 18852,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 18683,
											"end": 18859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18683,
											"end": 18859,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 18865,
											"end": 19231,
											"name": "tag",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 18865,
											"end": 19231,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19007,
											"end": 19010,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19028,
											"end": 19095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 19092,
											"end": 19094,
											"name": "PUSH",
											"source": 10,
											"value": "1A"
										},
										{
											"begin": 19087,
											"end": 19090,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19028,
											"end": 19095,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 19028,
											"end": 19095,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19028,
											"end": 19095,
											"name": "tag",
											"source": 10,
											"value": "618"
										},
										{
											"begin": 19028,
											"end": 19095,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19021,
											"end": 19095,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19021,
											"end": 19095,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19104,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 19193,
											"end": 19196,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19104,
											"end": 19197,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "435"
										},
										{
											"begin": 19104,
											"end": 19197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19104,
											"end": 19197,
											"name": "tag",
											"source": 10,
											"value": "619"
										},
										{
											"begin": 19104,
											"end": 19197,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19222,
											"end": 19224,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19217,
											"end": 19220,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19213,
											"end": 19225,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19206,
											"end": 19225,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19206,
											"end": 19225,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18865,
											"end": 19231,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 18865,
											"end": 19231,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 18865,
											"end": 19231,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 18865,
											"end": 19231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "tag",
											"source": 10,
											"value": "308"
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19403,
											"end": 19407,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19441,
											"end": 19443,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 19430,
											"end": 19439,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19426,
											"end": 19444,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19418,
											"end": 19444,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19418,
											"end": 19444,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19490,
											"end": 19499,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19484,
											"end": 19488,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19480,
											"end": 19500,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 19476,
											"end": 19477,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19465,
											"end": 19474,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 19461,
											"end": 19478,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19454,
											"end": 19501,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19518,
											"end": 19649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 19644,
											"end": 19648,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 19518,
											"end": 19649,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "436"
										},
										{
											"begin": 19518,
											"end": 19649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19518,
											"end": 19649,
											"name": "tag",
											"source": 10,
											"value": "621"
										},
										{
											"begin": 19518,
											"end": 19649,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19510,
											"end": 19649,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19510,
											"end": 19649,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19237,
											"end": 19656,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19237,
											"end": 19656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19662,
											"end": 19842,
											"name": "tag",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 19662,
											"end": 19842,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19802,
											"end": 19834,
											"name": "PUSH",
											"source": 10,
											"value": "54617820726174652065786365656473206D6178696D756D206C696D69740000"
										},
										{
											"begin": 19798,
											"end": 19799,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 19790,
											"end": 19796,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 19786,
											"end": 19800,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 19779,
											"end": 19835,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 19662,
											"end": 19842,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19662,
											"end": 19842,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "tag",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 19990,
											"end": 19993,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20011,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 20075,
											"end": 20077,
											"name": "PUSH",
											"source": 10,
											"value": "1E"
										},
										{
											"begin": 20070,
											"end": 20073,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20011,
											"end": 20078,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 20011,
											"end": 20078,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20011,
											"end": 20078,
											"name": "tag",
											"source": 10,
											"value": "624"
										},
										{
											"begin": 20011,
											"end": 20078,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20004,
											"end": 20078,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20004,
											"end": 20078,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20087,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 20176,
											"end": 20179,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20087,
											"end": 20180,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "437"
										},
										{
											"begin": 20087,
											"end": 20180,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20087,
											"end": 20180,
											"name": "tag",
											"source": 10,
											"value": "625"
										},
										{
											"begin": 20087,
											"end": 20180,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20205,
											"end": 20207,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20200,
											"end": 20203,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20196,
											"end": 20208,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20189,
											"end": 20208,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20189,
											"end": 20208,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 20214,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 19848,
											"end": 20214,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "tag",
											"source": 10,
											"value": "317"
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20386,
											"end": 20390,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20424,
											"end": 20426,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20413,
											"end": 20422,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20409,
											"end": 20427,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20401,
											"end": 20427,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20401,
											"end": 20427,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20473,
											"end": 20482,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20467,
											"end": 20471,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20463,
											"end": 20483,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 20459,
											"end": 20460,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20448,
											"end": 20457,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20444,
											"end": 20461,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20437,
											"end": 20484,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 20501,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 20627,
											"end": 20631,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 20501,
											"end": 20632,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "438"
										},
										{
											"begin": 20501,
											"end": 20632,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20501,
											"end": 20632,
											"name": "tag",
											"source": 10,
											"value": "627"
										},
										{
											"begin": 20501,
											"end": 20632,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20493,
											"end": 20632,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20493,
											"end": 20632,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20639,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20220,
											"end": 20639,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20645,
											"end": 21087,
											"name": "tag",
											"source": 10,
											"value": "352"
										},
										{
											"begin": 20645,
											"end": 21087,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20794,
											"end": 20798,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20832,
											"end": 20834,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 20821,
											"end": 20830,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 20817,
											"end": 20835,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20809,
											"end": 20835,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 20809,
											"end": 20835,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20845,
											"end": 20916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 20913,
											"end": 20914,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 20902,
											"end": 20911,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20898,
											"end": 20915,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20889,
											"end": 20895,
											"name": "DUP7",
											"source": 10
										},
										{
											"begin": 20845,
											"end": 20916,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "412"
										},
										{
											"begin": 20845,
											"end": 20916,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20845,
											"end": 20916,
											"name": "tag",
											"source": 10,
											"value": "629"
										},
										{
											"begin": 20845,
											"end": 20916,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20926,
											"end": 20998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 20994,
											"end": 20996,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 20983,
											"end": 20992,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 20979,
											"end": 20997,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 20970,
											"end": 20976,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 20926,
											"end": 20998,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 20926,
											"end": 20998,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 20926,
											"end": 20998,
											"name": "tag",
											"source": 10,
											"value": "630"
										},
										{
											"begin": 20926,
											"end": 20998,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21008,
											"end": 21080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 21076,
											"end": 21078,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 21065,
											"end": 21074,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21061,
											"end": 21079,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21052,
											"end": 21058,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 21008,
											"end": 21080,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "409"
										},
										{
											"begin": 21008,
											"end": 21080,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21008,
											"end": 21080,
											"name": "tag",
											"source": 10,
											"value": "631"
										},
										{
											"begin": 21008,
											"end": 21080,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 20645,
											"end": 21087,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": 20645,
											"end": 21087,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 20645,
											"end": 21087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20645,
											"end": 21087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20645,
											"end": 21087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20645,
											"end": 21087,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 20645,
											"end": 21087,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21093,
											"end": 21274,
											"name": "tag",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 21093,
											"end": 21274,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21233,
											"end": 21266,
											"name": "PUSH",
											"source": 10,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 21229,
											"end": 21230,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21221,
											"end": 21227,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21217,
											"end": 21231,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21210,
											"end": 21267,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21093,
											"end": 21274,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21093,
											"end": 21274,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21646,
											"name": "tag",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 21280,
											"end": 21646,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21422,
											"end": 21425,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21443,
											"end": 21510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 21507,
											"end": 21509,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 21502,
											"end": 21505,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21443,
											"end": 21510,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "391"
										},
										{
											"begin": 21443,
											"end": 21510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21443,
											"end": 21510,
											"name": "tag",
											"source": 10,
											"value": "634"
										},
										{
											"begin": 21443,
											"end": 21510,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21436,
											"end": 21510,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21436,
											"end": 21510,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21519,
											"end": 21612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 21608,
											"end": 21611,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21519,
											"end": 21612,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "439"
										},
										{
											"begin": 21519,
											"end": 21612,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21519,
											"end": 21612,
											"name": "tag",
											"source": 10,
											"value": "635"
										},
										{
											"begin": 21519,
											"end": 21612,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21637,
											"end": 21639,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21632,
											"end": 21635,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21628,
											"end": 21640,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21621,
											"end": 21640,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21621,
											"end": 21640,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21646,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21646,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21646,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21280,
											"end": 21646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21652,
											"end": 22071,
											"name": "tag",
											"source": 10,
											"value": "368"
										},
										{
											"begin": 21652,
											"end": 22071,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21818,
											"end": 21822,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21856,
											"end": 21858,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 21845,
											"end": 21854,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 21841,
											"end": 21859,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21833,
											"end": 21859,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21833,
											"end": 21859,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21905,
											"end": 21914,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21899,
											"end": 21903,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21895,
											"end": 21915,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 21891,
											"end": 21892,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 21880,
											"end": 21889,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 21876,
											"end": 21893,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 21869,
											"end": 21916,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 21933,
											"end": 22064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 22059,
											"end": 22063,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 21933,
											"end": 22064,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "440"
										},
										{
											"begin": 21933,
											"end": 22064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 21933,
											"end": 22064,
											"name": "tag",
											"source": 10,
											"value": "637"
										},
										{
											"begin": 21933,
											"end": 22064,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 21925,
											"end": 22064,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21925,
											"end": 22064,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21652,
											"end": 22071,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 21652,
											"end": 22071,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 21652,
											"end": 22071,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 21652,
											"end": 22071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/access/Ownable.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
								"@openzeppelin/contracts/security/Pausable.sol",
								"@openzeppelin/contracts/security/ReentrancyGuard.sol",
								"@openzeppelin/contracts/token/ERC20/ERC20.sol",
								"@openzeppelin/contracts/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
								"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts/utils/Context.sol",
								"contracts/GeckoGold.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_ENGAGEMENT_POINTS()": "819edfbc",
							"MAX_TAX_RATE()": "8fa81732",
							"MAX_TRANSFER_AMOUNT()": "fc1b3113",
							"TOTAL_SUPPLY()": "902d55a5",
							"addToWhitelist(address)": "e43252d7",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balance(address)": "e3d670d7",
							"balanceOf(address)": "70a08231",
							"burn(uint256)": "42966c68",
							"burnSupply(uint256)": "d595c331",
							"claimReward()": "b88a802f",
							"decimals()": "313ce567",
							"deductEngagementPoints(address,uint256)": "17386e2c",
							"enableTrading()": "8a8c523c",
							"engagementPoints(address)": "2576f999",
							"name()": "06fdde03",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"removeFromWhitelist(address)": "8ab1d681",
							"renounceOwnership()": "715018a6",
							"rescueTokens(address,uint256)": "57376198",
							"setBlacklist(address,bool)": "153b0d1e",
							"setTaxRate(uint256)": "c6d69a30",
							"symbol()": "95d89b41",
							"taxRate()": "771a3a1d",
							"totalSupply()": "18160ddd",
							"tradingEnabled()": "4ada218b",
							"tradingStartBlock()": "d798cbd2",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"updateEngagementPoints(address,uint256)": "aabd801d",
							"withdrawBalance()": "5fd8c710"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPoints\",\"type\":\"uint256\"}],\"name\":\"EngagementPointsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"RewardClaimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"TokensBurned\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_ENGAGEMENT_POINTS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TAX_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_TRANSFER_AMOUNT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOTAL_SUPPLY\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"addToWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burnSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"claimReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"deductEngagementPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"enableTrading\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"engagementPoints\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"removeFromWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"rescueTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isBlacklisted\",\"type\":\"bool\"}],\"name\":\"setBlacklist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newTaxRate\",\"type\":\"uint256\"}],\"name\":\"setTaxRate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"taxRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingEnabled\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tradingStartBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"points\",\"type\":\"uint256\"}],\"name\":\"updateEngagementPoints\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawBalance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Skips emitting an {Approval} event indicating an allowance update. This is not required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve]. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/GeckoGold.sol\":\"GeckoGold\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x880da465c203cec76b10d72dbd87c80f387df4102274f23eea1f9c9b0918792b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://399594cd8bb0143bc9e55e0f1d071d0d8c850a394fb7a319d50edd55d9ed822b\",\"dweb:/ipfs/QmbPZzgtT6LEm9CMqWfagQFwETbV1ztpECBB1DtQHrKiRz\"]},\"@openzeppelin/contracts/security/Pausable.sol\":{\"keccak256\":\"0x0849d93b16c9940beb286a7864ed02724b248b93e0d80ef6355af5ef15c64773\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ddabb16009cd17eaca3143feadf450ac13e72919ebe2ca50e00f61cb78bc004\",\"dweb:/ipfs/QmSPwPxX7d6TTWakN5jy5wsaGkS1y9TW8fuhGSraMkLk2B\"]},\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0xa535a5df777d44e945dd24aa43a11e44b024140fc340ad0dfe42acf4002aade1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://41319e7f621f2dc3733511332c4fd032f8e32ad2aa7fd6f665c19741d9941a34\",\"dweb:/ipfs/QmcYR3bd862GD1Bc7jwrU9bGxrhUu5na1oP964bDCu2id1\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xbf61ab2ae1d575a17ea58fbb99ca232baddcc4e0eeea180e84cbc74b0c348b31\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4e0968705bad99747a8e5288aa008678c2be2f471f919dce3925a3cc4f1dee09\",\"dweb:/ipfs/QmbAFnCQfo4tw6ssfQSjhA5LzwHWNNryXN8bX7ty8jiqqn\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe06a3f08a987af6ad2e1c1e774405d4fe08f1694b67517438b467cecf0da0ef7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://df6f0c459663c9858b6cba2cda1d14a7d05a985bed6d2de72bd8e78c25ee79db\",\"dweb:/ipfs/QmeTTxZ7qVk9rjEv2R4CpCwdf8UMCcRqDNMvzNxHc3Fnn9\"]},\"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol\":{\"keccak256\":\"0x2659248df25e34000ed214b3dc8da2160bc39874c992b477d9e2b1b3283dc073\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c345af1b0e7ea28d1216d6a04ab28f5534a5229b9edf9ca3cd0e84950ae58d26\",\"dweb:/ipfs/QmY63jtSrYpLRe8Gj1ep2vMDCKxGNNG3hnNVKBVnrs2nmA\"]},\"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x70f2f713b13b7ce4610bcd0ac9fec0f3cc43693b043abcb8dc40a42a726eb330\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c13d13304ac79a83ab1c30168967d19e2203342ebbd6a9bbce4db7550522dcbf\",\"dweb:/ipfs/QmeN5jKMN2vw5bhacr6tkg78afbTTZUeaacNHqjWt4Ew1r\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"contracts/GeckoGold.sol\":{\"keccak256\":\"0x73a49a554e0d92c1f56ffd37b1f91b9f4672c6195f57beba3ed601ae045c5a19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0584c287166d71803172fb99b2642f8ff9722b83ee82c85262a38c089167efa0\",\"dweb:/ipfs/QmZ3e1doKwbsSDZcF8TERiUbuJimgTaJ9arhNcHVEtFKoL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 480,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 486,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 488,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 490,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 492,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 8,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "_owner",
								"offset": 0,
								"slot": "5",
								"type": "t_address"
							},
							{
								"astId": 403,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "_status",
								"offset": 0,
								"slot": "6",
								"type": "t_uint256"
							},
							{
								"astId": 1175,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "taxRate",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							},
							{
								"astId": 1192,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "blacklistedAddresses",
								"offset": 0,
								"slot": "8",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1196,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "whitelistAddresses",
								"offset": 0,
								"slot": "9",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 1200,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "engagementPoints",
								"offset": 0,
								"slot": "10",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1204,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "lastClaimed",
								"offset": 0,
								"slot": "11",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 1206,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "tradingStartBlock",
								"offset": 0,
								"slot": "12",
								"type": "t_uint256"
							},
							{
								"astId": 1209,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "tradingEnabled",
								"offset": 0,
								"slot": "13",
								"type": "t_bool"
							},
							{
								"astId": 1212,
								"contract": "contracts/GeckoGold.sol:GeckoGold",
								"label": "paused",
								"offset": 1,
								"slot": "13",
								"type": "t_bool"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							1152
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 1153,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1152,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1152,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								1152
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1134,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1134,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/interfaces/draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							284
						],
						"IERC20Errors": [
							189
						],
						"IERC721Errors": [
							237
						]
					},
					"id": 285,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "138:141:1",
								"text": " @dev Standard ERC-20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-20 tokens."
							},
							"fullyImplemented": true,
							"id": 189,
							"linearizedBaseContracts": [
								189
							],
							"name": "IERC20Errors",
							"nameLocation": "290:12:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "309:309:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 159,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "629:24:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "662:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "654:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "654:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "678:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "670:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 154,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "670:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "695:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "687:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "687:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "653:49:1"
									},
									"src": "623:80:1"
								},
								{
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "709:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 164,
									"name": "ERC20InvalidSender",
									"nameLocation": "872:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "899:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 164,
												"src": "891:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "891:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "890:16:1"
									},
									"src": "866:41:1"
								},
								{
									"documentation": {
										"id": 165,
										"nodeType": "StructuredDocumentation",
										"src": "913:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 169,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1083:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 168,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 167,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1112:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 169,
												"src": "1104:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 166,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1104:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1103:18:1"
									},
									"src": "1077:45:1"
								},
								{
									"documentation": {
										"id": 170,
										"nodeType": "StructuredDocumentation",
										"src": "1128:345:1",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 178,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1484:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1519:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1511:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1511:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1536:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1528:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 173,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1555:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1547:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 175,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1547:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1510:52:1"
									},
									"src": "1478:85:1"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1569:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 183,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1754:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 182,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1783:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 183,
												"src": "1775:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:18:1"
									},
									"src": "1748:45:1"
								},
								{
									"documentation": {
										"id": 184,
										"nodeType": "StructuredDocumentation",
										"src": "1799:195:1",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 188,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2005:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 186,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2033:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2025:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2025:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2024:17:1"
									},
									"src": "1999:43:1"
								}
							],
							"scope": 285,
							"src": "280:1764:1",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 190,
								"nodeType": "StructuredDocumentation",
								"src": "2046:143:1",
								"text": " @dev Standard ERC-721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-721 tokens."
							},
							"fullyImplemented": true,
							"id": 237,
							"linearizedBaseContracts": [
								237
							],
							"name": "IERC721Errors",
							"nameLocation": "2200:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "2220:219:1",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in ERC-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 195,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2450:18:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 194,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2477:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 195,
												"src": "2469:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2469:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2468:15:1"
									},
									"src": "2444:40:1"
								},
								{
									"documentation": {
										"id": 196,
										"nodeType": "StructuredDocumentation",
										"src": "2490:132:1",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 200,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2633:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2664:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "2656:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2656:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2655:17:1"
									},
									"src": "2627:46:1"
								},
								{
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2679:289:1",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 209,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2979:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3008:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3000:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3000:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3024:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3016:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3016:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3041:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "3033:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 206,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3033:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2999:48:1"
									},
									"src": "2973:75:1"
								},
								{
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "3054:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 214,
									"name": "ERC721InvalidSender",
									"nameLocation": "3217:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3245:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "3237:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 211,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3237:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3236:16:1"
									},
									"src": "3211:42:1"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "3259:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 219,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3429:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3459:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 219,
												"src": "3451:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3451:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3450:18:1"
									},
									"src": "3423:46:1"
								},
								{
									"documentation": {
										"id": 220,
										"nodeType": "StructuredDocumentation",
										"src": "3475:247:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 226,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3733:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 225,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3768:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3760:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 221,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3760:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 224,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3786:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 226,
												"src": "3778:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 223,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3778:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3759:35:1"
									},
									"src": "3727:68:1"
								},
								{
									"documentation": {
										"id": 227,
										"nodeType": "StructuredDocumentation",
										"src": "3801:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 231,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3986:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 229,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4016:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 231,
												"src": "4008:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4008:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4007:18:1"
									},
									"src": "3980:46:1"
								},
								{
									"documentation": {
										"id": 232,
										"nodeType": "StructuredDocumentation",
										"src": "4032:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 236,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4240:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 234,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4270:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 236,
												"src": "4262:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4262:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4261:18:1"
									},
									"src": "4234:46:1"
								}
							],
							"scope": 285,
							"src": "2190:2092:1",
							"usedErrors": [
								195,
								200,
								209,
								214,
								219,
								226,
								231,
								236
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 238,
								"nodeType": "StructuredDocumentation",
								"src": "4284:145:1",
								"text": " @dev Standard ERC-1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC-1155 tokens."
							},
							"fullyImplemented": true,
							"id": 284,
							"linearizedBaseContracts": [
								284
							],
							"name": "IERC1155Errors",
							"nameLocation": "4440:14:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "4461:361:1",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 249,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4833:26:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 241,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4868:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4860:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 240,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 243,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4884:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4876:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 242,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4876:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 245,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4901:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4893:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 244,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4893:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 247,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4917:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 249,
												"src": "4909:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 246,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4909:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4859:66:1"
									},
									"src": "4827:99:1"
								},
								{
									"documentation": {
										"id": 250,
										"nodeType": "StructuredDocumentation",
										"src": "4932:152:1",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 254,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5095:20:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5124:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 254,
												"src": "5116:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5116:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5115:16:1"
									},
									"src": "5089:43:1"
								},
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "5138:159:1",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 259,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5308:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5339:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 259,
												"src": "5331:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5331:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5330:18:1"
									},
									"src": "5302:47:1"
								},
								{
									"documentation": {
										"id": 260,
										"nodeType": "StructuredDocumentation",
										"src": "5355:256:1",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 266,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5622:28:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 262,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5659:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5651:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 261,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5677:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 266,
												"src": "5669:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5669:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:33:1"
									},
									"src": "5616:68:1"
								},
								{
									"documentation": {
										"id": 267,
										"nodeType": "StructuredDocumentation",
										"src": "5690:174:1",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 271,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5875:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5906:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "5898:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 268,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5898:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5897:18:1"
									},
									"src": "5869:47:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "5922:197:1",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 276,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6130:22:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 274,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6161:8:1",
												"nodeType": "VariableDeclaration",
												"scope": 276,
												"src": "6153:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 273,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6152:18:1"
									},
									"src": "6124:47:1"
								},
								{
									"documentation": {
										"id": 277,
										"nodeType": "StructuredDocumentation",
										"src": "6177:280:1",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 283,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6468:25:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 279,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6502:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6494:17:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6494:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 281,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6521:12:1",
												"nodeType": "VariableDeclaration",
												"scope": 283,
												"src": "6513:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 280,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6513:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6493:41:1"
									},
									"src": "6462:73:1"
								}
							],
							"scope": 285,
							"src": "4430:2107:1",
							"usedErrors": [
								249,
								254,
								259,
								266,
								271,
								276,
								283
							],
							"usedEvents": []
						}
					],
					"src": "112:6426:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/security/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							1152
						],
						"Pausable": [
							392
						]
					},
					"id": 393,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 286,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 287,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 393,
							"sourceUnit": 1153,
							"src": "130:30:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 289,
										"name": "Context",
										"nameLocations": [
											"632:7:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1152,
										"src": "632:7:2"
									},
									"id": 290,
									"nodeType": "InheritanceSpecifier",
									"src": "632:7:2"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 288,
								"nodeType": "StructuredDocumentation",
								"src": "162:439:2",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 392,
							"linearizedBaseContracts": [
								392,
								1152
							],
							"name": "Pausable",
							"nameLocation": "620:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "646:73:2",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 295,
									"name": "Paused",
									"nameLocation": "730:6:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "745:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 295,
												"src": "737:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "737:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "736:17:2"
									},
									"src": "724:30:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 296,
										"nodeType": "StructuredDocumentation",
										"src": "760:70:2",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 300,
									"name": "Unpaused",
									"nameLocation": "841:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 298,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "858:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 300,
												"src": "850:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 297,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "850:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "849:17:2"
									},
									"src": "835:32:2"
								},
								{
									"constant": false,
									"id": 302,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "886:7:2",
									"nodeType": "VariableDeclaration",
									"scope": 392,
									"src": "873:20:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 301,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "873:4:2",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 310,
										"nodeType": "Block",
										"src": "986:32:2",
										"statements": [
											{
												"expression": {
													"id": 308,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 306,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "996:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 307,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1006:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "996:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 309,
												"nodeType": "ExpressionStatement",
												"src": "996:15:2"
											}
										]
									},
									"documentation": {
										"id": 303,
										"nodeType": "StructuredDocumentation",
										"src": "900:67:2",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 311,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "983:2:2"
									},
									"returnParameters": {
										"id": 305,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "986:0:2"
									},
									"scope": 392,
									"src": "972:46:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 318,
										"nodeType": "Block",
										"src": "1229:47:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 314,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 348,
														"src": "1239:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 315,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1239:19:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 316,
												"nodeType": "ExpressionStatement",
												"src": "1239:19:2"
											},
											{
												"id": 317,
												"nodeType": "PlaceholderStatement",
												"src": "1268:1:2"
											}
										]
									},
									"documentation": {
										"id": 312,
										"nodeType": "StructuredDocumentation",
										"src": "1024:175:2",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 319,
									"name": "whenNotPaused",
									"nameLocation": "1213:13:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 313,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1226:2:2"
									},
									"src": "1204:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "1476:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 322,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1486:14:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 323,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1486:16:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 324,
												"nodeType": "ExpressionStatement",
												"src": "1486:16:2"
											},
											{
												"id": 325,
												"nodeType": "PlaceholderStatement",
												"src": "1512:1:2"
											}
										]
									},
									"documentation": {
										"id": 320,
										"nodeType": "StructuredDocumentation",
										"src": "1282:167:2",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 327,
									"name": "whenPaused",
									"nameLocation": "1463:10:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1473:2:2"
									},
									"src": "1454:66:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 335,
										"nodeType": "Block",
										"src": "1668:31:2",
										"statements": [
											{
												"expression": {
													"id": 333,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 302,
													"src": "1685:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 332,
												"id": 334,
												"nodeType": "Return",
												"src": "1678:14:2"
											}
										]
									},
									"documentation": {
										"id": 328,
										"nodeType": "StructuredDocumentation",
										"src": "1526:84:2",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 336,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1624:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1630:2:2"
									},
									"returnParameters": {
										"id": 332,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 336,
												"src": "1662:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 330,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1662:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1661:6:2"
									},
									"scope": 392,
									"src": "1615:84:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 347,
										"nodeType": "Block",
										"src": "1818:55:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "1836:9:2",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 341,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 336,
																	"src": "1837:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1837:8:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1847:18:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 340,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1828:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 345,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1828:38:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 346,
												"nodeType": "ExpressionStatement",
												"src": "1828:38:2"
											}
										]
									},
									"documentation": {
										"id": 337,
										"nodeType": "StructuredDocumentation",
										"src": "1705:57:2",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 348,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "1776:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:2"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1818:0:2"
									},
									"scope": 392,
									"src": "1767:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 358,
										"nodeType": "Block",
										"src": "1993:58:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 353,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 336,
																"src": "2011:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 354,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2011:8:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 355,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2021:22:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 352,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2003:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2003:41:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 357,
												"nodeType": "ExpressionStatement",
												"src": "2003:41:2"
											}
										]
									},
									"documentation": {
										"id": 349,
										"nodeType": "StructuredDocumentation",
										"src": "1879:61:2",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 359,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "1954:14:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1968:2:2"
									},
									"returnParameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1993:0:2"
									},
									"scope": 392,
									"src": "1945:106:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 374,
										"nodeType": "Block",
										"src": "2235:66:2",
										"statements": [
											{
												"expression": {
													"id": 367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 365,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2245:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2255:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2245:14:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 368,
												"nodeType": "ExpressionStatement",
												"src": "2245:14:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 370,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "2281:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 371,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2281:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 369,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 295,
														"src": "2274:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2274:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 373,
												"nodeType": "EmitStatement",
												"src": "2269:25:2"
											}
										]
									},
									"documentation": {
										"id": 360,
										"nodeType": "StructuredDocumentation",
										"src": "2057:124:2",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 375,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 363,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 362,
												"name": "whenNotPaused",
												"nameLocations": [
													"2221:13:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 319,
												"src": "2221:13:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2221:13:2"
										}
									],
									"name": "_pause",
									"nameLocation": "2195:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2201:2:2"
									},
									"returnParameters": {
										"id": 364,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2235:0:2"
									},
									"scope": 392,
									"src": "2186:115:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 390,
										"nodeType": "Block",
										"src": "2481:69:2",
										"statements": [
											{
												"expression": {
													"id": 383,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 381,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 302,
														"src": "2491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 382,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2501:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2491:15:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 384,
												"nodeType": "ExpressionStatement",
												"src": "2491:15:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 386,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "2530:10:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2530:12:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 385,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 300,
														"src": "2521:8:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 388,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2521:22:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 389,
												"nodeType": "EmitStatement",
												"src": "2516:27:2"
											}
										]
									},
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2307:121:2",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 391,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 379,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 378,
												"name": "whenPaused",
												"nameLocations": [
													"2470:10:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 327,
												"src": "2470:10:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2470:10:2"
										}
									],
									"name": "_unpause",
									"nameLocation": "2442:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 377,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2450:2:2"
									},
									"returnParameters": {
										"id": 380,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2481:0:2"
									},
									"scope": 392,
									"src": "2433:117:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 393,
							"src": "602:1950:2",
							"usedErrors": [],
							"usedEvents": [
								295,
								300
							]
						}
					],
					"src": "105:2448:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							457
						]
					},
					"id": 458,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 394,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "112:23:3"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 395,
								"nodeType": "StructuredDocumentation",
								"src": "137:750:3",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 457,
							"linearizedBaseContracts": [
								457
							],
							"name": "ReentrancyGuard",
							"nameLocation": "906:15:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 398,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1701:12:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1676:41:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 396,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1676:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 397,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1716:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 401,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1748:8:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1723:37:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 399,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1723:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 400,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1759:1:3",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 403,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1783:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 457,
									"src": "1767:23:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 402,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1767:7:3",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 410,
										"nodeType": "Block",
										"src": "1811:39:3",
										"statements": [
											{
												"expression": {
													"id": 408,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 406,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "1821:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 407,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "1831:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1821:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 409,
												"nodeType": "ExpressionStatement",
												"src": "1821:22:3"
											}
										]
									},
									"id": 411,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1808:2:3"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1811:0:3"
									},
									"scope": 457,
									"src": "1797:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 421,
										"nodeType": "Block",
										"src": "2251:79:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 414,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 437,
														"src": "2261:19:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2261:21:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "2261:21:3"
											},
											{
												"id": 417,
												"nodeType": "PlaceholderStatement",
												"src": "2292:1:3"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 418,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 445,
														"src": "2303:18:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2303:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 420,
												"nodeType": "ExpressionStatement",
												"src": "2303:20:3"
											}
										]
									},
									"documentation": {
										"id": 412,
										"nodeType": "StructuredDocumentation",
										"src": "1856:366:3",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 422,
									"name": "nonReentrant",
									"nameLocation": "2236:12:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2248:2:3"
									},
									"src": "2227:103:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 436,
										"nodeType": "Block",
										"src": "2375:248:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 426,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2468:7:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 427,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 401,
																"src": "2479:8:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2468:19:3",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 429,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2489:33:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 425,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2460:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2460:63:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 431,
												"nodeType": "ExpressionStatement",
												"src": "2460:63:3"
											},
											{
												"expression": {
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 432,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2598:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 433,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "2608:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2598:18:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 435,
												"nodeType": "ExpressionStatement",
												"src": "2598:18:3"
											}
										]
									},
									"id": 437,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2345:19:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 423,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2364:2:3"
									},
									"returnParameters": {
										"id": 424,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:0:3"
									},
									"scope": 457,
									"src": "2336:287:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 444,
										"nodeType": "Block",
										"src": "2667:171:3",
										"statements": [
											{
												"expression": {
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 440,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "2809:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 441,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 398,
														"src": "2819:12:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2809:22:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 443,
												"nodeType": "ExpressionStatement",
												"src": "2809:22:3"
											}
										]
									},
									"id": 445,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2638:18:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2656:2:3"
									},
									"returnParameters": {
										"id": 439,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2667:0:3"
									},
									"scope": 457,
									"src": "2629:209:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 455,
										"nodeType": "Block",
										"src": "3081:43:3",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 453,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 451,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 403,
														"src": "3098:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 452,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 401,
														"src": "3109:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3098:19:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 450,
												"id": 454,
												"nodeType": "Return",
												"src": "3091:26:3"
											}
										]
									},
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "2844:168:3",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 456,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3026:23:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3049:2:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 449,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 456,
												"src": "3075:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 448,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3075:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3074:6:3"
									},
									"scope": 457,
									"src": "3017:107:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 458,
							"src": "888:2238:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:3015:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts/token/ERC20/ERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
					"exportedSymbols": {
						"Context": [
							1152
						],
						"ERC20": [
							972
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1122
						]
					},
					"id": 973,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 459,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "./IERC20.sol",
							"id": 461,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1051,
							"src": "131:36:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 460,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "139:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "./extensions/IERC20Metadata.sol",
							"id": 463,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1123,
							"src": "168:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 462,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1122,
										"src": "176:14:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../utils/Context.sol",
							"id": 465,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 1153,
							"src": "232:48:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 464,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1152,
										"src": "240:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC6093.sol",
							"file": "../../interfaces/draft-IERC6093.sol",
							"id": 467,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 973,
							"sourceUnit": 285,
							"src": "281:65:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 466,
										"name": "IERC20Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 189,
										"src": "289:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 469,
										"name": "Context",
										"nameLocations": [
											"1133:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1152,
										"src": "1133:7:4"
									},
									"id": 470,
									"nodeType": "InheritanceSpecifier",
									"src": "1133:7:4"
								},
								{
									"baseName": {
										"id": 471,
										"name": "IERC20",
										"nameLocations": [
											"1142:6:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "1142:6:4"
									},
									"id": 472,
									"nodeType": "InheritanceSpecifier",
									"src": "1142:6:4"
								},
								{
									"baseName": {
										"id": 473,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1150:14:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1122,
										"src": "1150:14:4"
									},
									"id": 474,
									"nodeType": "InheritanceSpecifier",
									"src": "1150:14:4"
								},
								{
									"baseName": {
										"id": 475,
										"name": "IERC20Errors",
										"nameLocations": [
											"1166:12:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 189,
										"src": "1166:12:4"
									},
									"id": 476,
									"nodeType": "InheritanceSpecifier",
									"src": "1166:12:4"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 468,
								"nodeType": "StructuredDocumentation",
								"src": "348:757:4",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC-20\n applications."
							},
							"fullyImplemented": true,
							"id": 972,
							"linearizedBaseContracts": [
								972,
								189,
								1122,
								1050,
								1152
							],
							"name": "ERC20",
							"nameLocation": "1124:5:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 480,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1229:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1185:53:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 479,
										"keyName": "account",
										"keyNameLocation": "1201:7:4",
										"keyType": {
											"id": 477,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1193:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1185:35:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 478,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1212:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 486,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1317:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1245:83:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 485,
										"keyName": "account",
										"keyNameLocation": "1261:7:4",
										"keyType": {
											"id": 481,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1253:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1245:63:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 484,
											"keyName": "spender",
											"keyNameLocation": "1288:7:4",
											"keyType": {
												"id": 482,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1280:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1272:35:4",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 483,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1299:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 488,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1351:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1335:28:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 487,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1335:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 490,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1385:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1370:20:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 489,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1370:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 492,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1411:7:4",
									"nodeType": "VariableDeclaration",
									"scope": 972,
									"src": "1396:22:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 491,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1396:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 508,
										"nodeType": "Block",
										"src": "1657:57:4",
										"statements": [
											{
												"expression": {
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 500,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 490,
														"src": "1667:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 501,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 495,
														"src": "1675:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1667:13:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 503,
												"nodeType": "ExpressionStatement",
												"src": "1667:13:4"
											},
											{
												"expression": {
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 504,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 492,
														"src": "1690:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 505,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 497,
														"src": "1700:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1690:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 507,
												"nodeType": "ExpressionStatement",
												"src": "1690:17:4"
											}
										]
									},
									"documentation": {
										"id": 493,
										"nodeType": "StructuredDocumentation",
										"src": "1425:171:4",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 509,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 495,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1627:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1613:19:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 494,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1613:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1648:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 509,
												"src": "1634:21:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 496,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1634:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:44:4"
									},
									"returnParameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1657:0:4"
									},
									"scope": 972,
									"src": "1601:113:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1109
									],
									"body": {
										"id": 517,
										"nodeType": "Block",
										"src": "1839:29:4",
										"statements": [
											{
												"expression": {
													"id": 515,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 490,
													"src": "1856:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 514,
												"id": 516,
												"nodeType": "Return",
												"src": "1849:12:4"
											}
										]
									},
									"documentation": {
										"id": 510,
										"nodeType": "StructuredDocumentation",
										"src": "1720:54:4",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 518,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1788:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:2:4"
									},
									"returnParameters": {
										"id": 514,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 513,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 518,
												"src": "1824:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 512,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1824:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1823:15:4"
									},
									"scope": 972,
									"src": "1779:89:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1115
									],
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "2043:31:4",
										"statements": [
											{
												"expression": {
													"id": 524,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 492,
													"src": "2060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 523,
												"id": 525,
												"nodeType": "Return",
												"src": "2053:14:4"
											}
										]
									},
									"documentation": {
										"id": 519,
										"nodeType": "StructuredDocumentation",
										"src": "1874:102:4",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "1990:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 520,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1996:2:4"
									},
									"returnParameters": {
										"id": 523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 522,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "2028:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 521,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2028:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2027:15:4"
									},
									"scope": 972,
									"src": "1981:93:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1121
									],
									"body": {
										"id": 535,
										"nodeType": "Block",
										"src": "2763:26:4",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 533,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2780:2:4",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 532,
												"id": 534,
												"nodeType": "Return",
												"src": "2773:9:4"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "2080:622:4",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 536,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2716:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 529,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2724:2:4"
									},
									"returnParameters": {
										"id": 532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "2756:5:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 530,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2756:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2755:7:4"
									},
									"scope": 972,
									"src": "2707:82:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										999
									],
									"body": {
										"id": 544,
										"nodeType": "Block",
										"src": "2910:36:4",
										"statements": [
											{
												"expression": {
													"id": 542,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 488,
													"src": "2927:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 541,
												"id": 543,
												"nodeType": "Return",
												"src": "2920:19:4"
											}
										]
									},
									"documentation": {
										"id": 537,
										"nodeType": "StructuredDocumentation",
										"src": "2795:49:4",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 545,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "2858:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 538,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2869:2:4"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 540,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 545,
												"src": "2901:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 539,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:9:4"
									},
									"scope": 972,
									"src": "2849:97:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1007
									],
									"body": {
										"id": 557,
										"nodeType": "Block",
										"src": "3078:42:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 553,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 480,
														"src": "3095:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 555,
													"indexExpression": {
														"id": 554,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 548,
														"src": "3105:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3095:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 552,
												"id": 556,
												"nodeType": "Return",
												"src": "3088:25:4"
											}
										]
									},
									"documentation": {
										"id": 546,
										"nodeType": "StructuredDocumentation",
										"src": "2952:47:4",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 558,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3013:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 549,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 548,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3031:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3023:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3023:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3022:17:4"
									},
									"returnParameters": {
										"id": 552,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 551,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 558,
												"src": "3069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 550,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3069:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3068:9:4"
									},
									"scope": 972,
									"src": "3004:116:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1017
									],
									"body": {
										"id": 581,
										"nodeType": "Block",
										"src": "3390:103:4",
										"statements": [
											{
												"assignments": [
													569
												],
												"declarations": [
													{
														"constant": false,
														"id": 569,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3408:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 581,
														"src": "3400:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 568,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3400:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 572,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 570,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "3416:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 571,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3416:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3400:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 574,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 569,
															"src": "3448:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 575,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 561,
															"src": "3455:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 576,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 563,
															"src": "3459:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 573,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "3438:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3438:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 578,
												"nodeType": "ExpressionStatement",
												"src": "3438:27:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 579,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3482:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 567,
												"id": 580,
												"nodeType": "Return",
												"src": "3475:11:4"
											}
										]
									},
									"documentation": {
										"id": 559,
										"nodeType": "StructuredDocumentation",
										"src": "3126:184:4",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 582,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3324:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 561,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3341:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3333:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 560,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3333:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 563,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3353:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3345:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3345:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3332:27:4"
									},
									"returnParameters": {
										"id": 567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 566,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 582,
												"src": "3384:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 565,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3384:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3383:6:4"
									},
									"scope": 972,
									"src": "3315:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1027
									],
									"body": {
										"id": 598,
										"nodeType": "Block",
										"src": "3640:51:4",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 592,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 486,
															"src": "3657:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 594,
														"indexExpression": {
															"id": 593,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 585,
															"src": "3669:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3657:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 596,
													"indexExpression": {
														"id": 595,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 587,
														"src": "3676:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3657:27:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 591,
												"id": 597,
												"nodeType": "Return",
												"src": "3650:34:4"
											}
										]
									},
									"documentation": {
										"id": 583,
										"nodeType": "StructuredDocumentation",
										"src": "3499:47:4",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 599,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3560:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3578:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3570:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 584,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3570:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3593:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3585:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 586,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3585:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3569:32:4"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 599,
												"src": "3631:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3631:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3630:9:4"
									},
									"scope": 972,
									"src": "3551:140:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1037
									],
									"body": {
										"id": 622,
										"nodeType": "Block",
										"src": "4077:107:4",
										"statements": [
											{
												"assignments": [
													610
												],
												"declarations": [
													{
														"constant": false,
														"id": 610,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4095:5:4",
														"nodeType": "VariableDeclaration",
														"scope": 622,
														"src": "4087:13:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 609,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4087:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 613,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 611,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "4103:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4103:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4087:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 615,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 610,
															"src": "4134:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 616,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 602,
															"src": "4141:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 617,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 604,
															"src": "4150:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 614,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 863,
														"src": "4125:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 618,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4125:31:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 619,
												"nodeType": "ExpressionStatement",
												"src": "4125:31:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 620,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4173:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 608,
												"id": 621,
												"nodeType": "Return",
												"src": "4166:11:4"
											}
										]
									},
									"documentation": {
										"id": 600,
										"nodeType": "StructuredDocumentation",
										"src": "3697:296:4",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 623,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4007:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 605,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 602,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4023:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4015:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 601,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4015:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 604,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4040:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4032:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 603,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4032:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4014:32:4"
									},
									"returnParameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 607,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 623,
												"src": "4071:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 606,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4071:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4070:6:4"
									},
									"scope": 972,
									"src": "3998:186:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1049
									],
									"body": {
										"id": 654,
										"nodeType": "Block",
										"src": "4869:151:4",
										"statements": [
											{
												"assignments": [
													636
												],
												"declarations": [
													{
														"constant": false,
														"id": 636,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "4887:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 654,
														"src": "4879:15:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 635,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4879:7:4",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 639,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 637,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1134,
														"src": "4897:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 638,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4897:12:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4879:30:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 641,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4935:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 642,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4941:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 643,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4950:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 640,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "4919:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 644,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4919:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 645,
												"nodeType": "ExpressionStatement",
												"src": "4919:37:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 647,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 626,
															"src": "4976:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 648,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 628,
															"src": "4982:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 649,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 630,
															"src": "4986:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 646,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4966:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 650,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4966:26:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 651,
												"nodeType": "ExpressionStatement",
												"src": "4966:26:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5009:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 634,
												"id": 653,
												"nodeType": "Return",
												"src": "5002:11:4"
											}
										]
									},
									"documentation": {
										"id": 624,
										"nodeType": "StructuredDocumentation",
										"src": "4190:581:4",
										"text": " @dev See {IERC20-transferFrom}.\n Skips emitting an {Approval} event indicating an allowance update. This is not\n required by the ERC. See {xref-ERC20-_approve-address-address-uint256-bool-}[_approve].\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 655,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4785:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 626,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4806:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4798:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 625,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4798:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 628,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4820:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4812:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4812:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 630,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4832:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4824:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4797:41:4"
									},
									"returnParameters": {
										"id": 634,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 633,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 655,
												"src": "4863:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 632,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4863:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4862:6:4"
									},
									"scope": 972,
									"src": "4776:244:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 701,
										"nodeType": "Block",
										"src": "5462:231:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 665,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "5476:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5492:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 667,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5484:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 666,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5484:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5484:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5476:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 679,
												"nodeType": "IfStatement",
												"src": "5472:86:4",
												"trueBody": {
													"id": 678,
													"nodeType": "Block",
													"src": "5496:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 674,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5544:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 673,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5536:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 672,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5536:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5536:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 671,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "5517:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 676,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5517:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 677,
															"nodeType": "RevertStatement",
															"src": "5510:37:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 680,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 660,
														"src": "5571:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 683,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5585:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 682,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5577:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 681,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5577:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 684,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5577:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5571:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 694,
												"nodeType": "IfStatement",
												"src": "5567:86:4",
												"trueBody": {
													"id": 693,
													"nodeType": "Block",
													"src": "5589:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 689,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5639:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 688,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5631:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 687,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5631:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 690,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5631:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 686,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "5610:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 691,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5610:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 692,
															"nodeType": "RevertStatement",
															"src": "5603:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 696,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 658,
															"src": "5670:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 697,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 660,
															"src": "5676:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 698,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 662,
															"src": "5680:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 695,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "5662:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 699,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5662:24:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 700,
												"nodeType": "ExpressionStatement",
												"src": "5662:24:4"
											}
										]
									},
									"documentation": {
										"id": 656,
										"nodeType": "StructuredDocumentation",
										"src": "5026:362:4",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 702,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5402:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5420:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5412:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 657,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 660,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5434:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5426:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 659,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5446:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 702,
												"src": "5438:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5438:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:41:4"
									},
									"returnParameters": {
										"id": 664,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5462:0:4"
									},
									"scope": 972,
									"src": "5393:300:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 778,
										"nodeType": "Block",
										"src": "6083:1032:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 717,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 712,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 705,
														"src": "6097:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 715,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6113:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 714,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6105:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 713,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6105:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 716,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6105:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6097:18:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 749,
													"nodeType": "Block",
													"src": "6271:362:4",
													"statements": [
														{
															"assignments": [
																724
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 724,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6293:11:4",
																	"nodeType": "VariableDeclaration",
																	"scope": 749,
																	"src": "6285:19:4",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 723,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6285:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 728,
															"initialValue": {
																"baseExpression": {
																	"id": 725,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 480,
																	"src": "6307:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 727,
																"indexExpression": {
																	"id": 726,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 705,
																	"src": "6317:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6307:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6285:37:4"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 731,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 729,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 724,
																	"src": "6340:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 730,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6354:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6340:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 739,
															"nodeType": "IfStatement",
															"src": "6336:115:4",
															"trueBody": {
																"id": 738,
																"nodeType": "Block",
																"src": "6361:90:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 733,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 705,
																					"src": "6411:4:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 734,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 724,
																					"src": "6417:11:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 735,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 709,
																					"src": "6430:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 732,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 159,
																				"src": "6386:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6386:50:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 737,
																		"nodeType": "RevertStatement",
																		"src": "6379:57:4"
																	}
																]
															}
														},
														{
															"id": 748,
															"nodeType": "UncheckedBlock",
															"src": "6464:159:4",
															"statements": [
																{
																	"expression": {
																		"id": 746,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 740,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "6571:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 742,
																			"indexExpression": {
																				"id": 741,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 705,
																				"src": "6581:4:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6571:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 745,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 743,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 724,
																				"src": "6589:11:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 744,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 709,
																				"src": "6603:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6589:19:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6571:37:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 747,
																	"nodeType": "ExpressionStatement",
																	"src": "6571:37:4"
																}
															]
														}
													]
												},
												"id": 750,
												"nodeType": "IfStatement",
												"src": "6093:540:4",
												"trueBody": {
													"id": 722,
													"nodeType": "Block",
													"src": "6117:148:4",
													"statements": [
														{
															"expression": {
																"id": 720,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 718,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 488,
																	"src": "6233:12:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 719,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 709,
																	"src": "6249:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6233:21:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 721,
															"nodeType": "ExpressionStatement",
															"src": "6233:21:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 756,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 751,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 707,
														"src": "6647:2:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 754,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6661:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 753,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 752,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6653:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 755,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6653:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6647:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 770,
													"nodeType": "Block",
													"src": "6862:206:4",
													"statements": [
														{
															"id": 769,
															"nodeType": "UncheckedBlock",
															"src": "6876:182:4",
															"statements": [
																{
																	"expression": {
																		"id": 767,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 763,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 480,
																				"src": "7021:9:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 765,
																			"indexExpression": {
																				"id": 764,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 707,
																				"src": "7031:2:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7021:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 766,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "7038:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7021:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 768,
																	"nodeType": "ExpressionStatement",
																	"src": "7021:22:4"
																}
															]
														}
													]
												},
												"id": 771,
												"nodeType": "IfStatement",
												"src": "6643:425:4",
												"trueBody": {
													"id": 762,
													"nodeType": "Block",
													"src": "6665:191:4",
													"statements": [
														{
															"id": 761,
															"nodeType": "UncheckedBlock",
															"src": "6679:167:4",
															"statements": [
																{
																	"expression": {
																		"id": 759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 757,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 488,
																			"src": "6810:12:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 758,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 709,
																			"src": "6826:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6810:21:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 760,
																	"nodeType": "ExpressionStatement",
																	"src": "6810:21:4"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 773,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 705,
															"src": "7092:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 774,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 707,
															"src": "7098:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 775,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 709,
															"src": "7102:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 772,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 984,
														"src": "7083:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7083:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 777,
												"nodeType": "EmitStatement",
												"src": "7078:30:4"
											}
										]
									},
									"documentation": {
										"id": 703,
										"nodeType": "StructuredDocumentation",
										"src": "5699:304:4",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 779,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6017:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6033:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6025:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 704,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6025:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 707,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6047:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6039:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 706,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6039:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 709,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6059:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 779,
												"src": "6051:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 708,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6051:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6024:41:4"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6083:0:4"
									},
									"scope": 972,
									"src": "6008:1107:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 811,
										"nodeType": "Block",
										"src": "7514:152:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 792,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 787,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 782,
														"src": "7528:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 790,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7547:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 789,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7539:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 788,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7539:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 791,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7539:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7528:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 801,
												"nodeType": "IfStatement",
												"src": "7524:91:4",
												"trueBody": {
													"id": 800,
													"nodeType": "Block",
													"src": "7551:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 796,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7601:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 795,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7593:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 794,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7593:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 797,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7593:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 793,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 169,
																	"src": "7572:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7572:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 799,
															"nodeType": "RevertStatement",
															"src": "7565:39:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7640:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 804,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7632:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 803,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7632:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 806,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7632:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 807,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 782,
															"src": "7644:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 808,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 784,
															"src": "7653:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 802,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "7624:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7624:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 810,
												"nodeType": "ExpressionStatement",
												"src": "7624:35:4"
											}
										]
									},
									"documentation": {
										"id": 780,
										"nodeType": "StructuredDocumentation",
										"src": "7121:332:4",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 812,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7467:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 785,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 782,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7481:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7473:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 781,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7473:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 784,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7498:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 812,
												"src": "7490:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 783,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7490:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7472:32:4"
									},
									"returnParameters": {
										"id": 786,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7514:0:4"
									},
									"scope": 972,
									"src": "7458:208:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 844,
										"nodeType": "Block",
										"src": "8040:150:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 825,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 820,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 815,
														"src": "8054:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8073:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 822,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8065:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 821,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8065:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 824,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8065:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8054:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 834,
												"nodeType": "IfStatement",
												"src": "8050:89:4",
												"trueBody": {
													"id": 833,
													"nodeType": "Block",
													"src": "8077:62:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 829,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8125:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8117:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 827,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8117:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 830,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8117:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 826,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 164,
																	"src": "8098:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 831,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8098:30:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 832,
															"nodeType": "RevertStatement",
															"src": "8091:37:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 836,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 815,
															"src": "8156:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8173:1:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 838,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8165:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 837,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8165:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 840,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8165:10:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 841,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 817,
															"src": "8177:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 835,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 779,
														"src": "8148:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 842,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8148:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 843,
												"nodeType": "ExpressionStatement",
												"src": "8148:35:4"
											}
										]
									},
									"documentation": {
										"id": 813,
										"nodeType": "StructuredDocumentation",
										"src": "7672:307:4",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 845,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "7993:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 815,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8007:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "7999:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7999:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8024:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "8016:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7998:32:4"
									},
									"returnParameters": {
										"id": 819,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8040:0:4"
									},
									"scope": 972,
									"src": "7984:206:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 862,
										"nodeType": "Block",
										"src": "8800:54:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 856,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 848,
															"src": "8819:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 857,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 850,
															"src": "8826:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 858,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 852,
															"src": "8835:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 859,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8842:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 855,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															863,
															923
														],
														"referencedDeclaration": 923,
														"src": "8810:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 860,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8810:37:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 861,
												"nodeType": "ExpressionStatement",
												"src": "8810:37:4"
											}
										]
									},
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "8196:525:4",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 863,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8735:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8752:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8744:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8744:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 850,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8767:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8759:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 849,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8759:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 852,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8784:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "8776:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8776:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8743:47:4"
									},
									"returnParameters": {
										"id": 854,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8800:0:4"
									},
									"scope": 972,
									"src": "8726:128:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 922,
										"nodeType": "Block",
										"src": "9799:334:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 875,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 866,
														"src": "9813:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 878,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9830:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 877,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9822:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 876,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9822:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 879,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9822:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9813:19:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 889,
												"nodeType": "IfStatement",
												"src": "9809:89:4",
												"trueBody": {
													"id": 888,
													"nodeType": "Block",
													"src": "9834:64:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 884,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9884:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9876:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 882,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9876:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 885,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9876:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 881,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 183,
																	"src": "9855:20:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 886,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9855:32:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 887,
															"nodeType": "RevertStatement",
															"src": "9848:39:4"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 890,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 868,
														"src": "9911:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 893,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9930:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 892,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9922:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 891,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9922:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 894,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9922:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9911:21:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 904,
												"nodeType": "IfStatement",
												"src": "9907:90:4",
												"trueBody": {
													"id": 903,
													"nodeType": "Block",
													"src": "9934:63:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 899,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "9983:1:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 898,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "9975:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 897,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "9975:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 900,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "9975:10:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 896,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 188,
																	"src": "9955:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9955:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 902,
															"nodeType": "RevertStatement",
															"src": "9948:38:4"
														}
													]
												}
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 905,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 486,
																"src": "10006:11:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 908,
															"indexExpression": {
																"id": 906,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 866,
																"src": "10018:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10006:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 909,
														"indexExpression": {
															"id": 907,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 868,
															"src": "10025:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10006:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 910,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "10036:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10006:35:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "10006:35:4"
											},
											{
												"condition": {
													"id": 913,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 872,
													"src": "10055:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 921,
												"nodeType": "IfStatement",
												"src": "10051:76:4",
												"trueBody": {
													"id": 920,
													"nodeType": "Block",
													"src": "10066:61:4",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 915,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 866,
																		"src": "10094:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 916,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 868,
																		"src": "10101:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 917,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 870,
																		"src": "10110:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 914,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 993,
																	"src": "10085:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 918,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10085:31:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 919,
															"nodeType": "EmitStatement",
															"src": "10080:36:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "8860:836:4",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```solidity\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 923,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9710:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9727:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9719:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9719:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9742:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9734:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9734:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9759:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9751:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9751:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 872,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9771:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 923,
												"src": "9766:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 871,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9766:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9718:63:4"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9799:0:4"
									},
									"scope": 972,
									"src": "9701:432:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "10504:388:4",
										"statements": [
											{
												"assignments": [
													934
												],
												"declarations": [
													{
														"constant": false,
														"id": 934,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10522:16:4",
														"nodeType": "VariableDeclaration",
														"scope": 970,
														"src": "10514:24:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 933,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10514:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 939,
												"initialValue": {
													"arguments": [
														{
															"id": 936,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 926,
															"src": "10551:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 937,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 928,
															"src": "10558:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 935,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 599,
														"src": "10541:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 938,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10541:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10514:52:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 940,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 934,
														"src": "10580:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 943,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10605:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 942,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10605:7:4",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 941,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10600:4:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 944,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10600:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 945,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10614:3:4",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10600:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10580:37:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "10576:310:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "10619:267:4",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 949,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 947,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 934,
																	"src": "10637:16:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 948,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 930,
																	"src": "10656:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10637:24:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 957,
															"nodeType": "IfStatement",
															"src": "10633:130:4",
															"trueBody": {
																"id": 956,
																"nodeType": "Block",
																"src": "10663:100:4",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 951,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 928,
																					"src": "10715:7:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 952,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10724:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 953,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10742:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 950,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "10688:26:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
																					"typeString": "function (address,uint256,uint256) pure"
																				}
																			},
																			"id": 954,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10688:60:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 955,
																		"nodeType": "RevertStatement",
																		"src": "10681:67:4"
																	}
																]
															}
														},
														{
															"id": 967,
															"nodeType": "UncheckedBlock",
															"src": "10776:100:4",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 959,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 926,
																				"src": "10813:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 960,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 928,
																				"src": "10820:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 963,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 961,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 934,
																					"src": "10829:16:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 962,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 930,
																					"src": "10848:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10829:24:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 964,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10855:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 958,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				863,
																				923
																			],
																			"referencedDeclaration": 923,
																			"src": "10804:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 965,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10804:57:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 966,
																	"nodeType": "ExpressionStatement",
																	"src": "10804:57:4"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 924,
										"nodeType": "StructuredDocumentation",
										"src": "10139:271:4",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10424:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 931,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10448:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10440:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 925,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10440:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10463:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10455:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10455:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10480:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 971,
												"src": "10472:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 929,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10472:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10439:47:4"
									},
									"returnParameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10504:0:4"
									},
									"scope": 972,
									"src": "10415:477:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 973,
							"src": "1106:9788:4",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "105:10790:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						]
					},
					"id": 1051,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 974,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 975,
								"nodeType": "StructuredDocumentation",
								"src": "132:71:5",
								"text": " @dev Interface of the ERC-20 standard as defined in the ERC."
							},
							"fullyImplemented": false,
							"id": 1050,
							"linearizedBaseContracts": [
								1050
							],
							"name": "IERC20",
							"nameLocation": "214:6:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 976,
										"nodeType": "StructuredDocumentation",
										"src": "227:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 984,
									"name": "Transfer",
									"nameLocation": "396:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 978,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "421:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "405:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "405:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 980,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "443:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "427:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 979,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "427:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 982,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "455:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 984,
												"src": "447:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 981,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "447:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "404:57:5"
									},
									"src": "390:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 985,
										"nodeType": "StructuredDocumentation",
										"src": "468:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 993,
									"name": "Approval",
									"nameLocation": "627:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 987,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "652:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "636:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 989,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "675:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "659:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 988,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "659:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 991,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "692:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 993,
												"src": "684:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 990,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "635:63:5"
									},
									"src": "621:78:5"
								},
								{
									"documentation": {
										"id": 994,
										"nodeType": "StructuredDocumentation",
										"src": "705:65:5",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "784:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 995,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "795:2:5"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "821:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 996,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "821:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "820:9:5"
									},
									"scope": 1050,
									"src": "775:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "836:71:5",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "931:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:5"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1005,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "971:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1004,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:5"
									},
									"scope": 1050,
									"src": "912:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "986:213:5",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1242:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1234:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1011,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:27:5"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "1267:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1267:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1266:6:5"
									},
									"scope": 1050,
									"src": "1204:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "1279:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1027,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1557:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1023,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1575:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1567:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1567:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1590:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1582:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1582:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1566:32:5"
									},
									"returnParameters": {
										"id": 1026,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1025,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1027,
												"src": "1622:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1024,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1622:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1621:9:5"
									},
									"scope": 1050,
									"src": "1548:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1028,
										"nodeType": "StructuredDocumentation",
										"src": "1637:667:5",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1037,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2318:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1030,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2334:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2326:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1029,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2326:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2351:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2343:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2343:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2325:32:5"
									},
									"returnParameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1035,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "2376:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1034,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2376:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2375:6:5"
									},
									"scope": 1050,
									"src": "2309:73:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1038,
										"nodeType": "StructuredDocumentation",
										"src": "2388:297:5",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1049,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2699:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1040,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2720:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2712:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1039,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2712:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2734:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2726:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1041,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2726:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2746:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2738:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1043,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2738:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2711:41:5"
									},
									"returnParameters": {
										"id": 1048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1047,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1049,
												"src": "2771:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1046,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2771:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2770:6:5"
									},
									"scope": 1050,
									"src": "2690:87:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1051,
							"src": "204:2575:5",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "106:2674:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
					"exportedSymbols": {
						"Context": [
							1152
						],
						"ERC20": [
							972
						],
						"ERC20Burnable": [
							1096
						]
					},
					"id": 1097,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1052,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "124:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "../ERC20.sol",
							"id": 1054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 973,
							"src": "150:35:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1053,
										"name": "ERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 972,
										"src": "158:5:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../../../utils/Context.sol",
							"id": 1056,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1097,
							"sourceUnit": 1153,
							"src": "186:51:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1055,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1152,
										"src": "194:7:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1058,
										"name": "Context",
										"nameLocations": [
											"483:7:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1152,
										"src": "483:7:6"
									},
									"id": 1059,
									"nodeType": "InheritanceSpecifier",
									"src": "483:7:6"
								},
								{
									"baseName": {
										"id": 1060,
										"name": "ERC20",
										"nameLocations": [
											"492:5:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "492:5:6"
									},
									"id": 1061,
									"nodeType": "InheritanceSpecifier",
									"src": "492:5:6"
								}
							],
							"canonicalName": "ERC20Burnable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1057,
								"nodeType": "StructuredDocumentation",
								"src": "239:208:6",
								"text": " @dev Extension of {ERC20} that allows token holders to destroy both their own\n tokens and those that they have an allowance for, in a way that can be\n recognized off-chain (via event analysis)."
							},
							"fullyImplemented": true,
							"id": 1096,
							"linearizedBaseContracts": [
								1096,
								972,
								189,
								1122,
								1050,
								1152
							],
							"name": "ERC20Burnable",
							"nameLocation": "466:13:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1073,
										"nodeType": "Block",
										"src": "662:43:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1068,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "678:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1069,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "678:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1070,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1064,
															"src": "692:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1067,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "672:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1071,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "672:26:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1072,
												"nodeType": "ExpressionStatement",
												"src": "672:26:6"
											}
										]
									},
									"documentation": {
										"id": 1062,
										"nodeType": "StructuredDocumentation",
										"src": "504:109:6",
										"text": " @dev Destroys a `value` amount of tokens from the caller.\n See {ERC20-_burn}."
									},
									"functionSelector": "42966c68",
									"id": 1074,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "627:4:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1065,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1064,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "640:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "632:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1063,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "632:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "631:15:6"
									},
									"returnParameters": {
										"id": 1066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "662:0:6"
									},
									"scope": 1096,
									"src": "618:87:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1094,
										"nodeType": "Block",
										"src": "1086:93:6",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1083,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "1112:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1084,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1134,
																"src": "1121:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1085,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1121:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1086,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "1135:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1082,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "1096:15:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1096:45:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "1096:45:6"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1090,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1077,
															"src": "1157:7:6",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1091,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1079,
															"src": "1166:5:6",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1089,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "1151:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1092,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1151:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1093,
												"nodeType": "ExpressionStatement",
												"src": "1151:21:6"
											}
										]
									},
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "711:305:6",
										"text": " @dev Destroys a `value` amount of tokens from `account`, deducting from\n the caller's allowance.\n See {ERC20-_burn} and {ERC20-allowance}.\n Requirements:\n - the caller must have allowance for ``accounts``'s tokens of at least\n `value`."
									},
									"functionSelector": "79cc6790",
									"id": 1095,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burnFrom",
									"nameLocation": "1030:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1080,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1077,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1047:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1039:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1076,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1039:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1079,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1064:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1095,
												"src": "1056:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1078,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1056:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1038:32:6"
									},
									"returnParameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1086:0:6"
									},
									"scope": 1096,
									"src": "1021:158:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1097,
							"src": "448:733:6",
							"usedErrors": [
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "124:1058:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							1050
						],
						"IERC20Metadata": [
							1122
						]
					},
					"id": 1123,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1098,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 1100,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1123,
							"sourceUnit": 1051,
							"src": "151:37:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1099,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1050,
										"src": "159:6:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1102,
										"name": "IERC20",
										"nameLocations": [
											"306:6:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1050,
										"src": "306:6:7"
									},
									"id": 1103,
									"nodeType": "InheritanceSpecifier",
									"src": "306:6:7"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1101,
								"nodeType": "StructuredDocumentation",
								"src": "190:87:7",
								"text": " @dev Interface for the optional metadata functions from the ERC-20 standard."
							},
							"fullyImplemented": false,
							"id": 1122,
							"linearizedBaseContracts": [
								1122,
								1050
							],
							"name": "IERC20Metadata",
							"nameLocation": "288:14:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "319:54:7",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 1109,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "387:4:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "391:2:7"
									},
									"returnParameters": {
										"id": 1108,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1107,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1109,
												"src": "417:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1106,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "417:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "416:15:7"
									},
									"scope": 1122,
									"src": "378:54:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1110,
										"nodeType": "StructuredDocumentation",
										"src": "438:56:7",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 1115,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "508:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1111,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "514:2:7"
									},
									"returnParameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1115,
												"src": "540:13:7",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1112,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "540:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "539:15:7"
									},
									"scope": 1122,
									"src": "499:56:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1116,
										"nodeType": "StructuredDocumentation",
										"src": "561:65:7",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 1121,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "640:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "648:2:7"
									},
									"returnParameters": {
										"id": 1120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1121,
												"src": "674:5:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 1118,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "674:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "673:7:7"
									},
									"scope": 1122,
									"src": "631:50:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1123,
							"src": "278:405:7",
							"usedErrors": [],
							"usedEvents": [
								984,
								993
							]
						}
					],
					"src": "125:559:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							1152
						]
					},
					"id": 1153,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1124,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1125,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:8",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1152,
							"linearizedBaseContracts": [
								1152
							],
							"name": "Context",
							"nameLocation": "642:7:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1133,
										"nodeType": "Block",
										"src": "718:34:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1130,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1131,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:8",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1132,
												"nodeType": "Return",
												"src": "728:17:8"
											}
										]
									},
									"id": 1134,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:8"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "709:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:8"
									},
									"scope": 1152,
									"src": "656:96:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1142,
										"nodeType": "Block",
										"src": "825:32:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1139,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:8",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:8",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1138,
												"id": 1141,
												"nodeType": "Return",
												"src": "835:15:8"
											}
										]
									},
									"id": 1143,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:8"
									},
									"returnParameters": {
										"id": 1138,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1143,
												"src": "809:14:8",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:8"
									},
									"scope": 1152,
									"src": "758:99:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1150,
										"nodeType": "Block",
										"src": "935:25:8",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1148,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:8",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1147,
												"id": 1149,
												"nodeType": "Return",
												"src": "945:8:8"
											}
										]
									},
									"id": 1151,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1144,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:8"
									},
									"returnParameters": {
										"id": 1147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1146,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1151,
												"src": "926:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:8"
									},
									"scope": 1152,
									"src": "863:97:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1153,
							"src": "624:338:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:8"
				},
				"id": 8
			},
			"contracts/GeckoGold.sol": {
				"ast": {
					"absolutePath": "contracts/GeckoGold.sol",
					"exportedSymbols": {
						"Context": [
							1152
						],
						"ERC20": [
							972
						],
						"ERC20Burnable": [
							1096
						],
						"GeckoGold": [
							1728
						],
						"IERC20": [
							1050
						],
						"IERC20Errors": [
							189
						],
						"IERC20Metadata": [
							1122
						],
						"Ownable": [
							147
						],
						"Pausable": [
							392
						],
						"ReentrancyGuard": [
							457
						]
					},
					"id": 1729,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1154,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:9"
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
							"id": 1155,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 973,
							"src": "58:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"file": "@openzeppelin/contracts/token/ERC20/extensions/ERC20Burnable.sol",
							"id": 1156,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 1097,
							"src": "114:74:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/Pausable.sol",
							"file": "@openzeppelin/contracts/security/Pausable.sol",
							"id": 1157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 393,
							"src": "189:55:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 1158,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 148,
							"src": "245:52:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 1159,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1729,
							"sourceUnit": 458,
							"src": "298:62:9",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1160,
										"name": "ERC20",
										"nameLocations": [
											"384:5:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 972,
										"src": "384:5:9"
									},
									"id": 1161,
									"nodeType": "InheritanceSpecifier",
									"src": "384:5:9"
								},
								{
									"baseName": {
										"id": 1162,
										"name": "Ownable",
										"nameLocations": [
											"391:7:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "391:7:9"
									},
									"id": 1163,
									"nodeType": "InheritanceSpecifier",
									"src": "391:7:9"
								},
								{
									"baseName": {
										"id": 1164,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"400:15:9"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 457,
										"src": "400:15:9"
									},
									"id": 1165,
									"nodeType": "InheritanceSpecifier",
									"src": "400:15:9"
								}
							],
							"canonicalName": "GeckoGold",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 1728,
							"linearizedBaseContracts": [
								1728,
								457,
								147,
								972,
								189,
								1122,
								1050,
								1152
							],
							"name": "GeckoGold",
							"nameLocation": "371:9:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "902d55a5",
									"id": 1172,
									"mutability": "constant",
									"name": "TOTAL_SUPPLY",
									"nameLocation": "509:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "485:65:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1166,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "485:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_420690000000000000000000000000_by_1",
											"typeString": "int_const 420690000000000000000000000000"
										},
										"id": 1171,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "3432305f3639305f3030305f303030",
											"id": 1167,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "524:15:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_420690000000_by_1",
												"typeString": "int_const 420690000000"
											},
											"value": "420_690_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1170,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1168,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "542:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1169,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "548:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "542:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "524:26:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_420690000000000000000000000000_by_1",
											"typeString": "int_const 420690000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "771a3a1d",
									"id": 1175,
									"mutability": "mutable",
									"name": "taxRate",
									"nameLocation": "572:7:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "557:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1173,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "557:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 1174,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "582:1:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "8fa81732",
									"id": 1178,
									"mutability": "constant",
									"name": "MAX_TAX_RATE",
									"nameLocation": "623:12:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "599:41:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1176,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "599:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130",
										"id": 1177,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "638:2:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10_by_1",
											"typeString": "int_const 10"
										},
										"value": "10"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "fc1b3113",
									"id": 1185,
									"mutability": "constant",
									"name": "MAX_TRANSFER_AMOUNT",
									"nameLocation": "704:19:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "680:66:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1179,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "680:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"commonType": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										},
										"id": 1184,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"lValueRequested": false,
										"leftExpression": {
											"hexValue": "315f3030305f303030",
											"id": 1180,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "726:9:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000_by_1",
												"typeString": "int_const 1000000"
											},
											"value": "1_000_000"
										},
										"nodeType": "BinaryOperation",
										"operator": "*",
										"rightExpression": {
											"commonType": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											},
											"id": 1183,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"leftExpression": {
												"hexValue": "3130",
												"id": 1181,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "738:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_10_by_1",
													"typeString": "int_const 10"
												},
												"value": "10"
											},
											"nodeType": "BinaryOperation",
											"operator": "**",
											"rightExpression": {
												"hexValue": "3138",
												"id": 1182,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "number",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "744:2:9",
												"typeDescriptions": {
													"typeIdentifier": "t_rational_18_by_1",
													"typeString": "int_const 18"
												},
												"value": "18"
											},
											"src": "738:8:9",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_1000000000000000000_by_1",
												"typeString": "int_const 1000000000000000000"
											}
										},
										"src": "726:20:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000000000000000000000000_by_1",
											"typeString": "int_const 1000000000000000000000000"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "819edfbc",
									"id": 1188,
									"mutability": "constant",
									"name": "MAX_ENGAGEMENT_POINTS",
									"nameLocation": "812:21:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "788:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1186,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "788:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "3130303030",
										"id": 1187,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "836:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10000"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1192,
									"mutability": "mutable",
									"name": "blacklistedAddresses",
									"nameLocation": "919:20:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "886:53:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1191,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1189,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "894:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "886:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1190,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "905:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1196,
									"mutability": "mutable",
									"name": "whitelistAddresses",
									"nameLocation": "978:18:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "945:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 1195,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1193,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "953:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "945:24:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1194,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "964:4:9",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "2576f999",
									"id": 1200,
									"mutability": "mutable",
									"name": "engagementPoints",
									"nameLocation": "1037:16:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1002:51:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1199,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1197,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1010:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1002:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1198,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1021:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1204,
									"mutability": "mutable",
									"name": "lastClaimed",
									"nameLocation": "1095:11:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1059:47:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 1203,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1201,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1067:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1059:27:9",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1202,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1078:7:9",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "d798cbd2",
									"id": 1206,
									"mutability": "mutable",
									"name": "tradingStartBlock",
									"nameLocation": "1127:17:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1112:32:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1205,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1112:7:9",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "4ada218b",
									"id": 1209,
									"mutability": "mutable",
									"name": "tradingEnabled",
									"nameLocation": "1162:14:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1150:34:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1207,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1150:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1208,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1179:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "5c975abb",
									"id": 1212,
									"mutability": "mutable",
									"name": "paused",
									"nameLocation": "1202:6:9",
									"nodeType": "VariableDeclaration",
									"scope": 1728,
									"src": "1190:26:9",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 1210,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "1190:4:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": {
										"hexValue": "66616c7365",
										"id": 1211,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "bool",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1211:5:9",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										},
										"value": "false"
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "1285:498:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1224,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1366:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1225,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1370:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1366:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1228,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1226,
																			"name": "TOTAL_SUPPLY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "1379:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3235",
																			"id": 1227,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1394:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "25"
																		},
																		"src": "1379:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1229,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1378:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1230,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1400:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1378:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1223,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1360:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1360:44:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1233,
												"nodeType": "ExpressionStatement",
												"src": "1360:44:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307830326246663142374234653946323438336234323961666241313144444234373446353532363738",
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1468:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x02bFf1B7B4e9F2483b429afbA11DDB474F552678"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1238,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1236,
																			"name": "TOTAL_SUPPLY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "1513:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3235",
																			"id": 1237,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1528:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_25_by_1",
																				"typeString": "int_const 25"
																			},
																			"value": "25"
																		},
																		"src": "1513:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1239,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1512:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1240,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1534:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1512:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1234,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1462:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1462:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1243,
												"nodeType": "ExpressionStatement",
												"src": "1462:76:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"hexValue": "307837384634386630613333323737416337666638363732663961373135393637353963663438394432",
															"id": 1245,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1665:42:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x78F48f0a33277Ac7ff8672f9a71596759cf489D2"
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1248,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1246,
																			"name": "TOTAL_SUPPLY",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1172,
																			"src": "1710:12:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"hexValue": "3530",
																			"id": 1247,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "1725:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_50_by_1",
																				"typeString": "int_const 50"
																			},
																			"value": "50"
																		},
																		"src": "1710:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1249,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1709:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"hexValue": "313030",
																"id": 1250,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1731:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															"src": "1709:25:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1244,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 812,
														"src": "1659:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1659:76:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1253,
												"nodeType": "ExpressionStatement",
												"src": "1659:76:9"
											}
										]
									},
									"id": 1255,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"hexValue": "4765636b6f476f6c64",
													"id": 1215,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1243:11:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c59d60780e01de3a0a47f8e86b18b7b3e27416563177575361705a8560fc6c38",
														"typeString": "literal_string \"GeckoGold\""
													},
													"value": "GeckoGold"
												},
												{
													"hexValue": "4745434b4f",
													"id": 1216,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1256:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_4b92f4dad9f99f416dcb59824e458e0ca0f588652c70357bb136c94fa7499f3b",
														"typeString": "literal_string \"GECKO\""
													},
													"value": "GECKO"
												}
											],
											"id": 1217,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1214,
												"name": "ERC20",
												"nameLocations": [
													"1237:5:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 972,
												"src": "1237:5:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1237:27:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1219,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1273:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1277:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "1273:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1221,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 1218,
												"name": "Ownable",
												"nameLocations": [
													"1265:7:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "1265:7:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1265:19:9"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1234:2:9"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1285:0:9"
									},
									"scope": 1728,
									"src": "1223:560:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1270,
										"nodeType": "Block",
										"src": "1918:64:9",
										"statements": [
											{
												"expression": {
													"id": 1268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1264,
															"name": "blacklistedAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1192,
															"src": "1928:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1266,
														"indexExpression": {
															"id": 1265,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1257,
															"src": "1949:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1928:30:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1267,
														"name": "_isBlacklisted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1259,
														"src": "1961:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "1928:47:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1269,
												"nodeType": "ExpressionStatement",
												"src": "1928:47:9"
											}
										]
									},
									"functionSelector": "153b0d1e",
									"id": 1271,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1261,
												"name": "onlyOwner",
												"nameLocations": [
													"1908:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "1908:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "1908:9:9"
										}
									],
									"name": "setBlacklist",
									"nameLocation": "1847:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1257,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "1868:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1860:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1860:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "_isBlacklisted",
												"nameLocation": "1883:14:9",
												"nodeType": "VariableDeclaration",
												"scope": 1271,
												"src": "1878:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1258,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1878:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1859:39:9"
									},
									"returnParameters": {
										"id": 1263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1918:0:9"
									},
									"scope": 1728,
									"src": "1838:144:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1284,
										"nodeType": "Block",
										"src": "2084:94:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1279,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2102:31:9",
															"subExpression": {
																"baseExpression": {
																	"id": 1276,
																	"name": "blacklistedAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1192,
																	"src": "2103:20:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1278,
																"indexExpression": {
																	"id": 1277,
																	"name": "_address",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1273,
																	"src": "2124:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2103:30:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4164647265737320697320626c61636b6c6973746564",
															"id": 1280,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2135:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															},
															"value": "Address is blacklisted"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_d4ef511f436f3f7245282757820515c5a24baadd67f43d791686edbbb4ae9b53",
																"typeString": "literal_string \"Address is blacklisted\""
															}
														],
														"id": 1275,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2094:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2094:66:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1282,
												"nodeType": "ExpressionStatement",
												"src": "2094:66:9"
											},
											{
												"id": 1283,
												"nodeType": "PlaceholderStatement",
												"src": "2170:1:9"
											}
										]
									},
									"id": 1285,
									"name": "notBlacklisted",
									"nameLocation": "2051:14:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "2074:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1285,
												"src": "2066:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2066:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2065:18:9"
									},
									"src": "2042:136:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1299,
										"nodeType": "Block",
										"src": "2294:107:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1290,
																"name": "tradingEnabled",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1209,
																"src": "2312:14:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"baseExpression": {
																	"id": 1291,
																	"name": "whitelistAddresses",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1196,
																	"src": "2330:18:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 1293,
																"indexExpression": {
																	"id": 1292,
																	"name": "sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1287,
																	"src": "2349:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2330:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "2312:44:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54726164696e67206973206e6f7420656e61626c6564",
															"id": 1295,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2358:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3",
																"typeString": "literal_string \"Trading is not enabled\""
															},
															"value": "Trading is not enabled"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a1cf121d9169d19296b18029c78b9952c40a7f80bc84e64499942ce78f6fcd3",
																"typeString": "literal_string \"Trading is not enabled\""
															}
														],
														"id": 1289,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2304:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1296,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2304:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1297,
												"nodeType": "ExpressionStatement",
												"src": "2304:79:9"
											},
											{
												"id": 1298,
												"nodeType": "PlaceholderStatement",
												"src": "2393:1:9"
											}
										]
									},
									"id": 1300,
									"name": "tradingGuard",
									"nameLocation": "2265:12:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1287,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "2286:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1300,
												"src": "2278:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:16:9"
									},
									"src": "2256:145:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1309,
										"nodeType": "Block",
										"src": "2483:66:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1304,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2501:7:9",
															"subExpression": {
																"id": 1303,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1212,
																"src": "2502:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436f6e747261637420697320706175736564",
															"id": 1305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2510:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															},
															"value": "Contract is paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e55600974a468a5baf1f1454a24481ec68f787ee02cd9f1d97c35ce2a8d2093d",
																"typeString": "literal_string \"Contract is paused\""
															}
														],
														"id": 1302,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2493:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2493:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1307,
												"nodeType": "ExpressionStatement",
												"src": "2493:38:9"
											},
											{
												"id": 1308,
												"nodeType": "PlaceholderStatement",
												"src": "2541:1:9"
											}
										]
									},
									"id": 1310,
									"name": "whenNotPaused",
									"nameLocation": "2467:13:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1301,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2480:2:9"
									},
									"src": "2458:91:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1327,
										"nodeType": "Block",
										"src": "2646:107:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 1315,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "2664:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 1316,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2670:9:9",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "2664:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1321,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1317,
																		"name": "lastClaimed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1204,
																		"src": "2683:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1319,
																	"indexExpression": {
																		"id": 1318,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1312,
																		"src": "2695:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2683:17:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1320,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2703:6:9",
																	"subdenomination": "days",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_86400_by_1",
																		"typeString": "int_const 86400"
																	},
																	"value": "1"
																},
																"src": "2683:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2664:45:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "436c61696d20636f6f6c646f776e20616374697665",
															"id": 1323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2711:23:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32",
																"typeString": "literal_string \"Claim cooldown active\""
															},
															"value": "Claim cooldown active"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_854301ad1dfe901b7be3422f2f2876ca2556723dba19c5b18df1ea73290b7d32",
																"typeString": "literal_string \"Claim cooldown active\""
															}
														],
														"id": 1314,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2656:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:79:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1325,
												"nodeType": "ExpressionStatement",
												"src": "2656:79:9"
											},
											{
												"id": 1326,
												"nodeType": "PlaceholderStatement",
												"src": "2745:1:9"
											}
										]
									},
									"id": 1328,
									"name": "cooldownPeriod",
									"nameLocation": "2617:14:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1313,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1312,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "2640:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1328,
												"src": "2632:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1311,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2632:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2631:14:9"
									},
									"src": "2608:145:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1343,
										"nodeType": "Block",
										"src": "2843:105:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 1338,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1333,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1330,
																"src": "2861:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 1336,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2882:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GeckoGold_$1728",
																			"typeString": "contract GeckoGold"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_GeckoGold_$1728",
																			"typeString": "contract GeckoGold"
																		}
																	],
																	"id": 1335,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2874:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1334,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2874:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1337,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2874:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2861:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f74207472616e7366657220746f2074686520636f6e747261637420697473656c66",
															"id": 1339,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2889:40:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388",
																"typeString": "literal_string \"Cannot transfer to the contract itself\""
															},
															"value": "Cannot transfer to the contract itself"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f2d40170008c2a05ed798c1c292c0cf2936565d07c8ab34db96f1d0e0d4e6388",
																"typeString": "literal_string \"Cannot transfer to the contract itself\""
															}
														],
														"id": 1332,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2853:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1340,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2853:77:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1341,
												"nodeType": "ExpressionStatement",
												"src": "2853:77:9"
											},
											{
												"id": 1342,
												"nodeType": "PlaceholderStatement",
												"src": "2940:1:9"
											}
										]
									},
									"id": 1344,
									"name": "noSelfTransfer",
									"nameLocation": "2809:14:9",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1330,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "2832:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1344,
												"src": "2824:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1329,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2824:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2823:19:9"
									},
									"src": "2800:148:9",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1358,
										"nodeType": "Block",
										"src": "3044:80:9",
										"statements": [
											{
												"expression": {
													"id": 1351,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1349,
														"name": "tradingEnabled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1209,
														"src": "3054:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1350,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3071:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3054:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1352,
												"nodeType": "ExpressionStatement",
												"src": "3054:21:9"
											},
											{
												"expression": {
													"id": 1356,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1353,
														"name": "tradingStartBlock",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1206,
														"src": "3085:17:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1354,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "3105:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1355,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3111:6:9",
														"memberName": "number",
														"nodeType": "MemberAccess",
														"src": "3105:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3085:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1357,
												"nodeType": "ExpressionStatement",
												"src": "3085:32:9"
											}
										]
									},
									"functionSelector": "8a8c523c",
									"id": 1359,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1347,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1346,
												"name": "onlyOwner",
												"nameLocations": [
													"3034:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3034:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3034:9:9"
										}
									],
									"name": "enableTrading",
									"nameLocation": "3009:13:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1345,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3022:2:9"
									},
									"returnParameters": {
										"id": 1348,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3044:0:9"
									},
									"scope": 1728,
									"src": "3000:124:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1372,
										"nodeType": "Block",
										"src": "3230:52:9",
										"statements": [
											{
												"expression": {
													"id": 1370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1366,
															"name": "whitelistAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "3240:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1368,
														"indexExpression": {
															"id": 1367,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1361,
															"src": "3259:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3240:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1369,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3271:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3240:35:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1371,
												"nodeType": "ExpressionStatement",
												"src": "3240:35:9"
											}
										]
									},
									"functionSelector": "e43252d7",
									"id": 1373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1364,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1363,
												"name": "onlyOwner",
												"nameLocations": [
													"3220:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3220:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3220:9:9"
										}
									],
									"name": "addToWhitelist",
									"nameLocation": "3178:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1361,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3201:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "3193:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3193:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3192:18:9"
									},
									"returnParameters": {
										"id": 1365,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3230:0:9"
									},
									"scope": 1728,
									"src": "3169:113:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1386,
										"nodeType": "Block",
										"src": "3398:53:9",
										"statements": [
											{
												"expression": {
													"id": 1384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1380,
															"name": "whitelistAddresses",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1196,
															"src": "3408:18:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 1382,
														"indexExpression": {
															"id": 1381,
															"name": "_address",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1375,
															"src": "3427:8:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3408:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1383,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3439:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3408:36:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1385,
												"nodeType": "ExpressionStatement",
												"src": "3408:36:9"
											}
										]
									},
									"functionSelector": "8ab1d681",
									"id": 1387,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1377,
												"name": "onlyOwner",
												"nameLocations": [
													"3388:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3388:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3388:9:9"
										}
									],
									"name": "removeFromWhitelist",
									"nameLocation": "3341:19:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1375,
												"mutability": "mutable",
												"name": "_address",
												"nameLocation": "3369:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1387,
												"src": "3361:16:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1374,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3361:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3360:18:9"
									},
									"returnParameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3398:0:9"
									},
									"scope": 1728,
									"src": "3332:119:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1405,
										"nodeType": "Block",
										"src": "3543:116:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1397,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1395,
																"name": "newTaxRate",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "3561:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1396,
																"name": "MAX_TAX_RATE",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1178,
																"src": "3575:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3561:26:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54617820726174652065786365656473206d6178696d756d206c696d6974",
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3589:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978",
																"typeString": "literal_string \"Tax rate exceeds maximum limit\""
															},
															"value": "Tax rate exceeds maximum limit"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_fbc034c09bea0742157f703c608b7d16f6a45107ea4a25abfcb05a3ea9192978",
																"typeString": "literal_string \"Tax rate exceeds maximum limit\""
															}
														],
														"id": 1394,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3553:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3553:69:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1400,
												"nodeType": "ExpressionStatement",
												"src": "3553:69:9"
											},
											{
												"expression": {
													"id": 1403,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1401,
														"name": "taxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1175,
														"src": "3632:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1402,
														"name": "newTaxRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1389,
														"src": "3642:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3632:20:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1404,
												"nodeType": "ExpressionStatement",
												"src": "3632:20:9"
											}
										]
									},
									"functionSelector": "c6d69a30",
									"id": 1406,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1392,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1391,
												"name": "onlyOwner",
												"nameLocations": [
													"3533:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "3533:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3533:9:9"
										}
									],
									"name": "setTaxRate",
									"nameLocation": "3493:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1390,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1389,
												"mutability": "mutable",
												"name": "newTaxRate",
												"nameLocation": "3512:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "3504:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1388,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3504:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3503:20:9"
									},
									"returnParameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3543:0:9"
									},
									"scope": 1728,
									"src": "3484:175:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										582
									],
									"body": {
										"id": 1465,
										"nodeType": "Block",
										"src": "3900:328:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1430,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1410,
																"src": "3918:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1431,
																"name": "MAX_TRANSFER_AMOUNT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1185,
																"src": "3928:19:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3918:29:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178696d756d207472616e7366657220616d6f756e74",
															"id": 1433,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3949:33:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef",
																"typeString": "literal_string \"Exceeds maximum transfer amount\""
															},
															"value": "Exceeds maximum transfer amount"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c1e494d9ea7434976f4346b394c3a5cbc904501fc867b2ab696faf278aec2bef",
																"typeString": "literal_string \"Exceeds maximum transfer amount\""
															}
														],
														"id": 1429,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "3910:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3910:73:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1435,
												"nodeType": "ExpressionStatement",
												"src": "3910:73:9"
											},
											{
												"assignments": [
													1437
												],
												"declarations": [
													{
														"constant": false,
														"id": 1437,
														"mutability": "mutable",
														"name": "tax",
														"nameLocation": "4002:3:9",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "3994:11:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1436,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3994:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1444,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1440,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1438,
																	"name": "amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1410,
																	"src": "4009:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1439,
																	"name": "taxRate",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1175,
																	"src": "4018:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4009:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1441,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "4008:18:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "313030",
														"id": 1442,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4029:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_100_by_1",
															"typeString": "int_const 100"
														},
														"value": "100"
													},
													"src": "4008:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3994:38:9"
											},
											{
												"assignments": [
													1446
												],
												"declarations": [
													{
														"constant": false,
														"id": 1446,
														"mutability": "mutable",
														"name": "amountAfterTax",
														"nameLocation": "4050:14:9",
														"nodeType": "VariableDeclaration",
														"scope": 1465,
														"src": "4042:22:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1445,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "4042:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1450,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1447,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1410,
														"src": "4067:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 1448,
														"name": "tax",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1437,
														"src": "4076:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4067:12:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4042:37:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1452,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4138:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1453,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4142:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4138:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1454,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4150:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1455,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4150:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1456,
															"name": "tax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "4159:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1451,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "4128:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4128:35:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "4128:35:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1461,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "4195:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1462,
															"name": "amountAfterTax",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1446,
															"src": "4206:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 1459,
															"name": "super",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967271,
															"src": "4180:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_super$_GeckoGold_$1728_$",
																"typeString": "type(contract super GeckoGold)"
															}
														},
														"id": 1460,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4186:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 582,
														"src": "4180:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) returns (bool)"
														}
													},
													"id": 1463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4180:41:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1428,
												"id": 1464,
												"nodeType": "Return",
												"src": "4173:48:9"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 1466,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"expression": {
														"id": 1414,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3808:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3812:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3808:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1416,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1413,
												"name": "notBlacklisted",
												"nameLocations": [
													"3793:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1285,
												"src": "3793:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3793:26:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1418,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "3833:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1419,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3837:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "3833:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1420,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1417,
												"name": "tradingGuard",
												"nameLocations": [
													"3820:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1300,
												"src": "3820:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3820:24:9"
										},
										{
											"id": 1422,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1421,
												"name": "whenNotPaused",
												"nameLocations": [
													"3845:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "3845:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3845:13:9"
										},
										{
											"arguments": [
												{
													"id": 1424,
													"name": "recipient",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1408,
													"src": "3874:9:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1425,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1423,
												"name": "noSelfTransfer",
												"nameLocations": [
													"3859:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1344,
												"src": "3859:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "3859:25:9"
										}
									],
									"name": "transfer",
									"nameLocation": "3733:8:9",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 1412,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3784:8:9"
									},
									"parameters": {
										"id": 1411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "3750:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3742:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1407,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3742:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1410,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3769:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3761:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3761:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3741:35:9"
									},
									"returnParameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1427,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1466,
												"src": "3894:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1426,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3894:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3893:6:9"
									},
									"scope": 1728,
									"src": "3724:504:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1483,
										"nodeType": "Block",
										"src": "4338:89:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 1472,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4354:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1473,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4358:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4354:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1474,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4366:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1471,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "4348:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1475,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4348:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1476,
												"nodeType": "ExpressionStatement",
												"src": "4348:25:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1478,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4401:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1479,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4405:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4401:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1480,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1468,
															"src": "4413:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1477,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "4388:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4388:32:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1482,
												"nodeType": "EmitStatement",
												"src": "4383:37:9"
											}
										]
									},
									"functionSelector": "42966c68",
									"id": 1484,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "4308:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1468,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4321:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1484,
												"src": "4313:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1467,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4313:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4312:16:9"
									},
									"returnParameters": {
										"id": 1470,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4338:0:9"
									},
									"scope": 1728,
									"src": "4299:128:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1503,
										"nodeType": "Block",
										"src": "4545:83:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1492,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4561:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4561:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1494,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "4570:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1491,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 845,
														"src": "4555:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4555:22:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1496,
												"nodeType": "ExpressionStatement",
												"src": "4555:22:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1498,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "4605:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4605:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1500,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1486,
															"src": "4614:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1497,
														"name": "TokensBurned",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1715,
														"src": "4592:12:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4592:29:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1502,
												"nodeType": "EmitStatement",
												"src": "4587:34:9"
											}
										]
									},
									"functionSelector": "d595c331",
									"id": 1504,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1489,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1488,
												"name": "onlyOwner",
												"nameLocations": [
													"4535:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4535:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4535:9:9"
										}
									],
									"name": "burnSupply",
									"nameLocation": "4499:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1486,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "4518:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1504,
												"src": "4510:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1485,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4510:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4509:16:9"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4545:0:9"
									},
									"scope": 1728,
									"src": "4490:138:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1537,
										"nodeType": "Block",
										"src": "4759:229:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1520,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 1514,
																		"name": "engagementPoints",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1200,
																		"src": "4777:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 1516,
																	"indexExpression": {
																		"id": 1515,
																		"name": "user",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1506,
																		"src": "4794:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "4777:22:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"id": 1517,
																	"name": "points",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1508,
																	"src": "4802:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "4777:31:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1519,
																"name": "MAX_ENGAGEMENT_POINTS",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1188,
																"src": "4812:21:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4777:56:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45786365656473206d6178696d756d20656e676167656d656e7420706f696e7473",
															"id": 1521,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4835:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a",
																"typeString": "literal_string \"Exceeds maximum engagement points\""
															},
															"value": "Exceeds maximum engagement points"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_f86cc0cf70f927ab09c8552e929970aba9996911391ca3361e5616e8554c272a",
																"typeString": "literal_string \"Exceeds maximum engagement points\""
															}
														],
														"id": 1513,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4769:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1522,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4769:102:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1523,
												"nodeType": "ExpressionStatement",
												"src": "4769:102:9"
											},
											{
												"expression": {
													"id": 1528,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1524,
															"name": "engagementPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "4881:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1526,
														"indexExpression": {
															"id": 1525,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "4898:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4881:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 1527,
														"name": "points",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1508,
														"src": "4907:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4881:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1529,
												"nodeType": "ExpressionStatement",
												"src": "4881:32:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1531,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1506,
															"src": "4952:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1532,
																"name": "engagementPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "4958:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1534,
															"indexExpression": {
																"id": 1533,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1506,
																"src": "4975:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4958:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1530,
														"name": "EngagementPointsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "4928:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4928:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "EmitStatement",
												"src": "4923:58:9"
											}
										]
									},
									"functionSelector": "aabd801d",
									"id": 1538,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1511,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1510,
												"name": "onlyOwner",
												"nameLocations": [
													"4749:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "4749:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "4749:9:9"
										}
									],
									"name": "updateEngagementPoints",
									"nameLocation": "4687:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1509,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1506,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "4718:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "4710:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1505,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4710:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1508,
												"mutability": "mutable",
												"name": "points",
												"nameLocation": "4732:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1538,
												"src": "4724:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1507,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4724:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4709:30:9"
									},
									"returnParameters": {
										"id": 1512,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4759:0:9"
									},
									"scope": 1728,
									"src": "4678:310:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1569,
										"nodeType": "Block",
										"src": "5119:189:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1552,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 1548,
																	"name": "engagementPoints",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1200,
																	"src": "5137:16:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 1550,
																"indexExpression": {
																	"id": 1549,
																	"name": "user",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1540,
																	"src": "5154:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "5137:22:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1551,
																"name": "points",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1542,
																"src": "5163:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5137:32:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420656e6f75676820706f696e7473",
															"id": 1553,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5171:19:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238",
																"typeString": "literal_string \"Not enough points\""
															},
															"value": "Not enough points"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_18776e50904b1763deb3c3905e2a83f4ed780a7b905208102bd277daa4f64238",
																"typeString": "literal_string \"Not enough points\""
															}
														],
														"id": 1547,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5129:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1554,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5129:62:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1555,
												"nodeType": "ExpressionStatement",
												"src": "5129:62:9"
											},
											{
												"expression": {
													"id": 1560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1556,
															"name": "engagementPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "5201:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1558,
														"indexExpression": {
															"id": 1557,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "5218:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5201:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 1559,
														"name": "points",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1542,
														"src": "5227:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5201:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1561,
												"nodeType": "ExpressionStatement",
												"src": "5201:32:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1563,
															"name": "user",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1540,
															"src": "5272:4:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 1564,
																"name": "engagementPoints",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1200,
																"src": "5278:16:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																	"typeString": "mapping(address => uint256)"
																}
															},
															"id": 1566,
															"indexExpression": {
																"id": 1565,
																"name": "user",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1540,
																"src": "5295:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "5278:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1562,
														"name": "EngagementPointsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1727,
														"src": "5248:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1567,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5248:53:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1568,
												"nodeType": "EmitStatement",
												"src": "5243:58:9"
											}
										]
									},
									"functionSelector": "17386e2c",
									"id": 1570,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1545,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1544,
												"name": "onlyOwner",
												"nameLocations": [
													"5109:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "5109:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5109:9:9"
										}
									],
									"name": "deductEngagementPoints",
									"nameLocation": "5047:22:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1543,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1540,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "5078:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "5070:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1539,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5070:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1542,
												"mutability": "mutable",
												"name": "points",
												"nameLocation": "5092:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1570,
												"src": "5084:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1541,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5084:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5069:30:9"
									},
									"returnParameters": {
										"id": 1546,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5119:0:9"
									},
									"scope": 1728,
									"src": "5038:270:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "5474:494:9",
										"statements": [
											{
												"assignments": [
													1584
												],
												"declarations": [
													{
														"constant": false,
														"id": 1584,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5492:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1636,
														"src": "5484:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1583,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5484:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1589,
												"initialValue": {
													"baseExpression": {
														"id": 1585,
														"name": "engagementPoints",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1200,
														"src": "5501:16:9",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 1588,
													"indexExpression": {
														"expression": {
															"id": 1586,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5518:3:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5522:6:9",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5518:10:9",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5501:28:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5484:45:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1591,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "5547:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1592,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5556:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5547:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f207265776172647320617661696c61626c65",
															"id": 1594,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5559:22:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															},
															"value": "No rewards available"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_893728d0e71b0800df2adedc4ebc96c8ebb7f6a47f5b7d4635aabadfc4a61040",
																"typeString": "literal_string \"No rewards available\""
															}
														],
														"id": 1590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5539:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5539:43:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1596,
												"nodeType": "ExpressionStatement",
												"src": "5539:43:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1603,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1599,
																			"name": "owner",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 67,
																			"src": "5610:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 1600,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5610:7:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1598,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 558,
																	"src": "5600:9:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address) view returns (uint256)"
																	}
																},
																"id": 1601,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5600:18:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 1602,
																"name": "reward",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1584,
																"src": "5622:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5600:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742072657761726420737570706c79",
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5630:28:9",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a",
																"typeString": "literal_string \"Insufficient reward supply\""
															},
															"value": "Insufficient reward supply"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3e54007a3cea26f1df7be622734ca4d55e1e33bc36ebdd965b39029b6ccfdd4a",
																"typeString": "literal_string \"Insufficient reward supply\""
															}
														],
														"id": 1597,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5592:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 1605,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5592:67:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1606,
												"nodeType": "ExpressionStatement",
												"src": "5592:67:9"
											},
											{
												"expression": {
													"id": 1612,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1607,
															"name": "engagementPoints",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1200,
															"src": "5705:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1610,
														"indexExpression": {
															"expression": {
																"id": 1608,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5722:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1609,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5726:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5722:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5705:28:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 1611,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5736:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5705:32:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1613,
												"nodeType": "ExpressionStatement",
												"src": "5705:32:9"
											},
											{
												"expression": {
													"id": 1620,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 1614,
															"name": "lastClaimed",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1204,
															"src": "5789:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 1617,
														"indexExpression": {
															"expression": {
																"id": 1615,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5801:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1616,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5805:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5801:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5789:23:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 1618,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5815:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 1619,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5821:9:9",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5815:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5789:41:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1621,
												"nodeType": "ExpressionStatement",
												"src": "5789:41:9"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1623,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "5885:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1624,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5885:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 1625,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5894:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5898:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5894:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1627,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "5906:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1622,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 702,
														"src": "5875:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5875:38:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1629,
												"nodeType": "ExpressionStatement",
												"src": "5875:38:9"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 1631,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5942:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 1632,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5946:6:9",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5942:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1584,
															"src": "5954:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1630,
														"name": "RewardClaimed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1721,
														"src": "5928:13:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5928:33:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1635,
												"nodeType": "EmitStatement",
												"src": "5923:38:9"
											}
										]
									},
									"functionSelector": "b88a802f",
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1573,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1572,
												"name": "whenNotPaused",
												"nameLocations": [
													"5406:13:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1310,
												"src": "5406:13:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5406:13:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1575,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5435:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1576,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5439:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5435:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1577,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1574,
												"name": "notBlacklisted",
												"nameLocations": [
													"5420:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1285,
												"src": "5420:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5420:26:9"
										},
										{
											"arguments": [
												{
													"expression": {
														"id": 1579,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "5462:3:9",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5466:6:9",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "5462:10:9",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 1581,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1578,
												"name": "cooldownPeriod",
												"nameLocations": [
													"5447:14:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1328,
												"src": "5447:14:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "5447:26:9"
										}
									],
									"name": "claimReward",
									"nameLocation": "5383:11:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1571,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5394:2:9"
									},
									"returnParameters": {
										"id": 1582,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5474:0:9"
									},
									"scope": 1728,
									"src": "5374:594:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1648,
										"nodeType": "Block",
										"src": "6095:42:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1645,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1639,
															"src": "6122:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1644,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 558,
														"src": "6112:9:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 1646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6112:18:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1643,
												"id": 1647,
												"nodeType": "Return",
												"src": "6105:25:9"
											}
										]
									},
									"functionSelector": "e3d670d7",
									"id": 1649,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balance",
									"nameLocation": "6038:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1639,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "6054:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "6046:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1638,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6046:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6045:17:9"
									},
									"returnParameters": {
										"id": 1643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1649,
												"src": "6086:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1641,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6086:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6085:9:9"
									},
									"scope": 1728,
									"src": "6029:108:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1669,
										"nodeType": "Block",
										"src": "6288:65:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1664,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6332:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_GeckoGold_$1728",
																			"typeString": "contract GeckoGold"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_GeckoGold_$1728",
																			"typeString": "contract GeckoGold"
																		}
																	],
																	"id": 1663,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6324:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 1662,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6324:7:9",
																		"typeDescriptions": {}
																	}
																},
																"id": 1665,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6324:13:9",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6338:7:9",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "6324:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"arguments": [],
																	"expression": {
																		"argumentTypes": [],
																		"id": 1658,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 67,
																		"src": "6306:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																			"typeString": "function () view returns (address)"
																		}
																	},
																	"id": 1659,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6306:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1657,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6298:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 1656,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6298:8:9",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 1660,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6298:16:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 1661,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6315:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6298:25:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 1667,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6298:48:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1668,
												"nodeType": "ExpressionStatement",
												"src": "6298:48:9"
											}
										]
									},
									"functionSelector": "5fd8c710",
									"id": 1670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1652,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1651,
												"name": "onlyOwner",
												"nameLocations": [
													"6265:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6265:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6265:9:9"
										},
										{
											"id": 1654,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1653,
												"name": "nonReentrant",
												"nameLocations": [
													"6275:12:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 422,
												"src": "6275:12:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6275:12:9"
										}
									],
									"name": "withdrawBalance",
									"nameLocation": "6238:15:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6253:2:9"
									},
									"returnParameters": {
										"id": 1655,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6288:0:9"
									},
									"scope": 1728,
									"src": "6229:124:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1688,
										"nodeType": "Block",
										"src": "6473:56:9",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1683,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 67,
																"src": "6506:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6506:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1685,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1674,
															"src": "6515:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 1680,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1672,
																	"src": "6490:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1679,
																"name": "IERC20",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1050,
																"src": "6483:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20_$1050_$",
																	"typeString": "type(contract IERC20)"
																}
															},
															"id": 1681,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6483:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$1050",
																"typeString": "contract IERC20"
															}
														},
														"id": 1682,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6497:8:9",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1017,
														"src": "6483:22:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 1686,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6483:39:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1687,
												"nodeType": "ExpressionStatement",
												"src": "6483:39:9"
											}
										]
									},
									"functionSelector": "57376198",
									"id": 1689,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1677,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1676,
												"name": "onlyOwner",
												"nameLocations": [
													"6463:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6463:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6463:9:9"
										}
									],
									"name": "rescueTokens",
									"nameLocation": "6410:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1672,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "6431:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "6423:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1671,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6423:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1674,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6446:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1689,
												"src": "6438:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1673,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6438:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6422:31:9"
									},
									"returnParameters": {
										"id": 1678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6473:0:9"
									},
									"scope": 1728,
									"src": "6401:128:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1698,
										"nodeType": "Block",
										"src": "6608:30:9",
										"statements": [
											{
												"expression": {
													"id": 1696,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1694,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "6618:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1695,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6627:4:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6618:13:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1697,
												"nodeType": "ExpressionStatement",
												"src": "6618:13:9"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 1699,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1692,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1691,
												"name": "onlyOwner",
												"nameLocations": [
													"6598:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6598:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6598:9:9"
										}
									],
									"name": "pause",
									"nameLocation": "6581:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6586:2:9"
									},
									"returnParameters": {
										"id": 1693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6608:0:9"
									},
									"scope": 1728,
									"src": "6572:66:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 1708,
										"nodeType": "Block",
										"src": "6682:31:9",
										"statements": [
											{
												"expression": {
													"id": 1706,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1704,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1212,
														"src": "6692:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1705,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6701:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6692:14:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1707,
												"nodeType": "ExpressionStatement",
												"src": "6692:14:9"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 1709,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1702,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1701,
												"name": "onlyOwner",
												"nameLocations": [
													"6672:9:9"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "6672:9:9"
											},
											"nodeType": "ModifierInvocation",
											"src": "6672:9:9"
										}
									],
									"name": "unpause",
									"nameLocation": "6653:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1700,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6660:2:9"
									},
									"returnParameters": {
										"id": 1703,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6682:0:9"
									},
									"scope": 1728,
									"src": "6644:69:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"anonymous": false,
									"eventSelector": "fd38818f5291bf0bb3a2a48aadc06ba8757865d1dabd804585338aab3009dcb6",
									"id": 1715,
									"name": "TokensBurned",
									"nameLocation": "6756:12:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1714,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1711,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6785:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "6769:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1710,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6769:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1713,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6799:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1715,
												"src": "6791:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1712,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6768:38:9"
									},
									"src": "6750:57:9"
								},
								{
									"anonymous": false,
									"eventSelector": "106f923f993c2149d49b4255ff723acafa1f2d94393f561d3eda32ae348f7241",
									"id": 1721,
									"name": "RewardClaimed",
									"nameLocation": "6818:13:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1720,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1717,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6848:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6832:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1716,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6832:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1719,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6862:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6854:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1718,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6854:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6831:38:9"
									},
									"src": "6812:58:9"
								},
								{
									"anonymous": false,
									"eventSelector": "40547f371cf37574d1a01eeeb1593f8db1a3e44286bba3b92cf2867707c9e473",
									"id": 1727,
									"name": "EngagementPointsUpdated",
									"nameLocation": "6881:23:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1723,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "6921:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "6905:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1722,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6905:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1725,
												"indexed": false,
												"mutability": "mutable",
												"name": "newPoints",
												"nameLocation": "6935:9:9",
												"nodeType": "VariableDeclaration",
												"scope": 1727,
												"src": "6927:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1724,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6927:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6904:41:9"
									},
									"src": "6875:71:9"
								}
							],
							"scope": 1729,
							"src": "362:6586:9",
							"usedErrors": [
								13,
								18,
								159,
								164,
								169,
								178,
								183,
								188
							],
							"usedEvents": [
								24,
								984,
								993,
								1715,
								1721,
								1727
							]
						}
					],
					"src": "32:6917:9"
				},
				"id": 9
			}
		}
	}
}